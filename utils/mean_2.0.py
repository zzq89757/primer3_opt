from collections import defaultdict,deque
from math import log, sqrt


################ matrix start ###############
#############################################

# intloop energy matrix
int_loop_energy_dict = defaultdict(deque)


int_loop_energy_dict["11dg"] = deque([
		# A A
		[
			1.3, 2.2, 0.9, 1.0, 1.7, 2.4, 1.0, 1.4, 1.7, 2.4, 1.0, 1.4, 1.7, 2.4, 1.0, 1.4
		],
		# A C
		[
			0.8, 1.4, -0.4, 1.0, 1.6, 2.1, 1.0, 1.6, -0.2, 1.0, -1.2, 2.0, 1.0, 1.4, 2.0, 1.1
		],
		# A G
		[
			1.0, 1.7, 0.3, 1.0, 1.5, 2.0, 1.0, 1.0, 0.1, 1.0, -0.3, 2.0, 1.0, 1.4, 2.0, 0.6
		],
		# A T
		[
			1.2, 1.7, 0.2, 1.0, 1.7, 2.7, 1.0, 1.4, 0.2, 1.0, -0.3, 2.0, 1.0, 1.4, 2.0, 1.4
		],
		# A N
		[
			1.1, 1.8, 0.2, 1.0, 1.6, 2.3, 1.0, 1.4, 0.5, 1.4, -0.2, 1.9, 1.2, 1.6, 1.8, 1.1
		],
		# C A
		[
			1.1, 2.1, 0.8, 1.0, 1.7, 1.8, 1.0, 1.4, 0.5, 1.0, 0.3, 2.0, 1.0, 1.4, 2.0, 0.6
		],
		# C C
		[
			0.6, 1.2, -0.5, 1.0, 1.6, 1.5, 1.0, 1.6, -0.1, 1.0, -1.3, 2.0, 1.0, 1.0, 2.0, 0.3
		],
		# C G
		[
			0.9, 1.5, 0.1, 1.0, 1.5, 1.4, 1.0, 1.0, 0.1, 1.0, -0.3, 2.0, 1.0, 1.0, 2.0, -0.2
		],
		# C T
		[
			1.0, 1.5, 0.1, 1.0, 1.7, 2.0, 1.0, 1.4, 0.3, 1.0, -0.3, 2.0, 1.0, 1.0, 2.0, 0.6
		],
		# C N
		[
			0.9, 1.6, 0.1, 1.0, 1.6, 1.7, 1.0, 1.4, 0.2, 1.0, -0.4, 2.0, 1.0, 1.1, 2.0, 0.3
		],
		# G A
		[
			0.9, 2.1, 0.5, 1.0, 1.4, 1.8, 1.0, 1.4, -0.1, 1.0, -0.7, 2.0, 1.0, 2.0, 2.0, 1.1
		],
		# G C
		[
			0.3, 1.3, -0.8, 1.0, 1.3, 1.6, 1.0, 1.6, -0.8, 1.0, -2.2, 2.0, 1.0, 1.6, 2.0, 0.9
		],
		# G G
		[
			0.6, 1.6, -0.1, 1.0, 1.2, 1.5, 1.0, 1.0, -0.5, 1.0, -1.3, 2.0, 1.0, 1.6, 2.0, 0.3
		],
		# G T
		[
			0.8, 1.6, -0.2, 1.0, 1.4, 2.1, 1.0, 1.4, -0.4, 1.0, -1.2, 2.0, 1.0, 1.6, 2.0, 1.1
		],
		# G N
		[
			0.7, 1.7, -0.2, 1.0, 1.3, 1.8, 1.0, 1.4, -0.5, 1.0, -1.4, 2.0, 1.0, 1.7, 2.0, 0.9
		],
		# T A
		[
			1.4, 2.3, 1.2, 1.0, 2.3, 2.1, 1.0, 1.7, 1.2, 1.0, 0.9, 2.0, 1.0, 1.7, 2.0, 1.4
		],
		# T C
		[
			0.9, 1.4, -0.1, 1.0, 2.1, 1.8, 1.0, 2.0, 0.5, 1.0, -0.7, 2.0, 1.0, 1.4, 2.0, 1.1
		],
		# T G
		[
			1.1, 1.7, 0.5, 1.0, 2.1, 1.8, 1.0, 1.4, 0.8, 1.0, 0.3, 2.0, 1.0, 1.4, 2.0, 0.6
		],
		# T T
		[
			1.3, 1.7, 0.4, 1.0, 2.2, 2.4, 1.0, 1.7, 0.9, 1.0, 0.3, 2.0, 1.0, 1.4, 2.0, 1.4
		],
		# T N
		[
			1.2, 1.8, 0.5, 1.0, 2.2, 2.0, 1.0, 1.7, 0.8, 1.0, 0.2, 2.0, 1.0, 1.5, 2.0, 1.1
		],
		# N A
		[
			1.2, 2.2, 0.8, 1.0, 1.8, 2.0, 1.0, 1.5, 0.8, 1.4, 0.4, 1.9, 1.2, 1.9, 1.8, 1.1
		],
		# N C
		[
			0.7, 1.3, -0.5, 1.0, 1.7, 1.8, 1.0, 1.7, -0.2, 1.0, -1.4, 2.0, 1.0, 1.4, 2.0, 0.9
		],
		# N G
		[
			0.9, 1.6, 0.2, 1.0, 1.6, 1.7, 1.0, 1.1, 0.1, 1.0, -0.4, 2.0, 1.0, 1.4, 2.0, 0.3
		],
		# N T
		[
			1.1, 1.6, 0.1, 1.0, 1.8, 2.3, 1.0, 1.5, 0.2, 1.0, -0.4, 2.0, 1.0, 1.4, 2.0, 1.1
		],
		# N N
		[
			1.0, 1.7, 0.1, 1.0, 1.7, 1.9, 1.0, 1.5, 0.2, 1.1, -0.4, 2.0, 1.1, 1.5, 1.9, 0.9
		],

])

int_loop_energy_dict["11dh"] = deque([
    	# A A
		[
			12.9, 1.5, 10.7, 1.5, 10.4, 14.7, 10.4, -1.6, 1.8, 1.5, 1.6, 1.5, 10.4, 3.5, 10.4, -4.8
		],
		# A C
		[
			10.0, 10.9, 8.9, 10.9, 4.1, 12.8, 4.1, 1.3, 4.5, 10.9, -5.0, 10.9, 4.1, 11.6, 4.1, 0.5
		],
		# A G
		[
			5.0, 3.9, -6.3, 3.9, 5.3, 2.6, 5.3, -4.9, -2.2, 3.9, -9.9, 3.9, 5.3, -12.3, 5.3, -7.5
		],
		# A T
		[
			4.9, 9.8, 7.1, 9.8, 9.8, 7.5, 9.8, 4.3, 7.1, 9.8, 4.1, 9.8, 9.8, 4.3, 9.8, 5.7
		],
		# A N
		[
			8.2, 6.5, 5.1, 6.5, 7.4, 9.4, 7.4, -0.2, 2.8, 6.5, -2.3, 6.5, 7.4, 1.8, 7.4, -1.5
		],
		# C A
		[
			10.0, 13.2, 11.3, 13.2, 9.6, 5.9, 9.6, 0.1, 6.9, 13.2, -1.1, 13.2, 9.6, 3.0, 9.6, 0.7
		],
		# C C
		[
			-0.6, 4.6, 1.3, 4.6, 9.3, 7.5, 9.3, 1.9, 3.9, 4.6, -0.9, 4.6, 9.3, 0.5, 9.3, 2.1
		],
		# C G
		[
			4.0, 5.1, 6.1, 5.1, 5.1, 4.1, 5.1, 1.6, 6.1, 5.1, 0.1, 5.1, 5.1, 1.6, 5.1, -2.7
		],
		# C T
		[
			5.0, 5.3, -2.2, 5.3, 3.9, 2.6, 3.9, -12.3, -6.3, 5.3, -9.9, 5.3, 3.9, -4.9, 3.9, -7.5
		],
		# C N
		[
			4.6, 7.0, 4.1, 7.0, 7.0, 5.0, 7.0, -2.2, 2.6, 7.0, -3.0, 7.0, 7.0, 0.0, 7.0, -1.9
		],
		# G A
		[
			-1.4, 13.2, 11.3, 13.2, 4.2, 12.9, 4.2, -0.4, 6.9, 13.2, 3.4, 13.2, 4.2, 3.7, 4.2, -10.0
		],
		# G C
		[
			2.6, 3.9, 2.4, 3.9, 3.9, 6.0, 3.9, -0.6, 2.4, 3.9, -2.8, 3.9, 3.9, -0.6, 3.9, 0.3
		],
		# G G
		[
			-0.6, 9.3, 3.9, 9.3, 4.6, 7.5, 4.6, 0.5, 1.3, 9.3, -0.9, 9.3, 4.6, 1.9, 4.6, 2.1
		],
		# G T
		[
			10.0, 4.1, 4.5, 4.1, 10.9, 12.8, 10.9, 11.6, 8.9, 4.1, -5.0, 4.1, 10.9, 1.3, 10.9, 0.5
		],
		# G N
		[
			2.6, 7.6, 5.5, 7.6, 5.9, 9.8, 5.9, 2.8, 4.9, 7.6, -1.3, 7.6, 5.9, 1.6, 5.9, -1.8
		],
		# T A
		[
			12.1, 14.3, 11.9, 14.3, 14.3, 17.4, 14.3, 2.5, 11.9, 14.3, 8.4, 14.3, 14.3, 2.5, 14.3, 6.2
		],
		# T C
		[
			-1.4, 4.2, 6.9, 4.2, 13.2, 12.9, 13.2, 3.7, 11.3, 4.2, 3.4, 4.2, 13.2, -0.4, 13.2, -10.0
		],
		# T G
		[
			10.0, 9.6, 6.9, 9.6, 13.2, 5.9, 13.2, 3.0, 11.3, 9.6, -1.1, 9.6, 13.2, 0.1, 13.2, 0.7
		],
		# T T
		[
			12.9, 10.4, 1.8, 10.4, 1.5, 14.7, 1.5, 3.5, 10.7, 10.4, 1.6, 10.4, 1.5, -1.6, 1.5, -4.8
		],
		# T N
		[
			8.4, 9.6, 6.9, 9.6, 10.6, 12.7, 10.6, 3.2, 11.3, 9.6, 3.1, 9.6, 10.6, 0.1, 10.6, -2.0
		],
		# N A
		[
			8.4, 10.6, 11.3, 10.6, 9.6, 12.7, 9.6, 0.1, 6.9, 10.6, 3.1, 10.6, 9.6, 3.2, 9.6, -2.0
		],
		# N C
		[
			2.6, 5.9, 4.9, 5.9, 7.6, 9.8, 7.6, 1.6, 5.5, 5.9, -1.3, 5.9, 7.6, 2.8, 7.6, -1.8
		],
		# N G
		[
			4.6, 7.0, 2.6, 7.0, 7.0, 5.0, 7.0, 0.0, 4.1, 7.0, -3.0, 7.0, 7.0, -2.2, 7.0, -1.9
		],
		# N T
		[
			8.2, 7.4, 2.8, 7.4, 6.5, 9.4, 6.5, 1.8, 5.1, 7.4, -2.3, 7.4, 6.5, -0.2, 6.5, -1.5
		],
		# N N
		[
			6.0, 7.7, 5.4, 7.7, 7.7, 9.2, 7.7, 0.9, 5.4, 7.7, -0.9, 7.7, 7.7, 0.9, 7.7, -1.8
		],

])


int_loop_energy_dict["21dg"] = deque([
		# A A A
		[
			1.8, 2.0, 1.9, 2.5, 2.1, 2.3, 2.2, 2.2, 1.9, 2.3, 1.9, 2.5, 3.1, 2.7, 3.1, 2.5
		],
		# A A C
		[
			1.3, 1.5, 1.4, 2.0, 1.8, 2.0, 1.9, 1.9, 1.5, 1.9, 1.5, 2.1, 2.6, 2.2, 2.6, 2.0
		],
		# A A G
		[
			1.4, 1.6, 1.5, 2.1, 1.9, 2.1, 2.0, 2.0, 1.6, 2.0, 1.6, 2.2, 2.7, 2.3, 2.7, 2.1
		],
		# A A T
		[
			1.7, 1.9, 1.8, 2.4, 2.1, 2.3, 2.2, 2.2, 1.9, 2.3, 1.9, 2.5, 3.1, 2.7, 3.1, 2.5
		],
		# A A N
		[
			1.6, 1.8, 1.6, 2.2, 2.0, 2.2, 2.1, 2.1, 1.7, 2.1, 1.7, 2.3, 2.9, 2.5, 2.9, 2.3
		],
		# A C A
		[
			1.9, 2.1, 2.0, 2.6, 2.3, 2.5, 2.4, 2.4, 2.0, 2.4, 2.0, 2.6, 2.7, 2.3, 2.7, 2.1
		],
		# A C C
		[
			1.6, 1.8, 1.7, 2.3, 2.0, 2.2, 2.1, 2.1, 1.2, 1.6, 1.2, 1.8, 2.4, 2.0, 2.4, 1.8
		],
		# A C G
		[
			1.7, 1.9, 1.8, 2.4, 2.1, 2.3, 2.2, 2.2, 1.7, 2.1, 1.7, 2.3, 2.4, 2.0, 2.4, 1.8
		],
		# A C T
		[
			1.9, 2.1, 2.0, 2.6, 2.3, 2.5, 2.4, 2.4, 2.1, 2.5, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1
		],
		# A C N
		[
			1.8, 2.0, 1.9, 2.5, 2.2, 2.4, 2.3, 2.3, 1.8, 2.1, 1.8, 2.4, 2.5, 2.1, 2.5, 2.0
		],
		# A G A
		[
			1.8, 2.0, 1.9, 2.5, 2.6, 2.8, 2.7, 2.7, 1.9, 2.3, 1.9, 2.5, 3.1, 2.7, 3.1, 2.5
		],
		# A G C
		[
			1.4, 1.6, 1.5, 2.1, 1.8, 2.0, 1.9, 1.9, 1.5, 1.9, 1.5, 2.1, 2.8, 2.4, 2.8, 2.2
		],
		# A G G
		[
			1.5, 1.7, 1.6, 2.2, 1.5, 1.7, 1.6, 1.6, 1.6, 2.0, 1.6, 2.2, 2.6, 2.2, 2.6, 2.0
		],
		# A G T
		[
			1.8, 2.0, 1.9, 2.5, 2.4, 2.6, 2.5, 2.5, 1.9, 2.3, 1.9, 2.5, 3.1, 2.7, 3.1, 2.5
		],
		# A G N
		[
			1.6, 1.8, 1.7, 2.3, 2.1, 2.3, 2.2, 2.2, 1.7, 2.1, 1.7, 2.3, 2.9, 2.5, 2.9, 2.3
		],
		# A T A
		[
			2.4, 2.6, 2.5, 3.1, 2.2, 2.4, 2.3, 2.3, 2.4, 2.8, 2.4, 3.0, 2.5, 2.1, 2.5, 1.9
		],
		# A T C
		[
			2.0, 2.2, 2.1, 2.7, 1.9, 2.1, 2.0, 2.0, 2.1, 2.5, 2.1, 2.7, 2.2, 1.8, 2.2, 1.6
		],
		# A T G
		[
			2.2, 2.4, 2.3, 2.9, 1.9, 2.1, 2.0, 2.0, 2.1, 2.5, 2.1, 2.7, 2.2, 1.8, 2.2, 1.6
		],
		# A T T
		[
			2.4, 2.6, 2.5, 3.1, 2.2, 2.4, 2.3, 2.3, 2.5, 2.9, 2.5, 3.1, 2.5, 2.1, 2.5, 1.9
		],
		# A T N
		[
			2.2, 2.5, 2.4, 3.0, 2.0, 2.2, 2.1, 2.1, 2.3, 2.7, 2.3, 2.9, 2.4, 2.0, 2.4, 1.8
		],
		# A N A
		[
			2.0, 2.2, 2.1, 2.7, 2.3, 2.5, 2.4, 2.4, 2.0, 2.4, 2.0, 2.6, 2.9, 2.5, 2.9, 2.2
		],
		# A N C
		[
			1.6, 1.8, 1.7, 2.3, 1.9, 2.1, 2.0, 2.0, 1.6, 2.0, 1.6, 2.2, 2.5, 2.1, 2.5, 1.9
		],
		# A N G
		[
			1.7, 1.9, 1.8, 2.4, 1.9, 2.0, 2.0, 2.0, 1.8, 2.1, 1.8, 2.4, 2.5, 2.1, 2.5, 1.9
		],
		# A N T
		[
			1.9, 2.1, 2.0, 2.6, 2.2, 2.5, 2.4, 2.4, 2.1, 2.5, 2.1, 2.7, 2.9, 2.5, 2.9, 2.2
		],
		# A N N
		[
			1.8, 2.0, 1.9, 2.5, 2.1, 2.3, 2.2, 2.2, 1.9, 2.2, 1.9, 2.5, 2.7, 2.3, 2.7, 2.1
		],
		# C A A
		[
			1.5, 1.8, 1.6, 2.1, 1.9, 2.1, 1.8, 1.9, 1.6, 1.4, 1.6, 2.0, 2.9, 2.4, 2.7, 2.2
		],
		# C A C
		[
			1.0, 1.3, 1.1, 1.6, 1.6, 1.8, 1.5, 1.6, 1.2, 1.0, 1.2, 1.6, 2.4, 1.9, 2.2, 1.7
		],
		# C A G
		[
			1.1, 1.4, 1.2, 1.7, 1.7, 1.9, 1.6, 1.7, 1.3, 1.1, 1.3, 1.7, 2.5, 2.0, 2.3, 1.8
		],
		# C A T
		[
			1.4, 1.7, 1.5, 2.0, 1.9, 2.1, 1.8, 1.9, 1.6, 1.4, 1.6, 2.0, 2.9, 2.4, 2.7, 2.2
		],
		# C A N
		[
			1.2, 1.6, 1.4, 1.9, 1.8, 2.0, 1.7, 1.8, 1.4, 1.2, 1.4, 1.8, 2.7, 2.2, 2.5, 2.0
		],
		# C C A
		[
			1.6, 1.9, 1.7, 2.2, 2.1, 2.3, 2.0, 2.1, 1.7, 1.5, 1.7, 2.1, 2.5, 2.0, 2.3, 1.8
		],
		# C C C
		[
			1.3, 1.6, 1.4, 1.9, 1.8, 2.0, 1.7, 1.8, 0.9, 0.7, 0.9, 1.3, 2.2, 1.7, 2.0, 1.5
		],
		# C C G
		[
			1.4, 1.7, 1.5, 2.0, 1.9, 2.1, 1.8, 1.9, 1.4, 1.2, 1.4, 1.8, 2.2, 1.7, 2.0, 1.5
		],
		# C C T
		[
			1.6, 1.9, 1.7, 2.2, 2.1, 2.3, 2.0, 2.1, 1.8, 1.6, 1.8, 2.2, 2.5, 2.0, 2.3, 1.8
		],
		# C C N
		[
			1.5, 1.8, 1.6, 2.1, 2.0, 2.2, 1.9, 2.0, 1.4, 1.2, 1.4, 1.9, 2.4, 1.9, 2.1, 1.6
		],
		# C G A
		[
			1.5, 1.8, 1.6, 2.1, 2.4, 2.6, 2.3, 2.4, 1.6, 1.4, 1.6, 2.0, 2.9, 2.4, 2.7, 2.2
		],
		# C G C
		[
			1.1, 1.4, 1.2, 1.7, 1.6, 1.8, 1.5, 1.6, 1.2, 1.0, 1.2, 1.6, 2.6, 2.1, 2.4, 1.9
		],
		# C G G
		[
			1.2, 1.5, 1.3, 1.8, 1.3, 1.5, 1.2, 1.3, 1.3, 1.1, 1.3, 1.7, 2.4, 1.9, 2.2, 1.7
		],
		# C G T
		[
			1.5, 1.8, 1.6, 2.1, 2.2, 2.4, 2.1, 2.2, 1.6, 1.4, 1.6, 2.0, 2.9, 2.4, 2.7, 2.2
		],
		# C G N
		[
			1.3, 1.6, 1.4, 1.9, 1.9, 2.1, 1.8, 1.9, 1.4, 1.2, 1.4, 1.8, 2.7, 2.2, 2.5, 2.0
		],
		# C T A
		[
			2.1, 2.4, 2.2, 2.7, 2.0, 2.2, 1.9, 2.0, 2.1, 1.9, 2.1, 2.5, 2.3, 1.8, 2.1, 1.6
		],
		# C T C
		[
			1.7, 2.0, 1.8, 2.3, 1.7, 1.9, 1.6, 1.7, 1.8, 1.6, 1.8, 2.2, 2.0, 1.5, 1.8, 1.3
		],
		# C T G
		[
			1.9, 2.2, 2.0, 2.5, 1.7, 1.9, 1.6, 1.7, 1.8, 1.6, 1.8, 2.2, 2.0, 1.5, 1.8, 1.3
		],
		# C T T
		[
			2.1, 2.4, 2.2, 2.7, 2.0, 2.2, 1.9, 2.0, 2.2, 2.0, 2.2, 2.6, 2.3, 1.8, 2.1, 1.6
		],
		# C T N
		[
			1.9, 2.2, 2.1, 2.5, 1.9, 2.0, 1.8, 1.9, 2.0, 1.8, 2.0, 2.4, 2.1, 1.6, 2.0, 1.5
		],
		# C N A
		[
			1.7, 2.0, 1.8, 2.3, 2.1, 2.3, 2.0, 2.1, 1.8, 1.5, 1.8, 2.1, 2.6, 2.1, 2.5, 2.0
		],
		# C N C
		[
			1.3, 1.6, 1.4, 1.9, 1.7, 1.9, 1.6, 1.7, 1.3, 1.1, 1.3, 1.7, 2.3, 1.8, 2.1, 1.6
		],
		# C N G
		[
			1.4, 1.7, 1.5, 2.0, 1.6, 1.9, 1.6, 1.6, 1.4, 1.2, 1.4, 1.9, 2.3, 1.8, 2.1, 1.6
		],
		# C N T
		[
			1.6, 1.9, 1.8, 2.2, 2.0, 2.2, 1.9, 2.0, 1.8, 1.6, 1.8, 2.2, 2.6, 2.1, 2.5, 2.0
		],
		# C N N
		[
			1.5, 1.8, 1.6, 2.1, 1.9, 2.1, 1.8, 1.9, 1.5, 1.4, 1.5, 2.0, 2.5, 2.0, 2.3, 1.8
		],
		# G A A
		[
			1.4, 1.7, 1.5, 2.0, 1.8, 2.0, 1.3, 1.9, 1.5, 1.7, 1.5, 2.2, 2.7, 2.4, 2.7, 2.2
		],
		# G A C
		[
			0.9, 1.2, 1.0, 1.5, 1.5, 1.7, 1.0, 1.6, 1.1, 1.3, 1.1, 1.8, 2.2, 1.9, 2.2, 1.7
		],
		# G A G
		[
			1.0, 1.3, 1.1, 1.6, 1.6, 1.8, 1.1, 1.7, 1.2, 1.4, 1.2, 1.9, 2.3, 2.0, 2.3, 1.8
		],
		# G A T
		[
			1.3, 1.6, 1.4, 1.9, 1.8, 2.0, 1.3, 1.9, 1.5, 1.7, 1.5, 2.2, 2.7, 2.4, 2.7, 2.2
		],
		# G A N
		[
			1.1, 1.4, 1.2, 1.8, 1.7, 1.9, 1.2, 1.8, 1.3, 1.5, 1.3, 2.0, 2.5, 2.2, 2.5, 2.0
		],
		# G C A
		[
			1.5, 1.8, 1.6, 2.1, 2.0, 2.2, 1.5, 2.1, 1.6, 1.8, 1.6, 2.3, 2.3, 2.0, 2.3, 1.8
		],
		# G C C
		[
			1.2, 1.5, 1.3, 1.8, 1.7, 1.9, 1.2, 1.8, 0.8, 1.0, 0.8, 1.5, 2.0, 1.7, 2.0, 1.5
		],
		# G C G
		[
			1.3, 1.6, 1.4, 1.9, 1.8, 2.0, 1.3, 1.9, 1.3, 1.5, 1.3, 2.0, 2.0, 1.7, 2.0, 1.5
		],
		# G C T
		[
			1.5, 1.8, 1.6, 2.1, 2.0, 2.2, 1.5, 2.1, 1.7, 1.9, 1.7, 2.4, 2.3, 2.0, 2.3, 1.8
		],
		# G C N
		[
			1.4, 1.7, 1.5, 2.0, 1.9, 2.1, 1.4, 2.0, 1.4, 1.6, 1.4, 2.0, 2.1, 1.9, 2.1, 1.6
		],
		# G G A
		[
			1.4, 1.7, 1.5, 2.0, 2.3, 2.5, 1.8, 2.4, 1.5, 1.7, 1.5, 2.2, 2.7, 2.4, 2.7, 2.2
		],
		# G G C
		[
			1.0, 1.3, 1.1, 1.6, 1.5, 1.7, 1.0, 1.6, 1.1, 1.3, 1.1, 1.8, 2.4, 2.1, 2.4, 1.9
		],
		# G G G
		[
			1.1, 1.4, 1.2, 1.7, 1.2, 1.4, 0.7, 1.3, 1.2, 1.4, 1.2, 1.9, 2.2, 1.9, 2.2, 1.7
		],
		# G G T
		[
			1.4, 1.7, 1.5, 2.0, 2.1, 2.3, 1.6, 2.2, 1.5, 1.7, 1.5, 2.2, 2.7, 2.4, 2.7, 2.2
		],
		# G G N
		[
			1.2, 1.5, 1.3, 1.8, 1.8, 2.0, 1.3, 1.9, 1.3, 1.5, 1.3, 2.0, 2.5, 2.2, 2.5, 2.0
		],
		# G T A
		[
			2.0, 2.3, 2.1, 2.6, 1.9, 2.1, 1.4, 2.0, 2.0, 2.2, 2.0, 2.7, 2.1, 1.8, 2.1, 1.6
		],
		# G T C
		[
			1.6, 1.9, 1.7, 2.2, 1.6, 1.8, 1.1, 1.7, 1.7, 1.9, 1.7, 2.4, 1.8, 1.5, 1.8, 1.3
		],
		# G T G
		[
			1.8, 2.1, 1.9, 2.4, 1.6, 1.8, 1.1, 1.7, 1.7, 1.9, 1.7, 2.4, 1.8, 1.5, 1.8, 1.3
		],
		# G T T
		[
			2.0, 2.3, 2.1, 2.6, 1.9, 2.1, 1.4, 2.0, 2.1, 2.3, 2.1, 2.8, 2.1, 1.8, 2.1, 1.6
		],
		# G T N
		[
			1.9, 2.1, 1.9, 2.5, 1.8, 2.0, 1.2, 1.9, 1.9, 2.1, 1.9, 2.6, 2.0, 1.6, 2.0, 1.5
		],
		# G N A
		[
			1.6, 1.9, 1.7, 2.2, 2.0, 2.2, 1.5, 2.1, 1.6, 1.9, 1.6, 2.4, 2.5, 2.1, 2.5, 2.0
		],
		# G N C
		[
			1.2, 1.5, 1.3, 1.8, 1.6, 1.8, 1.1, 1.7, 1.2, 1.4, 1.2, 1.9, 2.1, 1.8, 2.1, 1.6
		],
		# G N G
		[
			1.3, 1.6, 1.4, 1.9, 1.6, 1.8, 1.1, 1.6, 1.4, 1.5, 1.4, 2.0, 2.1, 1.8, 2.1, 1.6
		],
		# G N T
		[
			1.6, 1.9, 1.6, 2.1, 1.9, 2.1, 1.4, 2.0, 1.7, 1.9, 1.7, 2.4, 2.5, 2.1, 2.5, 2.0
		],
		# G N N
		[
			1.4, 1.7, 1.5, 2.0, 1.8, 2.0, 1.3, 1.9, 1.5, 1.7, 1.5, 2.1, 2.3, 2.0, 2.3, 1.8
		],
		# T A A
		[
			1.9, 2.0, 1.9, 2.5, 2.1, 2.3, 2.1, 2.2, 1.9, 2.5, 1.9, 2.5, 3.1, 2.7, 3.0, 2.5
		],
		# T A C
		[
			1.4, 1.5, 1.4, 2.0, 1.8, 2.0, 1.8, 1.9, 1.5, 2.1, 1.5, 2.1, 2.6, 2.2, 2.5, 2.0
		],
		# T A G
		[
			1.5, 1.6, 1.5, 2.1, 1.9, 2.1, 1.9, 2.0, 1.6, 2.2, 1.6, 2.2, 2.7, 2.3, 2.6, 2.1
		],
		# T A T
		[
			1.8, 1.9, 1.8, 2.4, 2.1, 2.3, 2.1, 2.2, 1.9, 2.5, 1.9, 2.5, 3.1, 2.7, 3.0, 2.5
		],
		# T A N
		[
			1.6, 1.8, 1.6, 2.2, 2.0, 2.2, 2.0, 2.1, 1.7, 2.3, 1.7, 2.3, 2.9, 2.5, 2.8, 2.3
		],
		# T C A
		[
			2.0, 2.1, 2.0, 2.6, 2.3, 2.5, 2.3, 2.4, 2.0, 2.6, 2.0, 2.6, 2.7, 2.3, 2.6, 2.1
		],
		# T C C
		[
			1.7, 1.8, 1.7, 2.3, 2.0, 2.2, 2.0, 2.1, 1.2, 1.8, 1.2, 1.8, 2.4, 2.0, 2.3, 1.8
		],
		# T C G
		[
			1.8, 1.9, 1.8, 2.4, 2.1, 2.3, 2.1, 2.2, 1.7, 2.3, 1.7, 2.3, 2.4, 2.0, 2.3, 1.8
		],
		# T C T
		[
			2.0, 2.1, 2.0, 2.6, 2.3, 2.5, 2.3, 2.4, 2.1, 2.7, 2.1, 2.7, 2.7, 2.3, 2.6, 2.1
		],
		# T C N
		[
			1.9, 2.0, 1.9, 2.5, 2.2, 2.4, 2.2, 2.3, 1.8, 2.4, 1.8, 2.4, 2.5, 2.1, 2.5, 2.0
		],
		# T G A
		[
			1.9, 2.0, 1.9, 2.5, 2.6, 2.8, 2.6, 2.7, 1.9, 2.5, 1.9, 2.5, 3.1, 2.7, 3.0, 2.5
		],
		# T G C
		[
			1.5, 1.6, 1.5, 2.1, 1.8, 2.0, 1.8, 1.9, 1.5, 2.1, 1.5, 2.1, 2.8, 2.4, 2.7, 2.2
		],
		# T G G
		[
			1.6, 1.7, 1.6, 2.2, 1.5, 1.7, 1.5, 1.6, 1.6, 2.2, 1.6, 2.2, 2.6, 2.2, 2.5, 2.0
		],
		# T G T
		[
			1.9, 2.0, 1.9, 2.5, 2.4, 2.6, 2.4, 2.5, 1.9, 2.5, 1.9, 2.5, 3.1, 2.7, 3.0, 2.5
		],
		# T G N
		[
			1.7, 1.8, 1.7, 2.3, 2.1, 2.3, 2.1, 2.2, 1.7, 2.3, 1.7, 2.3, 2.9, 2.5, 2.8, 2.3
		],
		# T T A
		[
			2.5, 2.6, 2.5, 3.1, 2.2, 2.4, 2.2, 2.3, 2.4, 3.0, 2.4, 3.0, 2.5, 2.1, 2.4, 1.9
		],
		# T T C
		[
			2.1, 2.2, 2.1, 2.7, 1.9, 2.1, 1.9, 2.0, 2.1, 2.7, 2.1, 2.7, 2.2, 1.8, 2.1, 1.6
		],
		# T T G
		[
			2.3, 2.4, 2.3, 2.9, 1.9, 2.1, 1.9, 2.0, 2.1, 2.7, 2.1, 2.7, 2.2, 1.8, 2.1, 1.6
		],
		# T T T
		[
			2.5, 2.6, 2.5, 3.1, 2.2, 2.4, 2.2, 2.3, 2.5, 3.1, 2.5, 3.1, 2.5, 2.1, 2.4, 1.9
		],
		# T T N
		[
			2.4, 2.5, 2.4, 3.0, 2.0, 2.2, 2.0, 2.1, 2.3, 2.9, 2.3, 2.9, 2.4, 2.0, 2.2, 1.8
		],
		# T N A
		[
			2.1, 2.2, 2.1, 2.7, 2.3, 2.5, 2.3, 2.4, 2.0, 2.6, 2.0, 2.6, 2.9, 2.5, 2.8, 2.2
		],
		# T N C
		[
			1.7, 1.8, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.6, 2.2, 1.6, 2.2, 2.5, 2.1, 2.4, 1.9
		],
		# T N G
		[
			1.8, 1.9, 1.8, 2.4, 1.9, 2.0, 1.9, 2.0, 1.8, 2.4, 1.8, 2.4, 2.5, 2.1, 2.4, 1.9
		],
		# T N T
		[
			2.0, 2.1, 2.0, 2.6, 2.2, 2.5, 2.2, 2.4, 2.1, 2.7, 2.1, 2.7, 2.9, 2.5, 2.8, 2.2
		],
		# T N N
		[
			1.9, 2.0, 1.9, 2.5, 2.1, 2.3, 2.1, 2.2, 1.9, 2.5, 1.9, 2.5, 2.7, 2.3, 2.6, 2.1
		],
		# N A A
		[
			1.6, 1.9, 1.7, 2.3, 2.0, 2.2, 1.9, 2.0, 1.7, 2.0, 1.7, 2.3, 3.0, 2.5, 2.9, 2.4
		],
		# N A C
		[
			1.1, 1.4, 1.2, 1.8, 1.7, 1.9, 1.6, 1.8, 1.3, 1.6, 1.3, 1.9, 2.5, 2.0, 2.4, 1.9
		],
		# N A G
		[
			1.2, 1.5, 1.3, 1.9, 1.8, 2.0, 1.6, 1.9, 1.4, 1.7, 1.4, 2.0, 2.5, 2.1, 2.5, 2.0
		],
		# N A T
		[
			1.6, 1.8, 1.6, 2.2, 2.0, 2.2, 1.9, 2.0, 1.7, 2.0, 1.7, 2.3, 3.0, 2.5, 2.9, 2.4
		],
		# N A N
		[
			1.4, 1.6, 1.4, 2.0, 1.9, 2.1, 1.8, 2.0, 1.5, 1.8, 1.5, 2.1, 2.8, 2.4, 2.7, 2.1
		],
		# N C A
		[
			1.8, 2.0, 1.8, 2.4, 2.2, 2.4, 2.0, 2.2, 1.8, 2.1, 1.8, 2.4, 2.5, 2.1, 2.5, 2.0
		],
		# N C C
		[
			1.4, 1.7, 1.5, 2.1, 1.9, 2.1, 1.8, 2.0, 1.0, 1.3, 1.0, 1.6, 2.2, 1.9, 2.2, 1.6
		],
		# N C G
		[
			1.6, 1.8, 1.6, 2.2, 2.0, 2.2, 1.9, 2.0, 1.5, 1.8, 1.5, 2.1, 2.2, 1.9, 2.2, 1.6
		],
		# N C T
		[
			1.8, 2.0, 1.8, 2.4, 2.2, 2.4, 2.0, 2.2, 1.9, 2.2, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0
		],
		# N C N
		[
			1.6, 1.9, 1.7, 2.3, 2.1, 2.3, 1.9, 2.1, 1.6, 1.8, 1.6, 2.2, 2.4, 2.0, 2.3, 1.8
		],
		# N G A
		[
			1.6, 1.9, 1.7, 2.3, 2.5, 2.7, 2.4, 2.5, 1.7, 2.0, 1.7, 2.3, 3.0, 2.5, 2.9, 2.4
		],
		# N G C
		[
			1.2, 1.5, 1.3, 1.9, 1.7, 1.9, 1.6, 1.8, 1.3, 1.6, 1.3, 1.9, 2.6, 2.2, 2.6, 2.0
		],
		# N G G
		[
			1.4, 1.6, 1.4, 2.0, 1.4, 1.6, 1.2, 1.5, 1.4, 1.7, 1.4, 2.0, 2.5, 2.0, 2.4, 1.9
		],
		# N G T
		[
			1.6, 1.9, 1.7, 2.3, 2.3, 2.5, 2.1, 2.4, 1.7, 2.0, 1.7, 2.3, 3.0, 2.5, 2.9, 2.4
		],
		# N G N
		[
			1.4, 1.7, 1.5, 2.1, 2.0, 2.2, 1.9, 2.0, 1.5, 1.8, 1.5, 2.1, 2.8, 2.4, 2.7, 2.1
		],
		# N T A
		[
			2.2, 2.5, 2.3, 2.9, 2.1, 2.3, 1.9, 2.1, 2.2, 2.5, 2.2, 2.8, 2.4, 2.0, 2.3, 1.8
		],
		# N T C
		[
			1.9, 2.1, 1.9, 2.5, 1.8, 2.0, 1.6, 1.9, 1.9, 2.2, 1.9, 2.5, 2.1, 1.6, 2.0, 1.5
		],
		# N T G
		[
			2.0, 2.3, 2.1, 2.7, 1.8, 2.0, 1.6, 1.9, 1.9, 2.2, 1.9, 2.5, 2.1, 1.6, 2.0, 1.5
		],
		# N T T
		[
			2.2, 2.5, 2.3, 2.9, 2.1, 2.3, 1.9, 2.1, 2.3, 2.6, 2.3, 2.9, 2.4, 2.0, 2.3, 1.8
		],
		# N T N
		[
			2.1, 2.3, 2.2, 2.8, 1.9, 2.1, 1.8, 2.0, 2.1, 2.4, 2.1, 2.7, 2.2, 1.8, 2.1, 1.6
		],
		# N N A
		[
			1.9, 2.1, 1.9, 2.5, 2.2, 2.4, 2.0, 2.2, 1.9, 2.1, 1.9, 2.4, 2.7, 2.3, 2.7, 2.1
		],
		# N N C
		[
			1.4, 1.7, 1.5, 2.1, 1.8, 2.0, 1.6, 1.9, 1.4, 1.7, 1.4, 2.0, 2.4, 2.0, 2.3, 1.8
		],
		# N N G
		[
			1.6, 1.8, 1.6, 2.2, 1.8, 1.9, 1.6, 1.8, 1.6, 1.8, 1.6, 2.2, 2.4, 2.0, 2.3, 1.8
		],
		# N N T
		[
			1.8, 2.0, 1.9, 2.4, 2.1, 2.3, 2.0, 2.2, 1.9, 2.2, 1.9, 2.5, 2.7, 2.3, 2.7, 2.1
		],
		# N N N
		[
			1.6, 1.9, 1.7, 2.3, 2.0, 2.2, 1.9, 2.0, 1.7, 1.9, 1.7, 2.3, 2.5, 2.1, 2.5, 2.0
		],

    
])

int_loop_energy_dict["21dh"] = deque([
    	# A A A
		[
			31.8, 31.8, 29.6, 31.8, 29.3, 29.3, 29.3, 29.3, 20.7, 20.7, 20.7, 20.7, 29.3, 29.3, 29.3, 14.1
		],
		# A A C
		[
			28.9, 29.8, 27.8, 29.8, 23.0, 23.0, 23.0, 20.2, 23.4, 23.4, 13.9, 23.4, 23.0, 23.0, 23.0, 19.4
		],
		# A A G
		[
			23.9, 23.9, 12.6, 23.9, 24.2, 24.2, 24.2, 14.0, 16.7, 16.7, 16.7, 16.7, 24.2, 6.6, 24.2, 11.4
		],
		# A A T
		[
			23.8, 28.7, 26.0, 23.8, 28.7, 28.7, 28.7, 23.2, 26.0, 26.0, 26.0, 26.0, 28.7, 23.2, 28.7, 28.7
		],
		# A A N
		[
			27.1, 28.6, 24.0, 27.3, 26.3, 26.3, 26.3, 21.7, 21.7, 21.7, 19.3, 21.7, 26.3, 20.5, 26.3, 18.4
		],
		# A C A
		[
			31.8, 20.4, 29.6, 20.4, 29.3, 33.6, 29.3, 17.3, 20.7, 20.4, 20.5, 20.4, 29.3, 22.4, 29.3, 14.1
		],
		# A C C
		[
			29.8, 29.8, 27.8, 29.8, 23.0, 31.7, 23.0, 20.2, 23.4, 29.8, 13.9, 29.8, 23.0, 30.5, 23.0, 19.4
		],
		# A C G
		[
			22.8, 22.8, 12.6, 22.8, 24.2, 21.5, 24.2, 14.0, 16.7, 22.8, 9.0, 22.8, 6.6, 6.6, 6.6, 6.6
		],
		# A C T
		[
			28.7, 28.7, 26.0, 28.7, 28.7, 26.4, 28.7, 23.2, 26.0, 28.7, 23.0, 28.7, 23.2, 23.2, 23.2, 23.2
		],
		# A C N
		[
			28.3, 25.4, 24.0, 25.4, 26.3, 28.3, 26.3, 18.7, 21.7, 25.4, 16.6, 25.4, 20.5, 20.7, 20.5, 15.8
		],
		# A G A
		[
			29.6, 29.6, 29.6, 29.6, 29.3, 29.3, 29.3, 29.3, 20.7, 20.5, 20.5, 20.5, 29.3, 29.3, 29.3, 14.1
		],
		# A G C
		[
			27.8, 27.8, 27.8, 27.8, 23.0, 23.0, 23.0, 20.2, 13.9, 13.9, 13.9, 13.9, 23.0, 23.0, 23.0, 19.4
		],
		# A G G
		[
			12.6, 12.6, 12.6, 12.6, 24.2, 24.2, 24.2, 14.0, 16.7, 9.0, 9.0, 9.0, 24.2, 6.6, 24.2, 11.4
		],
		# A G T
		[
			26.0, 26.0, 26.0, 26.0, 28.7, 28.7, 28.7, 23.2, 26.0, 23.0, 23.0, 23.0, 28.7, 23.2, 28.7, 28.7
		],
		# A G N
		[
			24.0, 24.0, 24.0, 24.0, 26.3, 26.3, 26.3, 21.7, 19.3, 16.6, 16.6, 16.6, 26.3, 20.5, 26.3, 18.4
		],
		# A T A
		[
			31.8, 20.4, 29.6, 20.4, 17.3, 17.3, 17.3, 17.3, 20.7, 20.4, 20.5, 20.4, 14.1, 14.1, 14.1, 14.1
		],
		# A T C
		[
			29.8, 29.8, 27.8, 29.8, 20.2, 20.2, 20.2, 20.2, 23.4, 29.8, 13.9, 29.8, 19.4, 19.4, 19.4, 19.4
		],
		# A T G
		[
			22.8, 22.8, 12.6, 22.8, 14.0, 14.0, 14.0, 14.0, 16.7, 22.8, 9.0, 22.8, 11.4, 6.6, 11.4, 11.4
		],
		# A T T
		[
			28.7, 28.7, 26.0, 28.7, 23.2, 23.2, 23.2, 23.2, 26.0, 28.7, 23.0, 28.7, 28.7, 23.2, 28.7, 24.6
		],
		# A T N
		[
			28.3, 25.4, 24.0, 25.4, 18.7, 18.7, 18.7, 18.7, 21.7, 25.4, 16.6, 25.4, 18.4, 15.8, 18.4, 17.4
		],
		# A N A
		[
			31.2, 25.6, 29.6, 25.6, 26.3, 27.4, 26.3, 23.3, 20.7, 20.5, 20.6, 20.5, 25.5, 23.8, 25.5, 14.1
		],
		# A N C
		[
			29.1, 29.3, 27.8, 29.3, 22.3, 24.5, 22.3, 20.2, 21.0, 24.2, 13.9, 24.2, 22.1, 24.0, 22.1, 19.4
		],
		# A N G
		[
			20.5, 20.5, 12.6, 20.5, 21.6, 21.0, 21.6, 14.0, 16.7, 17.8, 10.9, 17.8, 16.6, 6.6, 16.6, 10.2
		],
		# A N T
		[
			26.8, 28.0, 26.0, 26.8, 27.3, 26.8, 27.3, 23.2, 26.0, 26.6, 23.8, 26.6, 27.3, 23.2, 27.3, 26.3
		],
		# A N N
		[
			26.9, 25.9, 24.0, 25.5, 24.4, 24.9, 24.4, 20.2, 21.1, 22.3, 17.3, 22.3, 22.9, 19.4, 22.9, 17.5
		],
		# C A A
		[
			28.9, 28.9, 30.2, 28.9, 28.5, 28.5, 28.5, 19.0, 25.8, 25.8, 17.8, 25.8, 28.5, 21.9, 28.5, 19.6
		],
		# C A C
		[
			18.3, 23.5, 20.2, 23.5, 28.2, 28.2, 28.2, 20.8, 22.8, 22.8, 18.0, 22.8, 28.2, 19.4, 28.2, 21.0
		],
		# C A G
		[
			22.9, 22.9, 25.0, 22.9, 24.0, 24.0, 24.0, 20.5, 25.0, 25.0, 25.0, 25.0, 24.0, 20.5, 24.0, 16.2
		],
		# C A T
		[
			23.9, 24.2, 16.7, 24.2, 22.8, 22.8, 22.8, 6.6, 12.6, 12.6, 9.0, 12.6, 22.8, 14.0, 22.8, 11.4
		],
		# C A N
		[
			23.5, 24.9, 23.0, 24.9, 25.9, 25.9, 25.9, 16.7, 21.6, 21.6, 17.4, 21.6, 25.9, 18.9, 25.9, 17.1
		],
		# C C A
		[
			28.9, 32.1, 30.2, 32.1, 28.5, 24.8, 28.5, 19.0, 25.8, 32.1, 17.8, 32.1, 21.9, 21.9, 21.9, 19.6
		],
		# C C C
		[
			23.5, 23.5, 20.2, 23.5, 28.2, 26.4, 28.2, 20.8, 22.8, 23.5, 18.0, 23.5, 19.4, 19.4, 19.4, 19.4
		],
		# C C G
		[
			22.9, 24.0, 25.0, 24.0, 24.0, 23.0, 24.0, 20.5, 25.0, 24.0, 19.0, 24.0, 20.5, 20.5, 20.5, 16.2
		],
		# C C T
		[
			24.2, 24.2, 16.7, 24.2, 22.8, 21.5, 22.8, 6.6, 12.6, 24.2, 9.0, 24.2, 14.0, 14.0, 14.0, 11.4
		],
		# C C N
		[
			24.9, 25.9, 23.0, 25.9, 25.9, 23.9, 25.9, 16.7, 21.6, 25.9, 15.9, 25.9, 18.9, 18.9, 18.9, 16.6
		],
		# C G A
		[
			30.2, 30.2, 30.2, 30.2, 28.5, 28.5, 28.5, 19.0, 17.8, 17.8, 17.8, 17.8, 28.5, 21.9, 28.5, 19.6
		],
		# C G C
		[
			20.2, 20.2, 20.2, 20.2, 28.2, 28.2, 28.2, 20.8, 18.0, 18.0, 18.0, 18.0, 28.2, 19.4, 28.2, 21.0
		],
		# C G G
		[
			25.0, 25.0, 25.0, 25.0, 24.0, 24.0, 24.0, 20.5, 25.0, 19.0, 19.0, 19.0, 24.0, 20.5, 24.0, 16.2
		],
		# C G T
		[
			16.7, 16.7, 16.7, 16.7, 22.8, 22.8, 22.8, 6.6, 9.0, 9.0, 9.0, 9.0, 22.8, 14.0, 22.8, 11.4
		],
		# C G N
		[
			23.0, 23.0, 23.0, 23.0, 25.9, 25.9, 25.9, 16.7, 17.4, 15.9, 15.9, 15.9, 25.9, 18.9, 25.9, 17.1
		],
		# C T A
		[
			28.9, 32.1, 30.2, 32.1, 19.0, 19.0, 19.0, 19.0, 25.8, 32.1, 17.8, 32.1, 19.6, 19.6, 19.6, 19.6
		],
		# C T C
		[
			23.5, 23.5, 20.2, 23.5, 20.8, 20.8, 20.8, 20.8, 22.8, 23.5, 18.0, 23.5, 21.0, 21.0, 21.0, 21.0
		],
		# C T G
		[
			22.9, 24.0, 25.0, 24.0, 20.5, 20.5, 20.5, 20.5, 25.0, 24.0, 19.0, 24.0, 16.2, 16.2, 16.2, 16.2
		],
		# C T T
		[
			24.2, 24.2, 16.7, 24.2, 6.6, 6.6, 6.6, 6.6, 12.6, 24.2, 9.0, 24.2, 11.4, 11.4, 11.4, 11.4
		],
		# C T N
		[
			24.9, 25.9, 23.0, 25.9, 16.7, 16.7, 16.7, 16.7, 21.6, 25.9, 15.9, 25.9, 17.1, 17.1, 17.1, 17.1
		],
		# C N A
		[
			29.2, 30.8, 30.2, 30.8, 26.1, 25.2, 26.1, 19.0, 23.8, 27.0, 17.8, 27.0, 24.6, 21.3, 24.6, 19.6
		],
		# C N C
		[
			21.4, 22.7, 20.2, 22.7, 26.4, 25.9, 26.4, 20.8, 21.6, 21.9, 18.0, 21.9, 24.2, 19.8, 24.2, 20.6
		],
		# C N G
		[
			23.4, 24.0, 25.0, 24.0, 23.1, 22.9, 23.1, 20.5, 25.0, 23.0, 20.5, 23.0, 21.2, 19.4, 21.2, 16.2
		],
		# C N T
		[
			22.2, 22.3, 16.7, 22.3, 18.8, 18.4, 18.8, 6.6, 11.7, 17.5, 9.0, 17.5, 17.8, 13.3, 17.8, 11.4
		],
		# C N N
		[
			24.1, 24.9, 23.0, 24.9, 23.6, 23.1, 23.6, 16.7, 20.6, 22.3, 16.3, 22.3, 21.9, 18.4, 21.9, 17.0
		],
		# G A A
		[
			17.5, 17.5, 17.5, 17.5, 23.1, 23.1, 23.1, 23.1, 25.8, 25.8, 25.8, 25.8, 23.1, 23.1, 23.1, 8.9
		],
		# G A C
		[
			21.5, 21.5, 21.3, 21.5, 22.8, 22.8, 22.8, 22.8, 21.3, 21.3, 16.1, 21.3, 22.8, 22.8, 22.8, 22.8
		],
		# G A G
		[
			18.3, 18.3, 22.8, 18.3, 23.5, 23.5, 23.5, 23.5, 20.2, 20.2, 20.2, 20.2, 23.5, 23.5, 23.5, 23.5
		],
		# G A T
		[
			28.9, 23.0, 23.4, 23.0, 29.8, 29.8, 29.8, 29.8, 27.8, 27.8, 13.9, 27.8, 29.8, 20.2, 29.8, 19.4
		],
		# G A N
		[
			21.6, 20.1, 21.2, 20.1, 24.8, 24.8, 24.8, 24.8, 23.8, 23.8, 19.0, 23.8, 24.8, 22.4, 24.8, 18.6
		],
		# G C A
		[
			17.5, 32.1, 30.2, 32.1, 23.1, 31.8, 23.1, 18.5, 25.8, 32.1, 22.3, 32.1, 23.1, 22.6, 23.1, 8.9
		],
		# G C C
		[
			21.5, 22.8, 21.3, 22.8, 22.8, 24.9, 22.8, 18.3, 21.3, 22.8, 16.1, 22.8, 22.8, 18.3, 22.8, 18.3
		],
		# G C G
		[
			18.3, 28.2, 22.8, 28.2, 23.5, 26.4, 23.5, 19.4, 20.2, 28.2, 18.0, 28.2, 23.5, 20.8, 23.5, 21.0
		],
		# G C T
		[
			23.0, 23.0, 23.4, 23.0, 29.8, 31.7, 29.8, 30.5, 27.8, 23.0, 13.9, 23.0, 20.2, 20.2, 20.2, 20.2
		],
		# G C N
		[
			20.1, 26.5, 24.4, 26.5, 24.8, 28.7, 24.8, 21.7, 23.8, 26.5, 17.6, 26.5, 22.4, 20.5, 22.4, 17.1
		],
		# G G A
		[
			30.2, 30.2, 30.2, 30.2, 23.1, 23.1, 23.1, 23.1, 25.8, 22.3, 22.3, 22.3, 23.1, 23.1, 23.1, 8.9
		],
		# G G C
		[
			21.3, 21.3, 21.3, 21.3, 22.8, 22.8, 22.8, 22.8, 16.1, 16.1, 16.1, 16.1, 22.8, 22.8, 22.8, 22.8
		],
		# G G G
		[
			22.8, 22.8, 22.8, 22.8, 23.5, 23.5, 23.5, 23.5, 20.2, 18.0, 18.0, 18.0, 23.5, 23.5, 23.5, 23.5
		],
		# G G T
		[
			23.4, 23.4, 23.4, 23.4, 29.8, 29.8, 29.8, 29.8, 13.9, 13.9, 13.9, 13.9, 29.8, 20.2, 29.8, 19.4
		],
		# G G N
		[
			24.4, 24.4, 24.4, 24.4, 24.8, 24.8, 24.8, 24.8, 19.0, 17.6, 17.6, 17.6, 24.8, 22.4, 24.8, 18.6
		],
		# G T A
		[
			17.5, 32.1, 30.2, 32.1, 23.1, 18.5, 23.1, 18.5, 25.8, 32.1, 22.3, 32.1, 8.9, 8.9, 8.9, 8.9
		],
		# G T C
		[
			21.5, 22.8, 21.3, 22.8, 22.8, 18.3, 22.8, 18.3, 21.3, 22.8, 16.1, 22.8, 22.8, 18.3, 22.8, 19.2
		],
		# G T G
		[
			18.3, 28.2, 22.8, 28.2, 23.5, 19.4, 23.5, 19.4, 20.2, 28.2, 18.0, 28.2, 23.5, 21.0, 23.5, 21.0
		],
		# G T T
		[
			23.0, 23.0, 23.4, 23.0, 29.8, 30.5, 29.8, 30.5, 27.8, 23.0, 13.9, 23.0, 19.4, 19.4, 19.4, 19.4
		],
		# G T N
		[
			20.1, 26.5, 24.4, 26.5, 24.8, 21.7, 24.8, 21.7, 23.8, 26.5, 17.6, 26.5, 18.6, 16.9, 18.6, 17.1
		],
		# G N A
		[
			20.7, 28.0, 27.0, 28.0, 23.1, 24.1, 23.1, 20.8, 25.8, 28.1, 23.2, 28.1, 19.6, 19.4, 19.6, 8.9
		],
		# G N C
		[
			21.4, 22.1, 21.3, 22.1, 22.8, 22.2, 22.8, 20.6, 20.0, 20.8, 16.1, 20.8, 22.8, 20.6, 22.8, 20.8
		],
		# G N G
		[
			19.4, 24.4, 22.8, 24.4, 23.5, 23.2, 23.5, 21.4, 20.2, 23.6, 18.6, 23.6, 23.5, 22.2, 23.5, 22.2
		],
		# G N T
		[
			24.6, 23.1, 23.4, 23.1, 29.8, 30.4, 29.8, 30.1, 24.3, 21.9, 13.9, 21.9, 24.8, 20.0, 24.8, 19.6
		],
		# G N N
		[
			21.6, 24.4, 23.6, 24.4, 24.8, 25.0, 24.8, 23.2, 22.6, 23.6, 18.0, 23.6, 22.6, 20.5, 22.6, 17.9
		],
		# T A A
		[
			31.0, 31.0, 30.8, 31.0, 33.2, 33.2, 33.2, 21.4, 30.8, 30.8, 30.8, 30.8, 33.2, 21.4, 33.2, 25.1
		],
		# T A C
		[
			17.5, 17.5, 25.8, 17.5, 32.1, 32.1, 32.1, 32.1, 30.2, 30.2, 22.3, 30.2, 32.1, 18.5, 32.1, 8.9
		],
		# T A G
		[
			28.9, 28.9, 25.8, 28.9, 32.1, 32.1, 32.1, 21.9, 30.2, 30.2, 17.8, 30.2, 32.1, 19.0, 32.1, 19.6
		],
		# T A T
		[
			31.8, 29.3, 20.7, 29.3, 20.4, 20.4, 20.4, 22.4, 29.6, 29.6, 20.5, 29.6, 20.4, 17.3, 20.4, 14.1
		],
		# T A N
		[
			27.3, 26.7, 25.8, 26.7, 29.5, 29.5, 29.5, 24.4, 30.2, 30.2, 22.9, 30.2, 29.5, 19.1, 29.5, 16.9
		],
		# T C A
		[
			31.0, 33.2, 30.8, 33.2, 33.2, 36.3, 33.2, 21.4, 30.8, 33.2, 27.3, 33.2, 21.4, 21.4, 21.4, 21.4
		],
		# T C C
		[
			17.5, 23.1, 25.8, 23.1, 32.1, 31.8, 32.1, 31.8, 30.2, 23.1, 22.3, 23.1, 18.5, 18.5, 18.5, 8.9
		],
		# T C G
		[
			28.5, 28.5, 25.8, 28.5, 32.1, 24.8, 32.1, 21.9, 30.2, 28.5, 17.8, 28.5, 19.0, 19.0, 19.0, 19.6
		],
		# T C T
		[
			29.3, 29.3, 20.7, 29.3, 20.4, 33.6, 20.4, 22.4, 29.6, 29.3, 20.5, 29.3, 17.3, 17.3, 17.3, 14.1
		],
		# T C N
		[
			26.6, 28.5, 25.8, 28.5, 29.5, 31.6, 29.5, 24.4, 30.2, 28.5, 22.0, 28.5, 19.1, 19.1, 19.1, 16.0
		],
		# T G A
		[
			30.8, 30.8, 30.8, 30.8, 33.2, 33.2, 33.2, 21.4, 30.8, 27.3, 27.3, 27.3, 33.2, 21.4, 33.2, 25.1
		],
		# T G C
		[
			25.8, 25.8, 25.8, 25.8, 32.1, 32.1, 32.1, 32.1, 22.3, 22.3, 22.3, 22.3, 32.1, 18.5, 32.1, 8.9
		],
		# T G G
		[
			25.8, 25.8, 25.8, 25.8, 32.1, 32.1, 32.1, 21.9, 17.8, 17.8, 17.8, 17.8, 32.1, 19.0, 32.1, 19.6
		],
		# T G T
		[
			20.7, 20.7, 20.7, 20.7, 20.4, 20.4, 20.4, 22.4, 20.5, 20.5, 20.5, 20.5, 20.4, 17.3, 20.4, 14.1
		],
		# T G N
		[
			25.8, 25.8, 25.8, 25.8, 29.5, 29.5, 29.5, 24.4, 22.9, 22.0, 22.0, 22.0, 29.5, 19.1, 29.5, 16.9
		],
		# T T A
		[
			31.0, 33.2, 30.8, 33.2, 21.4, 21.4, 21.4, 21.4, 30.8, 33.2, 27.3, 33.2, 25.1, 21.4, 25.1, 25.1
		],
		# T T C
		[
			17.5, 23.1, 25.8, 23.1, 32.1, 22.6, 32.1, 22.6, 30.2, 23.1, 22.3, 23.1, 8.9, 8.9, 8.9, 8.9
		],
		# T T G
		[
			28.5, 28.5, 25.8, 28.5, 21.9, 21.9, 21.9, 21.9, 30.2, 28.5, 17.8, 28.5, 19.6, 19.6, 19.6, 19.6
		],
		# T T T
		[
			29.3, 29.3, 20.7, 29.3, 22.4, 22.4, 22.4, 22.4, 29.6, 29.3, 20.5, 29.3, 14.1, 14.1, 14.1, 14.1
		],
		# T T N
		[
			26.6, 28.5, 25.8, 28.5, 24.4, 22.1, 24.4, 22.1, 30.2, 28.5, 22.0, 28.5, 16.9, 16.0, 16.9, 16.9
		],
		# T N A
		[
			30.9, 32.1, 30.8, 32.1, 30.2, 31.0, 30.2, 21.4, 30.8, 31.1, 28.2, 31.1, 28.2, 21.4, 28.2, 24.2
		],
		# T N C
		[
			19.6, 22.4, 25.8, 22.4, 32.1, 29.7, 32.1, 29.7, 28.2, 24.7, 22.3, 24.7, 22.9, 16.1, 22.9, 8.9
		],
		# T N G
		[
			27.9, 27.9, 25.8, 27.9, 29.6, 27.7, 29.6, 21.9, 27.1, 26.2, 17.8, 26.2, 25.7, 19.1, 25.7, 19.6
		],
		# T N T
		[
			27.8, 27.1, 20.7, 27.1, 20.9, 24.2, 20.9, 22.4, 27.3, 27.2, 20.5, 27.2, 18.1, 16.5, 18.1, 14.1
		],
		# T N N
		[
			26.6, 27.4, 25.8, 27.4, 28.2, 28.2, 28.2, 23.8, 28.4, 27.3, 22.2, 27.3, 23.8, 18.3, 23.8, 16.7
		],
		# N A A
		[
			27.3, 27.3, 27.0, 27.3, 28.5, 28.5, 28.5, 23.2, 25.8, 25.8, 23.8, 25.8, 28.5, 23.9, 28.5, 16.9
		],
		# N A C
		[
			21.6, 23.1, 23.8, 23.1, 26.5, 26.5, 26.5, 24.0, 24.4, 24.4, 17.6, 24.4, 26.5, 20.9, 26.5, 18.0
		],
		# N A G
		[
			23.5, 23.5, 21.6, 23.5, 25.9, 25.9, 25.9, 20.0, 23.0, 23.0, 19.9, 23.0, 25.9, 17.4, 25.9, 17.7
		],
		# N A T
		[
			27.1, 26.3, 21.7, 25.1, 25.4, 25.4, 25.4, 20.5, 24.0, 24.0, 17.4, 24.0, 25.4, 18.7, 25.4, 18.4
		],
		# N A N
		[
			24.9, 25.1, 23.5, 24.8, 26.6, 26.6, 26.6, 21.9, 24.3, 24.3, 19.6, 24.3, 26.6, 20.2, 26.6, 17.8
		],
		# N C A
		[
			27.3, 29.5, 30.2, 29.5, 28.5, 31.6, 28.5, 19.1, 25.8, 29.5, 22.0, 29.5, 23.9, 22.1, 23.9, 16.0
		],
		# N C C
		[
			23.1, 24.8, 23.8, 24.8, 26.5, 28.7, 26.5, 22.8, 24.4, 24.8, 17.6, 24.8, 20.9, 21.7, 20.9, 16.5
		],
		# N C G
		[
			23.1, 25.9, 21.6, 25.9, 25.9, 23.9, 25.9, 18.9, 23.0, 25.9, 15.9, 25.9, 17.4, 16.7, 17.4, 15.8
		],
		# N C T
		[
			26.3, 26.3, 21.7, 26.3, 25.4, 28.3, 25.4, 20.7, 24.0, 26.3, 16.6, 26.3, 18.7, 18.7, 18.7, 17.2
		],
		# N C N
		[
			25.0, 26.6, 24.3, 26.6, 26.6, 28.1, 26.6, 20.4, 24.3, 26.6, 18.0, 26.6, 20.2, 19.8, 20.2, 16.4
		],
		# N G A
		[
			30.2, 30.2, 30.2, 30.2, 28.5, 28.5, 28.5, 23.2, 23.8, 22.0, 22.0, 22.0, 28.5, 23.9, 28.5, 16.9
		],
		# N G C
		[
			23.8, 23.8, 23.8, 23.8, 26.5, 26.5, 26.5, 24.0, 17.6, 17.6, 17.6, 17.6, 26.5, 20.9, 26.5, 18.0
		],
		# N G G
		[
			21.6, 21.6, 21.6, 21.6, 25.9, 25.9, 25.9, 20.0, 19.9, 15.9, 15.9, 15.9, 25.9, 17.4, 25.9, 17.7
		],
		# N G T
		[
			21.7, 21.7, 21.7, 21.7, 25.4, 25.4, 25.4, 20.5, 17.4, 16.6, 16.6, 16.6, 25.4, 18.7, 25.4, 18.4
		],
		# N G N
		[
			24.3, 24.3, 24.3, 24.3, 26.6, 26.6, 26.6, 21.9, 19.6, 18.0, 18.0, 18.0, 26.6, 20.2, 26.6, 17.8
		],
		# N T A
		[
			27.3, 29.5, 30.2, 29.5, 20.2, 19.1, 20.2, 19.1, 25.8, 29.5, 22.0, 29.5, 16.9, 16.0, 16.9, 16.9
		],
		# N T C
		[
			23.1, 24.8, 23.8, 24.8, 24.0, 20.5, 24.0, 20.5, 24.4, 24.8, 17.6, 24.8, 18.0, 16.9, 18.0, 17.1
		],
		# N T G
		[
			23.1, 25.9, 21.6, 25.9, 20.0, 18.9, 20.0, 18.9, 23.0, 25.9, 15.9, 25.9, 17.7, 15.8, 17.7, 17.1
		],
		# N T T
		[
			26.3, 26.3, 21.7, 26.3, 20.5, 20.7, 20.5, 20.7, 24.0, 26.3, 16.6, 26.3, 18.4, 17.0, 18.4, 17.4
		],
		# N T N
		[
			25.0, 26.6, 24.3, 26.6, 21.1, 19.8, 21.1, 19.8, 24.3, 26.6, 18.0, 26.6, 17.8, 16.4, 17.8, 17.1
		],
		# N N A
		[
			28.0, 29.1, 29.4, 29.1, 26.4, 26.9, 26.4, 21.1, 25.3, 26.7, 22.4, 26.7, 24.5, 21.5, 24.5, 16.7
		],
		# N N C
		[
			22.9, 24.1, 23.8, 24.1, 25.9, 25.6, 25.9, 22.8, 22.7, 22.9, 17.6, 22.9, 23.0, 20.1, 23.0, 17.4
		],
		# N N G
		[
			22.8, 24.2, 21.6, 24.2, 24.5, 23.7, 24.5, 19.4, 22.2, 22.6, 16.9, 22.6, 21.8, 16.8, 21.8, 17.1
		],
		# N N T
		[
			25.4, 25.1, 21.7, 24.8, 24.2, 24.9, 24.2, 20.6, 22.3, 23.3, 16.8, 23.3, 22.0, 18.2, 22.0, 17.9
		],
		# N N N
		[
			24.8, 25.6, 24.1, 25.5, 25.2, 25.3, 25.2, 21.0, 23.2, 23.9, 18.4, 23.9, 22.8, 19.1, 22.8, 17.3
		],
    
])


int_loop_energy_dict["22dg"] = deque([
        # AA
		[
			1.8, 1.9, 1.8, 2.4, 1.9, 2.1, 2.4, 2.0, 1.8, 1.9, 1.8, 2.3, 2.4, 2.0, 2.4, 1.8, 
			2.0, 2.1, 2.0, 2.6, 2.1, 2.3, 2.6, 2.2, 2.0, 2.1, 2.0, 2.5, 2.6, 2.2, 2.6, 2.0, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			2.5, 2.6, 2.5, 3.1, 2.6, 2.8, 3.1, 2.7, 2.5, 2.6, 2.5, 3.0, 3.1, 2.7, 3.1, 2.5, 
			2.0, 2.1, 2.0, 2.6, 2.1, 2.3, 2.6, 2.2, 2.0, 2.1, 2.0, 2.5, 2.6, 2.2, 2.6, 2.0, 
			2.2, 2.3, 2.2, 2.8, 2.3, 2.5, 2.8, 2.4, 2.2, 2.3, 2.2, 2.7, 2.8, 2.4, 2.8, 2.2, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			2.3, 2.4, 2.3, 2.9, 2.4, 2.6, 2.9, 2.5, 2.3, 2.4, 2.3, 2.8, 2.9, 2.5, 2.9, 2.3, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			2.5, 2.6, 2.5, 3.1, 2.6, 2.8, 3.1, 2.7, 2.5, 2.6, 2.5, 3.0, 3.1, 2.7, 3.1, 2.5, 
			2.5, 2.6, 2.5, 3.1, 2.6, 2.8, 3.1, 2.7, 2.5, 2.6, 2.5, 3.0, 3.1, 2.7, 3.1, 2.5, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			2.5, 2.6, 2.5, 3.1, 2.6, 2.8, 3.1, 2.7, 2.5, 2.6, 2.5, 3.0, 3.1, 2.7, 3.1, 2.5, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
		],
		# AC
		[
			1.3, 1.6, 1.4, 2.0, 1.6, 1.8, 1.6, 1.7, 1.4, 1.1, 1.4, 2.0, 1.9, 1.7, 2.1, 1.5, 
			1.5, 1.8, 1.6, 2.2, 1.8, 2.0, 1.8, 1.9, 1.6, 1.3, 1.6, 2.2, 2.1, 1.9, 2.3, 1.7, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			2.0, 2.3, 2.1, 2.7, 2.3, 2.5, 2.3, 2.4, 2.1, 1.8, 2.1, 2.7, 2.6, 2.4, 2.8, 2.2, 
			1.5, 1.8, 1.6, 2.2, 1.8, 2.0, 1.8, 1.9, 1.6, 1.3, 1.6, 2.2, 2.1, 1.9, 2.3, 1.7, 
			1.7, 2.0, 1.8, 2.4, 2.0, 2.2, 2.0, 2.1, 1.8, 1.5, 1.8, 2.4, 2.3, 2.1, 2.5, 1.9, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			1.8, 2.1, 1.9, 2.5, 2.1, 2.3, 2.1, 2.2, 1.9, 1.6, 1.9, 2.5, 2.4, 2.2, 2.6, 2.0, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			2.0, 2.3, 2.1, 2.7, 2.3, 2.5, 2.3, 2.4, 2.1, 1.8, 2.1, 2.7, 2.6, 2.4, 2.8, 2.2, 
			2.0, 2.3, 2.1, 2.7, 2.3, 2.5, 2.3, 2.4, 2.1, 1.8, 2.1, 2.7, 2.6, 2.4, 2.8, 2.2, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			2.0, 2.3, 2.1, 2.7, 2.3, 2.5, 2.3, 2.4, 2.1, 1.8, 2.1, 2.7, 2.6, 2.4, 2.8, 2.2, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
		],
		# AG
		[
			1.4, 1.7, 1.5, 2.2, 1.7, 1.9, 1.3, 1.7, 1.5, 1.6, 1.5, 2.0, 2.0, 1.7, 1.9, 1.5, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 1.5, 1.9, 1.7, 1.8, 1.7, 2.2, 2.2, 1.9, 2.1, 1.7, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			2.1, 2.4, 2.2, 2.9, 2.4, 2.6, 2.0, 2.4, 2.2, 2.3, 2.2, 2.7, 2.7, 2.4, 2.6, 2.2, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 1.5, 1.9, 1.7, 1.8, 1.7, 2.2, 2.2, 1.9, 2.1, 1.7, 
			1.8, 2.1, 1.9, 2.6, 2.1, 2.3, 1.7, 2.1, 1.9, 2.0, 1.9, 2.4, 2.4, 2.1, 2.3, 1.9, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			1.9, 2.2, 2.0, 2.7, 2.2, 2.4, 1.8, 2.2, 2.0, 2.1, 2.0, 2.5, 2.5, 2.2, 2.4, 2.0, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			2.1, 2.4, 2.2, 2.9, 2.4, 2.6, 2.0, 2.4, 2.2, 2.3, 2.2, 2.7, 2.7, 2.4, 2.6, 2.2, 
			2.1, 2.4, 2.2, 2.9, 2.4, 2.6, 2.0, 2.4, 2.2, 2.3, 2.2, 2.7, 2.7, 2.4, 2.6, 2.2, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			2.1, 2.4, 2.2, 2.9, 2.4, 2.6, 2.0, 2.4, 2.2, 2.3, 2.2, 2.7, 2.7, 2.4, 2.6, 2.2, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
		],
		# AT
		[
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.2, 2.0, 1.8, 2.0, 1.8, 2.4, 2.4, 2.0, 2.4, 1.8, 
			1.9, 2.1, 2.0, 2.6, 2.1, 2.3, 2.4, 2.2, 2.0, 2.2, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			2.4, 2.6, 2.5, 3.1, 2.6, 2.8, 2.9, 2.7, 2.5, 2.7, 2.5, 3.1, 3.1, 2.7, 3.1, 2.5, 
			1.9, 2.1, 2.0, 2.6, 2.1, 2.3, 2.4, 2.2, 2.0, 2.2, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			2.1, 2.3, 2.2, 2.8, 2.3, 2.5, 2.6, 2.4, 2.2, 2.4, 2.2, 2.8, 2.8, 2.4, 2.8, 2.2, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			2.2, 2.4, 2.3, 2.9, 2.4, 2.6, 2.7, 2.5, 2.3, 2.5, 2.3, 2.9, 2.9, 2.5, 2.9, 2.3, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			2.4, 2.6, 2.5, 3.1, 2.6, 2.8, 2.9, 2.7, 2.5, 2.7, 2.5, 3.1, 3.1, 2.7, 3.1, 2.5, 
			2.4, 2.6, 2.5, 3.1, 2.6, 2.8, 2.9, 2.7, 2.5, 2.7, 2.5, 3.1, 3.1, 2.7, 3.1, 2.5, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			2.4, 2.6, 2.5, 3.1, 2.6, 2.8, 2.9, 2.7, 2.5, 2.7, 2.5, 3.1, 3.1, 2.7, 3.1, 2.5, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
		],
		# AN
		[
			1.6, 1.8, 1.6, 2.2, 1.8, 2.0, 1.9, 1.9, 1.6, 1.6, 1.6, 2.2, 2.2, 1.9, 2.2, 1.6, 
			1.8, 2.0, 1.8, 2.5, 2.0, 2.2, 2.1, 2.0, 1.8, 1.9, 1.8, 2.4, 2.4, 2.0, 2.4, 1.9, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
			2.2, 2.5, 2.3, 3.0, 2.5, 2.7, 2.6, 2.5, 2.3, 2.4, 2.3, 2.9, 2.9, 2.5, 2.9, 2.4, 
			1.8, 2.0, 1.8, 2.5, 2.0, 2.2, 2.1, 2.0, 1.8, 1.9, 1.8, 2.4, 2.4, 2.0, 2.4, 1.9, 
			2.0, 2.2, 2.0, 2.6, 2.2, 2.4, 2.3, 2.2, 2.0, 2.0, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.3, 2.2, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.3, 2.2, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
			2.0, 2.3, 2.1, 2.8, 2.3, 2.5, 2.4, 2.4, 2.1, 2.1, 2.1, 2.7, 2.7, 2.4, 2.7, 2.1, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
			2.2, 2.5, 2.3, 3.0, 2.5, 2.7, 2.6, 2.5, 2.3, 2.4, 2.3, 2.9, 2.9, 2.5, 2.9, 2.4, 
			2.2, 2.5, 2.3, 3.0, 2.5, 2.7, 2.6, 2.5, 2.3, 2.4, 2.3, 2.9, 2.9, 2.5, 2.9, 2.4, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.3, 2.2, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0, 
			2.2, 2.5, 2.3, 3.0, 2.5, 2.7, 2.6, 2.5, 2.3, 2.4, 2.3, 2.9, 2.9, 2.5, 2.9, 2.4, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
		],
		# CA
		[
			1.5, 1.6, 1.5, 2.1, 1.6, 1.8, 2.1, 1.7, 1.5, 1.6, 1.5, 2.0, 2.1, 1.7, 2.1, 1.5, 
			1.8, 1.9, 1.8, 2.4, 1.9, 2.1, 2.4, 2.0, 1.8, 1.9, 1.8, 2.3, 2.4, 2.0, 2.4, 1.8, 
			1.6, 1.7, 1.6, 2.2, 1.7, 1.9, 2.2, 1.8, 1.6, 1.7, 1.6, 2.1, 2.2, 1.8, 2.2, 1.6, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			1.8, 1.9, 1.8, 2.4, 1.9, 2.1, 2.4, 2.0, 1.8, 1.9, 1.8, 2.3, 2.4, 2.0, 2.4, 1.8, 
			2.0, 2.1, 2.0, 2.6, 2.1, 2.3, 2.6, 2.2, 2.0, 2.1, 2.0, 2.5, 2.6, 2.2, 2.6, 2.0, 
			1.7, 1.8, 1.7, 2.3, 1.8, 2.0, 2.3, 1.9, 1.7, 1.8, 1.7, 2.2, 2.3, 1.9, 2.3, 1.7, 
			1.8, 1.9, 1.8, 2.4, 1.9, 2.1, 2.4, 2.0, 1.8, 1.9, 1.8, 2.3, 2.4, 2.0, 2.4, 1.8, 
			1.6, 1.7, 1.6, 2.2, 1.7, 1.9, 2.2, 1.8, 1.6, 1.7, 1.6, 2.1, 2.2, 1.8, 2.2, 1.6, 
			1.4, 1.5, 1.4, 2.0, 1.5, 1.7, 2.0, 1.6, 1.4, 1.5, 1.4, 1.9, 2.0, 1.6, 2.0, 1.4, 
			1.6, 1.7, 1.6, 2.2, 1.7, 1.9, 2.2, 1.8, 1.6, 1.7, 1.6, 2.1, 2.2, 1.8, 2.2, 1.6, 
			2.0, 2.1, 2.0, 2.6, 2.1, 2.3, 2.6, 2.2, 2.0, 2.1, 2.0, 2.5, 2.6, 2.2, 2.6, 2.0, 
			2.3, 2.4, 2.3, 2.9, 2.4, 2.6, 2.9, 2.5, 2.3, 2.4, 2.3, 2.8, 2.9, 2.5, 2.9, 2.3, 
			1.8, 1.9, 1.8, 2.4, 1.9, 2.1, 2.4, 2.0, 1.8, 1.9, 1.8, 2.3, 2.4, 2.0, 2.4, 1.8, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			1.6, 1.7, 1.6, 2.2, 1.7, 1.9, 2.2, 1.8, 1.6, 1.7, 1.6, 2.1, 2.2, 1.8, 2.2, 1.6, 
		],
		# CC
		[
			1.0, 1.3, 1.1, 1.7, 1.3, 1.5, 1.3, 1.4, 1.1, 0.8, 1.1, 1.7, 1.6, 1.4, 1.8, 1.2, 
			1.3, 1.6, 1.4, 2.0, 1.6, 1.8, 1.6, 1.7, 1.4, 1.1, 1.4, 2.0, 1.9, 1.7, 2.1, 1.5, 
			1.1, 1.4, 1.2, 1.8, 1.4, 1.6, 1.4, 1.5, 1.2, 0.9, 1.2, 1.8, 1.7, 1.5, 1.9, 1.3, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			1.3, 1.6, 1.4, 2.0, 1.6, 1.8, 1.6, 1.7, 1.4, 1.1, 1.4, 2.0, 1.9, 1.7, 2.1, 1.5, 
			1.5, 1.8, 1.6, 2.2, 1.8, 2.0, 1.8, 1.9, 1.6, 1.3, 1.6, 2.2, 2.1, 1.9, 2.3, 1.7, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.5, 1.6, 1.3, 1.0, 1.3, 1.9, 1.8, 1.6, 2.0, 1.4, 
			1.3, 1.6, 1.4, 2.0, 1.6, 1.8, 1.6, 1.7, 1.4, 1.1, 1.4, 2.0, 1.9, 1.7, 2.1, 1.5, 
			1.1, 1.4, 1.2, 1.8, 1.4, 1.6, 1.4, 1.5, 1.2, 0.9, 1.2, 1.8, 1.7, 1.5, 1.9, 1.3, 
			0.9, 1.2, 1.0, 1.6, 1.2, 1.4, 1.2, 1.3, 1.0, 0.7, 1.0, 1.6, 1.5, 1.3, 1.7, 1.1, 
			1.1, 1.4, 1.2, 1.8, 1.4, 1.6, 1.4, 1.5, 1.2, 0.9, 1.2, 1.8, 1.7, 1.5, 1.9, 1.3, 
			1.5, 1.8, 1.6, 2.2, 1.8, 2.0, 1.8, 1.9, 1.6, 1.3, 1.6, 2.2, 2.1, 1.9, 2.3, 1.7, 
			1.8, 2.1, 1.9, 2.5, 2.1, 2.3, 2.1, 2.2, 1.9, 1.6, 1.9, 2.5, 2.4, 2.2, 2.6, 2.0, 
			1.3, 1.6, 1.4, 2.0, 1.6, 1.8, 1.6, 1.7, 1.4, 1.1, 1.4, 2.0, 1.9, 1.7, 2.1, 1.5, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			1.1, 1.4, 1.2, 1.8, 1.4, 1.6, 1.4, 1.5, 1.2, 0.9, 1.2, 1.8, 1.7, 1.5, 1.9, 1.3, 
		],
		# CG
		[
			1.1, 1.4, 1.2, 1.9, 1.4, 1.6, 1.0, 1.4, 1.2, 1.3, 1.2, 1.7, 1.7, 1.4, 1.6, 1.2, 
			1.4, 1.7, 1.5, 2.2, 1.7, 1.9, 1.3, 1.7, 1.5, 1.6, 1.5, 2.0, 2.0, 1.7, 1.9, 1.5, 
			1.2, 1.5, 1.3, 2.0, 1.5, 1.7, 1.1, 1.5, 1.3, 1.4, 1.3, 1.8, 1.8, 1.5, 1.7, 1.3, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			1.4, 1.7, 1.5, 2.2, 1.7, 1.9, 1.3, 1.7, 1.5, 1.6, 1.5, 2.0, 2.0, 1.7, 1.9, 1.5, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 1.5, 1.9, 1.7, 1.8, 1.7, 2.2, 2.2, 1.9, 2.1, 1.7, 
			1.3, 1.6, 1.4, 2.1, 1.6, 1.8, 1.2, 1.6, 1.4, 1.5, 1.4, 1.9, 1.9, 1.6, 1.8, 1.4, 
			1.4, 1.7, 1.5, 2.2, 1.7, 1.9, 1.3, 1.7, 1.5, 1.6, 1.5, 2.0, 2.0, 1.7, 1.9, 1.5, 
			1.2, 1.5, 1.3, 2.0, 1.5, 1.7, 1.1, 1.5, 1.3, 1.4, 1.3, 1.8, 1.8, 1.5, 1.7, 1.3, 
			1.0, 1.3, 1.1, 1.8, 1.3, 1.5, 0.9, 1.3, 1.1, 1.2, 1.1, 1.6, 1.6, 1.3, 1.5, 1.1, 
			1.2, 1.5, 1.3, 2.0, 1.5, 1.7, 1.1, 1.5, 1.3, 1.4, 1.3, 1.8, 1.8, 1.5, 1.7, 1.3, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 1.5, 1.9, 1.7, 1.8, 1.7, 2.2, 2.2, 1.9, 2.1, 1.7, 
			1.9, 2.2, 2.0, 2.7, 2.2, 2.4, 1.8, 2.2, 2.0, 2.1, 2.0, 2.5, 2.5, 2.2, 2.4, 2.0, 
			1.4, 1.7, 1.5, 2.2, 1.7, 1.9, 1.3, 1.7, 1.5, 1.6, 1.5, 2.0, 2.0, 1.7, 1.9, 1.5, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			1.2, 1.5, 1.3, 2.0, 1.5, 1.7, 1.1, 1.5, 1.3, 1.4, 1.3, 1.8, 1.8, 1.5, 1.7, 1.3, 
		],
		# CT
		[
			1.4, 1.6, 1.5, 2.1, 1.6, 1.8, 1.9, 1.7, 1.5, 1.7, 1.5, 2.1, 2.1, 1.7, 2.1, 1.5, 
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.2, 2.0, 1.8, 2.0, 1.8, 2.4, 2.4, 2.0, 2.4, 1.8, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 2.0, 1.8, 1.6, 1.8, 1.6, 2.2, 2.2, 1.8, 2.2, 1.6, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.2, 2.0, 1.8, 2.0, 1.8, 2.4, 2.4, 2.0, 2.4, 1.8, 
			1.9, 2.1, 2.0, 2.6, 2.1, 2.3, 2.4, 2.2, 2.0, 2.2, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			1.6, 1.8, 1.7, 2.3, 1.8, 2.0, 2.1, 1.9, 1.7, 1.9, 1.7, 2.3, 2.3, 1.9, 2.3, 1.7, 
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.2, 2.0, 1.8, 2.0, 1.8, 2.4, 2.4, 2.0, 2.4, 1.8, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 2.0, 1.8, 1.6, 1.8, 1.6, 2.2, 2.2, 1.8, 2.2, 1.6, 
			1.3, 1.5, 1.4, 2.0, 1.5, 1.7, 1.8, 1.6, 1.4, 1.6, 1.4, 2.0, 2.0, 1.6, 2.0, 1.4, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 2.0, 1.8, 1.6, 1.8, 1.6, 2.2, 2.2, 1.8, 2.2, 1.6, 
			1.9, 2.1, 2.0, 2.6, 2.1, 2.3, 2.4, 2.2, 2.0, 2.2, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			2.2, 2.4, 2.3, 2.9, 2.4, 2.6, 2.7, 2.5, 2.3, 2.5, 2.3, 2.9, 2.9, 2.5, 2.9, 2.3, 
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.2, 2.0, 1.8, 2.0, 1.8, 2.4, 2.4, 2.0, 2.4, 1.8, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 2.0, 1.8, 1.6, 1.8, 1.6, 2.2, 2.2, 1.8, 2.2, 1.6, 
		],
		# CN
		[
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.6, 1.5, 1.3, 1.4, 1.3, 1.9, 1.9, 1.5, 1.9, 1.4, 
			1.6, 1.8, 1.6, 2.2, 1.8, 2.0, 1.9, 1.9, 1.6, 1.6, 1.6, 2.2, 2.2, 1.9, 2.2, 1.6, 
			1.4, 1.6, 1.4, 2.1, 1.6, 1.8, 1.7, 1.6, 1.4, 1.4, 1.4, 2.0, 2.0, 1.6, 2.0, 1.5, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.3, 2.2, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0, 
			1.6, 1.8, 1.6, 2.2, 1.8, 2.0, 1.9, 1.9, 1.6, 1.6, 1.6, 2.2, 2.2, 1.9, 2.2, 1.6, 
			1.8, 2.0, 1.8, 2.5, 2.0, 2.2, 2.1, 2.0, 1.8, 1.9, 1.8, 2.4, 2.4, 2.0, 2.4, 1.9, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.8, 1.8, 1.5, 1.6, 1.5, 2.1, 2.1, 1.8, 2.1, 1.5, 
			1.6, 1.8, 1.6, 2.2, 1.8, 2.0, 1.9, 1.9, 1.6, 1.6, 1.6, 2.2, 2.2, 1.9, 2.2, 1.6, 
			1.4, 1.6, 1.4, 2.1, 1.6, 1.8, 1.7, 1.6, 1.4, 1.4, 1.4, 2.0, 2.0, 1.6, 2.0, 1.5, 
			1.1, 1.4, 1.2, 1.9, 1.4, 1.6, 1.5, 1.5, 1.2, 1.2, 1.2, 1.8, 1.8, 1.5, 1.8, 1.2, 
			1.4, 1.6, 1.4, 2.1, 1.6, 1.8, 1.7, 1.6, 1.4, 1.4, 1.4, 2.0, 2.0, 1.6, 2.0, 1.5, 
			1.8, 2.0, 1.8, 2.5, 2.0, 2.2, 2.1, 2.0, 1.8, 1.9, 1.8, 2.4, 2.4, 2.0, 2.4, 1.9, 
			2.0, 2.3, 2.1, 2.8, 2.3, 2.5, 2.4, 2.4, 2.1, 2.1, 2.1, 2.7, 2.7, 2.4, 2.7, 2.1, 
			1.6, 1.8, 1.6, 2.2, 1.8, 2.0, 1.9, 1.9, 1.6, 1.6, 1.6, 2.2, 2.2, 1.9, 2.2, 1.6, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.3, 2.2, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0, 
			1.4, 1.6, 1.4, 2.1, 1.6, 1.8, 1.7, 1.6, 1.4, 1.4, 1.4, 2.0, 2.0, 1.6, 2.0, 1.5, 
		],
		# GA
		[
			1.4, 1.5, 1.4, 2.0, 1.5, 1.7, 2.0, 1.6, 1.4, 1.5, 1.4, 1.9, 2.0, 1.6, 2.0, 1.4, 
			1.7, 1.8, 1.7, 2.3, 1.8, 2.0, 2.3, 1.9, 1.7, 1.8, 1.7, 2.2, 2.3, 1.9, 2.3, 1.7, 
			1.5, 1.6, 1.5, 2.1, 1.6, 1.8, 2.1, 1.7, 1.5, 1.6, 1.5, 2.0, 2.1, 1.7, 2.1, 1.5, 
			2.0, 2.1, 2.0, 2.6, 2.1, 2.3, 2.6, 2.2, 2.0, 2.1, 2.0, 2.5, 2.6, 2.2, 2.6, 2.0, 
			1.7, 1.8, 1.7, 2.3, 1.8, 2.0, 2.3, 1.9, 1.7, 1.8, 1.7, 2.2, 2.3, 1.9, 2.3, 1.7, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			1.2, 1.3, 1.2, 1.8, 1.3, 1.5, 1.8, 1.4, 1.2, 1.3, 1.2, 1.7, 1.8, 1.4, 1.8, 1.2, 
			1.8, 1.9, 1.8, 2.4, 1.9, 2.1, 2.4, 2.0, 1.8, 1.9, 1.8, 2.3, 2.4, 2.0, 2.4, 1.8, 
			1.5, 1.6, 1.5, 2.1, 1.6, 1.8, 2.1, 1.7, 1.5, 1.6, 1.5, 2.0, 2.1, 1.7, 2.1, 1.5, 
			1.7, 1.8, 1.7, 2.3, 1.8, 2.0, 2.3, 1.9, 1.7, 1.8, 1.7, 2.2, 2.3, 1.9, 2.3, 1.7, 
			1.5, 1.6, 1.5, 2.1, 1.6, 1.8, 2.1, 1.7, 1.5, 1.6, 1.5, 2.0, 2.1, 1.7, 2.1, 1.5, 
			2.2, 2.3, 2.2, 2.8, 2.3, 2.5, 2.8, 2.4, 2.2, 2.3, 2.2, 2.7, 2.8, 2.4, 2.8, 2.2, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			1.8, 1.9, 1.8, 2.4, 1.9, 2.1, 2.4, 2.0, 1.8, 1.9, 1.8, 2.3, 2.4, 2.0, 2.4, 1.8, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			1.6, 1.7, 1.6, 2.2, 1.7, 1.9, 2.2, 1.8, 1.6, 1.7, 1.6, 2.1, 2.2, 1.8, 2.2, 1.6, 
		],
		# GC
		[
			0.9, 1.2, 1.0, 1.6, 1.2, 1.4, 1.2, 1.3, 1.0, 0.7, 1.0, 1.6, 1.5, 1.3, 1.7, 1.1, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.5, 1.6, 1.3, 1.0, 1.3, 1.9, 1.8, 1.6, 2.0, 1.4, 
			1.0, 1.3, 1.1, 1.7, 1.3, 1.5, 1.3, 1.4, 1.1, 0.8, 1.1, 1.7, 1.6, 1.4, 1.8, 1.2, 
			1.5, 1.8, 1.6, 2.2, 1.8, 2.0, 1.8, 1.9, 1.6, 1.3, 1.6, 2.2, 2.1, 1.9, 2.3, 1.7, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.5, 1.6, 1.3, 1.0, 1.3, 1.9, 1.8, 1.6, 2.0, 1.4, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			0.7, 1.0, 0.8, 1.4, 1.0, 1.2, 1.0, 1.1, 0.8, 0.5, 0.8, 1.4, 1.3, 1.1, 1.5, 0.9, 
			1.3, 1.6, 1.4, 2.0, 1.6, 1.8, 1.6, 1.7, 1.4, 1.1, 1.4, 2.0, 1.9, 1.7, 2.1, 1.5, 
			1.0, 1.3, 1.1, 1.7, 1.3, 1.5, 1.3, 1.4, 1.1, 0.8, 1.1, 1.7, 1.6, 1.4, 1.8, 1.2, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.5, 1.6, 1.3, 1.0, 1.3, 1.9, 1.8, 1.6, 2.0, 1.4, 
			1.0, 1.3, 1.1, 1.7, 1.3, 1.5, 1.3, 1.4, 1.1, 0.8, 1.1, 1.7, 1.6, 1.4, 1.8, 1.2, 
			1.7, 2.0, 1.8, 2.4, 2.0, 2.2, 2.0, 2.1, 1.8, 1.5, 1.8, 2.4, 2.3, 2.1, 2.5, 1.9, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			1.3, 1.6, 1.4, 2.0, 1.6, 1.8, 1.6, 1.7, 1.4, 1.1, 1.4, 2.0, 1.9, 1.7, 2.1, 1.5, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			1.1, 1.4, 1.2, 1.8, 1.4, 1.6, 1.4, 1.5, 1.2, 0.9, 1.2, 1.8, 1.7, 1.5, 1.9, 1.3, 
		],
		# GG
		[
			1.0, 1.3, 1.1, 1.8, 1.3, 1.5, 0.9, 1.3, 1.1, 1.2, 1.1, 1.6, 1.6, 1.3, 1.5, 1.1, 
			1.3, 1.6, 1.4, 2.1, 1.6, 1.8, 1.2, 1.6, 1.4, 1.5, 1.4, 1.9, 1.9, 1.6, 1.8, 1.4, 
			1.1, 1.4, 1.2, 1.9, 1.4, 1.6, 1.0, 1.4, 1.2, 1.3, 1.2, 1.7, 1.7, 1.4, 1.6, 1.2, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 1.5, 1.9, 1.7, 1.8, 1.7, 2.2, 2.2, 1.9, 2.1, 1.7, 
			1.3, 1.6, 1.4, 2.1, 1.6, 1.8, 1.2, 1.6, 1.4, 1.5, 1.4, 1.9, 1.9, 1.6, 1.8, 1.4, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			0.8, 1.1, 0.9, 1.6, 1.1, 1.3, 0.7, 1.1, 0.9, 1.0, 0.9, 1.4, 1.4, 1.1, 1.3, 0.9, 
			1.4, 1.7, 1.5, 2.2, 1.7, 1.9, 1.3, 1.7, 1.5, 1.6, 1.5, 2.0, 2.0, 1.7, 1.9, 1.5, 
			1.1, 1.4, 1.2, 1.9, 1.4, 1.6, 1.0, 1.4, 1.2, 1.3, 1.2, 1.7, 1.7, 1.4, 1.6, 1.2, 
			1.3, 1.6, 1.4, 2.1, 1.6, 1.8, 1.2, 1.6, 1.4, 1.5, 1.4, 1.9, 1.9, 1.6, 1.8, 1.4, 
			1.1, 1.4, 1.2, 1.9, 1.4, 1.6, 1.0, 1.4, 1.2, 1.3, 1.2, 1.7, 1.7, 1.4, 1.6, 1.2, 
			1.8, 2.1, 1.9, 2.6, 2.1, 2.3, 1.7, 2.1, 1.9, 2.0, 1.9, 2.4, 2.4, 2.1, 2.3, 1.9, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			1.4, 1.7, 1.5, 2.2, 1.7, 1.9, 1.3, 1.7, 1.5, 1.6, 1.5, 2.0, 2.0, 1.7, 1.9, 1.5, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			1.2, 1.5, 1.3, 2.0, 1.5, 1.7, 1.1, 1.5, 1.3, 1.4, 1.3, 1.8, 1.8, 1.5, 1.7, 1.3, 
		],
		# GT
		[
			1.3, 1.5, 1.4, 2.0, 1.5, 1.7, 1.8, 1.6, 1.4, 1.6, 1.4, 2.0, 2.0, 1.6, 2.0, 1.4, 
			1.6, 1.8, 1.7, 2.3, 1.8, 2.0, 2.1, 1.9, 1.7, 1.9, 1.7, 2.3, 2.3, 1.9, 2.3, 1.7, 
			1.4, 1.6, 1.5, 2.1, 1.6, 1.8, 1.9, 1.7, 1.5, 1.7, 1.5, 2.1, 2.1, 1.7, 2.1, 1.5, 
			1.9, 2.1, 2.0, 2.6, 2.1, 2.3, 2.4, 2.2, 2.0, 2.2, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			1.6, 1.8, 1.7, 2.3, 1.8, 2.0, 2.1, 1.9, 1.7, 1.9, 1.7, 2.3, 2.3, 1.9, 2.3, 1.7, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			1.1, 1.3, 1.2, 1.8, 1.3, 1.5, 1.6, 1.4, 1.2, 1.4, 1.2, 1.8, 1.8, 1.4, 1.8, 1.2, 
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.2, 2.0, 1.8, 2.0, 1.8, 2.4, 2.4, 2.0, 2.4, 1.8, 
			1.4, 1.6, 1.5, 2.1, 1.6, 1.8, 1.9, 1.7, 1.5, 1.7, 1.5, 2.1, 2.1, 1.7, 2.1, 1.5, 
			1.6, 1.8, 1.7, 2.3, 1.8, 2.0, 2.1, 1.9, 1.7, 1.9, 1.7, 2.3, 2.3, 1.9, 2.3, 1.7, 
			1.4, 1.6, 1.5, 2.1, 1.6, 1.8, 1.9, 1.7, 1.5, 1.7, 1.5, 2.1, 2.1, 1.7, 2.1, 1.5, 
			2.1, 2.3, 2.2, 2.8, 2.3, 2.5, 2.6, 2.4, 2.2, 2.4, 2.2, 2.8, 2.8, 2.4, 2.8, 2.2, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.2, 2.0, 1.8, 2.0, 1.8, 2.4, 2.4, 2.0, 2.4, 1.8, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 2.0, 1.8, 1.6, 1.8, 1.6, 2.2, 2.2, 1.8, 2.2, 1.6, 
		],
		# GN
		[
			1.1, 1.4, 1.2, 1.9, 1.4, 1.6, 1.5, 1.5, 1.2, 1.2, 1.2, 1.8, 1.8, 1.5, 1.8, 1.2, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.8, 1.8, 1.5, 1.6, 1.5, 2.1, 2.1, 1.8, 2.1, 1.5, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.6, 1.5, 1.3, 1.4, 1.3, 1.9, 1.9, 1.5, 1.9, 1.4, 
			1.8, 2.0, 1.8, 2.5, 2.0, 2.2, 2.1, 2.0, 1.8, 1.9, 1.8, 2.4, 2.4, 2.0, 2.4, 1.9, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.8, 1.8, 1.5, 1.6, 1.5, 2.1, 2.1, 1.8, 2.1, 1.5, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
			0.9, 1.2, 1.0, 1.6, 1.2, 1.4, 1.3, 1.2, 1.0, 1.1, 1.0, 1.6, 1.6, 1.2, 1.6, 1.1, 
			1.6, 1.8, 1.6, 2.2, 1.8, 2.0, 1.9, 1.9, 1.6, 1.6, 1.6, 2.2, 2.2, 1.9, 2.2, 1.6, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.6, 1.5, 1.3, 1.4, 1.3, 1.9, 1.9, 1.5, 1.9, 1.4, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.8, 1.8, 1.5, 1.6, 1.5, 2.1, 2.1, 1.8, 2.1, 1.5, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.6, 1.5, 1.3, 1.4, 1.3, 1.9, 1.9, 1.5, 1.9, 1.4, 
			2.0, 2.2, 2.0, 2.6, 2.2, 2.4, 2.3, 2.2, 2.0, 2.0, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.3, 2.2, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0, 
			1.6, 1.8, 1.6, 2.2, 1.8, 2.0, 1.9, 1.9, 1.6, 1.6, 1.6, 2.2, 2.2, 1.9, 2.2, 1.6, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.3, 2.2, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0, 
			1.4, 1.6, 1.4, 2.1, 1.6, 1.8, 1.7, 1.6, 1.4, 1.4, 1.4, 2.0, 2.0, 1.6, 2.0, 1.5, 
		],
		# TA
		[
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			2.0, 2.1, 2.0, 2.6, 2.1, 2.3, 2.6, 2.2, 2.0, 2.1, 2.0, 2.5, 2.6, 2.2, 2.6, 2.0, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			2.5, 2.6, 2.5, 3.1, 2.6, 2.8, 3.1, 2.7, 2.5, 2.6, 2.5, 3.0, 3.1, 2.7, 3.1, 2.5, 
			2.0, 2.1, 2.0, 2.6, 2.1, 2.3, 2.6, 2.2, 2.0, 2.1, 2.0, 2.5, 2.6, 2.2, 2.6, 2.0, 
			2.2, 2.3, 2.2, 2.8, 2.3, 2.5, 2.8, 2.4, 2.2, 2.3, 2.2, 2.7, 2.8, 2.4, 2.8, 2.2, 
			2.0, 2.1, 2.0, 2.6, 2.1, 2.3, 2.6, 2.2, 2.0, 2.1, 2.0, 2.5, 2.6, 2.2, 2.6, 2.0, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			2.5, 2.6, 2.5, 3.1, 2.6, 2.8, 3.1, 2.7, 2.5, 2.6, 2.5, 3.0, 3.1, 2.7, 3.1, 2.5, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			2.5, 2.6, 2.5, 3.1, 2.6, 2.8, 3.1, 2.7, 2.5, 2.6, 2.5, 3.0, 3.1, 2.7, 3.1, 2.5, 
			2.5, 2.6, 2.5, 3.1, 2.6, 2.8, 3.1, 2.7, 2.5, 2.6, 2.5, 3.0, 3.1, 2.7, 3.1, 2.5, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			2.4, 2.5, 2.4, 3.0, 2.5, 2.7, 3.0, 2.6, 2.4, 2.5, 2.4, 2.9, 3.0, 2.6, 3.0, 2.4, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
		],
		# TC
		[
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			1.5, 1.8, 1.6, 2.2, 1.8, 2.0, 1.8, 1.9, 1.6, 1.3, 1.6, 2.2, 2.1, 1.9, 2.3, 1.7, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			2.0, 2.3, 2.1, 2.7, 2.3, 2.5, 2.3, 2.4, 2.1, 1.8, 2.1, 2.7, 2.6, 2.4, 2.8, 2.2, 
			1.5, 1.8, 1.6, 2.2, 1.8, 2.0, 1.8, 1.9, 1.6, 1.3, 1.6, 2.2, 2.1, 1.9, 2.3, 1.7, 
			1.7, 2.0, 1.8, 2.4, 2.0, 2.2, 2.0, 2.1, 1.8, 1.5, 1.8, 2.4, 2.3, 2.1, 2.5, 1.9, 
			1.5, 1.8, 1.6, 2.2, 1.8, 2.0, 1.8, 1.9, 1.6, 1.3, 1.6, 2.2, 2.1, 1.9, 2.3, 1.7, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			2.0, 2.3, 2.1, 2.7, 2.3, 2.5, 2.3, 2.4, 2.1, 1.8, 2.1, 2.7, 2.6, 2.4, 2.8, 2.2, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			2.0, 2.3, 2.1, 2.7, 2.3, 2.5, 2.3, 2.4, 2.1, 1.8, 2.1, 2.7, 2.6, 2.4, 2.8, 2.2, 
			2.0, 2.3, 2.1, 2.7, 2.3, 2.5, 2.3, 2.4, 2.1, 1.8, 2.1, 2.7, 2.6, 2.4, 2.8, 2.2, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			1.9, 2.2, 2.0, 2.6, 2.2, 2.4, 2.2, 2.3, 2.0, 1.7, 2.0, 2.6, 2.5, 2.3, 2.7, 2.1, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
		],
		# TG
		[
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 1.5, 1.9, 1.7, 1.8, 1.7, 2.2, 2.2, 1.9, 2.1, 1.7, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			2.1, 2.4, 2.2, 2.9, 2.4, 2.6, 2.0, 2.4, 2.2, 2.3, 2.2, 2.7, 2.7, 2.4, 2.6, 2.2, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 1.5, 1.9, 1.7, 1.8, 1.7, 2.2, 2.2, 1.9, 2.1, 1.7, 
			1.8, 2.1, 1.9, 2.6, 2.1, 2.3, 1.7, 2.1, 1.9, 2.0, 1.9, 2.4, 2.4, 2.1, 2.3, 1.9, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 1.5, 1.9, 1.7, 1.8, 1.7, 2.2, 2.2, 1.9, 2.1, 1.7, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			2.1, 2.4, 2.2, 2.9, 2.4, 2.6, 2.0, 2.4, 2.2, 2.3, 2.2, 2.7, 2.7, 2.4, 2.6, 2.2, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			2.1, 2.4, 2.2, 2.9, 2.4, 2.6, 2.0, 2.4, 2.2, 2.3, 2.2, 2.7, 2.7, 2.4, 2.6, 2.2, 
			2.1, 2.4, 2.2, 2.9, 2.4, 2.6, 2.0, 2.4, 2.2, 2.3, 2.2, 2.7, 2.7, 2.4, 2.6, 2.2, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			2.0, 2.3, 2.1, 2.8, 2.3, 2.5, 1.9, 2.3, 2.1, 2.2, 2.1, 2.6, 2.6, 2.3, 2.5, 2.1, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
		],
		# TT
		[
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			1.9, 2.1, 2.0, 2.6, 2.1, 2.3, 2.4, 2.2, 2.0, 2.2, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			2.4, 2.6, 2.5, 3.1, 2.6, 2.8, 2.9, 2.7, 2.5, 2.7, 2.5, 3.1, 3.1, 2.7, 3.1, 2.5, 
			1.9, 2.1, 2.0, 2.6, 2.1, 2.3, 2.4, 2.2, 2.0, 2.2, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			2.1, 2.3, 2.2, 2.8, 2.3, 2.5, 2.6, 2.4, 2.2, 2.4, 2.2, 2.8, 2.8, 2.4, 2.8, 2.2, 
			1.9, 2.1, 2.0, 2.6, 2.1, 2.3, 2.4, 2.2, 2.0, 2.2, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			2.4, 2.6, 2.5, 3.1, 2.6, 2.8, 2.9, 2.7, 2.5, 2.7, 2.5, 3.1, 3.1, 2.7, 3.1, 2.5, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			2.4, 2.6, 2.5, 3.1, 2.6, 2.8, 2.9, 2.7, 2.5, 2.7, 2.5, 3.1, 3.1, 2.7, 3.1, 2.5, 
			2.4, 2.6, 2.5, 3.1, 2.6, 2.8, 2.9, 2.7, 2.5, 2.7, 2.5, 3.1, 3.1, 2.7, 3.1, 2.5, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			2.3, 2.5, 2.4, 3.0, 2.5, 2.7, 2.8, 2.6, 2.4, 2.6, 2.4, 3.0, 3.0, 2.6, 3.0, 2.4, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
		],
		# TN
		[
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
			1.8, 2.0, 1.8, 2.5, 2.0, 2.2, 2.1, 2.0, 1.8, 1.9, 1.8, 2.4, 2.4, 2.0, 2.4, 1.9, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
			2.2, 2.5, 2.3, 3.0, 2.5, 2.7, 2.6, 2.5, 2.3, 2.4, 2.3, 2.9, 2.9, 2.5, 2.9, 2.4, 
			1.8, 2.0, 1.8, 2.5, 2.0, 2.2, 2.1, 2.0, 1.8, 1.9, 1.8, 2.4, 2.4, 2.0, 2.4, 1.9, 
			2.0, 2.2, 2.0, 2.6, 2.2, 2.4, 2.3, 2.2, 2.0, 2.0, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			1.8, 2.0, 1.8, 2.5, 2.0, 2.2, 2.1, 2.0, 1.8, 1.9, 1.8, 2.4, 2.4, 2.0, 2.4, 1.9, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.3, 2.2, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
			2.2, 2.5, 2.3, 3.0, 2.5, 2.7, 2.6, 2.5, 2.3, 2.4, 2.3, 2.9, 2.9, 2.5, 2.9, 2.4, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
			2.2, 2.5, 2.3, 3.0, 2.5, 2.7, 2.6, 2.5, 2.3, 2.4, 2.3, 2.9, 2.9, 2.5, 2.9, 2.4, 
			2.2, 2.5, 2.3, 3.0, 2.5, 2.7, 2.6, 2.5, 2.3, 2.4, 2.3, 2.9, 2.9, 2.5, 2.9, 2.4, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.3, 2.2, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 2.0, 
			2.1, 2.4, 2.2, 2.9, 2.4, 2.6, 2.5, 2.5, 2.2, 2.2, 2.2, 2.8, 2.8, 2.5, 2.8, 2.2, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 2.0, 2.0, 1.7, 1.8, 1.7, 2.3, 2.3, 2.0, 2.3, 1.8, 
		],
		# NA
		[
			1.6, 1.8, 1.6, 2.2, 1.8, 2.0, 2.2, 1.9, 1.6, 1.8, 1.6, 2.1, 2.2, 1.9, 2.2, 1.6, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			1.7, 1.8, 1.7, 2.3, 1.8, 2.0, 2.3, 1.9, 1.7, 1.8, 1.7, 2.2, 2.3, 1.9, 2.3, 1.7, 
			2.3, 2.4, 2.3, 2.9, 2.4, 2.6, 2.9, 2.5, 2.3, 2.4, 2.3, 2.8, 2.9, 2.5, 2.9, 2.3, 
			1.9, 2.0, 1.9, 2.5, 2.0, 2.2, 2.5, 2.1, 1.9, 2.0, 1.9, 2.4, 2.5, 2.1, 2.5, 1.9, 
			2.1, 2.2, 2.1, 2.7, 2.2, 2.4, 2.7, 2.3, 2.1, 2.2, 2.1, 2.6, 2.7, 2.3, 2.7, 2.1, 
			1.8, 1.9, 1.8, 2.4, 1.9, 2.0, 2.4, 1.9, 1.8, 1.9, 1.8, 2.2, 2.4, 1.9, 2.4, 1.8, 
			2.0, 2.0, 2.0, 2.5, 2.0, 2.2, 2.5, 2.1, 2.0, 2.0, 2.0, 2.5, 2.5, 2.1, 2.5, 2.0, 
			1.7, 1.8, 1.7, 2.3, 1.8, 2.0, 2.3, 1.9, 1.7, 1.8, 1.7, 2.2, 2.3, 1.9, 2.3, 1.7, 
			2.0, 2.1, 2.0, 2.6, 2.1, 2.3, 2.6, 2.2, 2.0, 2.1, 2.0, 2.5, 2.6, 2.2, 2.6, 2.0, 
			1.7, 1.8, 1.7, 2.3, 1.8, 2.0, 2.3, 1.9, 1.7, 1.8, 1.7, 2.2, 2.3, 1.9, 2.3, 1.7, 
			2.3, 2.4, 2.3, 2.9, 2.4, 2.6, 2.9, 2.5, 2.3, 2.4, 2.3, 2.8, 2.9, 2.5, 2.9, 2.3, 
			2.4, 2.5, 2.4, 3.0, 2.5, 2.6, 3.0, 2.5, 2.4, 2.5, 2.4, 2.9, 3.0, 2.5, 3.0, 2.4, 
			2.0, 2.0, 2.0, 2.5, 2.0, 2.2, 2.5, 2.1, 2.0, 2.0, 2.0, 2.5, 2.5, 2.1, 2.5, 2.0, 
			2.3, 2.4, 2.3, 2.9, 2.4, 2.6, 2.9, 2.5, 2.3, 2.4, 2.3, 2.8, 2.9, 2.5, 2.9, 2.3, 
			1.8, 1.9, 1.8, 2.4, 1.9, 2.0, 2.4, 2.0, 1.8, 1.9, 1.8, 2.2, 2.4, 2.0, 2.4, 1.8, 
		],
		# NC
		[
			1.1, 1.4, 1.2, 1.9, 1.4, 1.6, 1.4, 1.6, 1.2, 0.9, 1.2, 1.9, 1.8, 1.6, 2.0, 1.4, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.5, 1.6, 1.3, 1.0, 1.3, 1.9, 1.8, 1.6, 2.0, 1.4, 
			1.8, 2.1, 1.9, 2.5, 2.1, 2.3, 2.1, 2.2, 1.9, 1.6, 1.9, 2.5, 2.4, 2.2, 2.6, 2.0, 
			1.4, 1.7, 1.5, 2.1, 1.7, 1.9, 1.7, 1.8, 1.5, 1.2, 1.5, 2.1, 2.0, 1.8, 2.2, 1.6, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.1, 1.9, 2.0, 1.7, 1.4, 1.7, 2.3, 2.2, 2.0, 2.4, 1.8, 
			1.2, 1.6, 1.4, 1.9, 1.6, 1.8, 1.6, 1.6, 1.4, 1.1, 1.4, 1.9, 1.9, 1.6, 2.0, 1.4, 
			1.5, 1.8, 1.5, 2.1, 1.8, 2.0, 1.8, 1.9, 1.5, 1.2, 1.5, 2.1, 2.0, 1.9, 2.2, 1.6, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.5, 1.6, 1.3, 1.0, 1.3, 1.9, 1.8, 1.6, 2.0, 1.4, 
			1.5, 1.8, 1.6, 2.2, 1.8, 2.0, 1.8, 1.9, 1.6, 1.3, 1.6, 2.2, 2.1, 1.9, 2.3, 1.7, 
			1.2, 1.5, 1.3, 1.9, 1.5, 1.7, 1.5, 1.6, 1.3, 1.0, 1.3, 1.9, 1.8, 1.6, 2.0, 1.4, 
			1.8, 2.1, 1.9, 2.5, 2.1, 2.3, 2.1, 2.2, 1.9, 1.6, 1.9, 2.5, 2.4, 2.2, 2.6, 2.0, 
			1.9, 2.1, 1.9, 2.5, 2.1, 2.4, 2.1, 2.2, 1.9, 1.6, 1.9, 2.5, 2.5, 2.2, 2.6, 2.1, 
			1.5, 1.8, 1.5, 2.1, 1.8, 2.0, 1.8, 1.9, 1.5, 1.2, 1.5, 2.1, 2.0, 1.9, 2.2, 1.6, 
			1.8, 2.1, 1.9, 2.5, 2.1, 2.3, 2.1, 2.2, 1.9, 1.6, 1.9, 2.5, 2.4, 2.2, 2.6, 2.0, 
			1.2, 1.5, 1.4, 2.0, 1.5, 1.8, 1.5, 1.6, 1.4, 1.1, 1.4, 2.0, 1.9, 1.6, 2.0, 1.5, 
		],
		# NG
		[
			1.2, 1.6, 1.4, 2.0, 1.6, 1.8, 1.1, 1.6, 1.4, 1.4, 1.4, 1.9, 1.9, 1.6, 1.8, 1.4, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			1.3, 1.6, 1.4, 2.1, 1.6, 1.8, 1.2, 1.6, 1.4, 1.5, 1.4, 1.9, 1.9, 1.6, 1.8, 1.4, 
			1.9, 2.2, 2.0, 2.7, 2.2, 2.4, 1.8, 2.2, 2.0, 2.1, 2.0, 2.5, 2.5, 2.2, 2.4, 2.0, 
			1.5, 1.8, 1.6, 2.3, 1.8, 2.0, 1.4, 1.8, 1.6, 1.7, 1.6, 2.1, 2.1, 1.8, 2.0, 1.6, 
			1.7, 2.0, 1.8, 2.5, 2.0, 2.2, 1.6, 2.0, 1.8, 1.9, 1.8, 2.3, 2.3, 2.0, 2.2, 1.8, 
			1.4, 1.6, 1.4, 2.1, 1.6, 1.9, 1.2, 1.6, 1.4, 1.6, 1.4, 1.9, 1.9, 1.6, 1.9, 1.4, 
			1.5, 1.9, 1.6, 2.4, 1.9, 2.0, 1.5, 1.9, 1.6, 1.8, 1.6, 2.1, 2.1, 1.9, 2.0, 1.6, 
			1.3, 1.6, 1.4, 2.1, 1.6, 1.8, 1.2, 1.6, 1.4, 1.5, 1.4, 1.9, 1.9, 1.6, 1.8, 1.4, 
			1.6, 1.9, 1.7, 2.4, 1.9, 2.1, 1.5, 1.9, 1.7, 1.8, 1.7, 2.2, 2.2, 1.9, 2.1, 1.7, 
			1.3, 1.6, 1.4, 2.1, 1.6, 1.8, 1.2, 1.6, 1.4, 1.5, 1.4, 1.9, 1.9, 1.6, 1.8, 1.4, 
			1.9, 2.2, 2.0, 2.7, 2.2, 2.4, 1.8, 2.2, 2.0, 2.1, 2.0, 2.5, 2.5, 2.2, 2.4, 2.0, 
			1.9, 2.2, 2.1, 2.8, 2.2, 2.5, 1.9, 2.2, 2.1, 2.1, 2.1, 2.5, 2.5, 2.2, 2.5, 2.1, 
			1.5, 1.9, 1.6, 2.4, 1.9, 2.0, 1.5, 1.9, 1.6, 1.8, 1.6, 2.1, 2.1, 1.9, 2.0, 1.6, 
			1.9, 2.2, 2.0, 2.7, 2.2, 2.4, 1.8, 2.2, 2.0, 2.1, 2.0, 2.5, 2.5, 2.2, 2.4, 2.0, 
			1.4, 1.6, 1.5, 2.1, 1.6, 1.9, 1.2, 1.6, 1.5, 1.5, 1.5, 2.0, 2.0, 1.6, 1.9, 1.5, 
		],
		# NT
		[
			1.6, 1.8, 1.6, 2.2, 1.8, 2.0, 2.0, 1.9, 1.6, 1.9, 1.6, 2.2, 2.2, 1.9, 2.2, 1.6, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			1.6, 1.8, 1.7, 2.3, 1.8, 2.0, 2.1, 1.9, 1.7, 1.9, 1.7, 2.3, 2.3, 1.9, 2.3, 1.7, 
			2.2, 2.4, 2.3, 2.9, 2.4, 2.6, 2.7, 2.5, 2.3, 2.5, 2.3, 2.9, 2.9, 2.5, 2.9, 2.3, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.3, 2.1, 1.9, 2.1, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.4, 2.5, 2.3, 2.1, 2.3, 2.1, 2.7, 2.7, 2.3, 2.7, 2.1, 
			1.6, 1.9, 1.8, 2.4, 1.9, 2.0, 2.1, 1.9, 1.8, 1.9, 1.8, 2.4, 2.4, 1.9, 2.4, 1.8, 
			1.9, 2.0, 2.0, 2.5, 2.0, 2.2, 2.4, 2.1, 2.0, 2.1, 2.0, 2.5, 2.5, 2.1, 2.5, 2.0, 
			1.6, 1.8, 1.7, 2.3, 1.8, 2.0, 2.1, 1.9, 1.7, 1.9, 1.7, 2.3, 2.3, 1.9, 2.3, 1.7, 
			1.9, 2.1, 2.0, 2.6, 2.1, 2.3, 2.4, 2.2, 2.0, 2.2, 2.0, 2.6, 2.6, 2.2, 2.6, 2.0, 
			1.6, 1.8, 1.7, 2.3, 1.8, 2.0, 2.1, 1.9, 1.7, 1.9, 1.7, 2.3, 2.3, 1.9, 2.3, 1.7, 
			2.2, 2.4, 2.3, 2.9, 2.4, 2.6, 2.7, 2.5, 2.3, 2.5, 2.3, 2.9, 2.9, 2.5, 2.9, 2.3, 
			2.2, 2.5, 2.4, 3.0, 2.5, 2.6, 2.8, 2.5, 2.4, 2.5, 2.4, 3.0, 3.0, 2.5, 3.0, 2.4, 
			1.9, 2.0, 2.0, 2.5, 2.0, 2.2, 2.4, 2.1, 2.0, 2.1, 2.0, 2.5, 2.5, 2.1, 2.5, 2.0, 
			2.2, 2.4, 2.3, 2.9, 2.4, 2.6, 2.7, 2.5, 2.3, 2.5, 2.3, 2.9, 2.9, 2.5, 2.9, 2.3, 
			1.6, 1.9, 1.8, 2.4, 1.9, 2.0, 2.1, 2.0, 1.8, 2.0, 1.8, 2.4, 2.4, 2.0, 2.4, 1.8, 
		],
		# NN
		[
			1.4, 1.6, 1.5, 2.1, 1.6, 1.8, 1.7, 1.7, 1.5, 1.5, 1.5, 2.0, 2.0, 1.7, 2.0, 1.5, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.0, 1.9, 1.9, 1.7, 1.7, 1.7, 2.2, 2.2, 1.9, 2.3, 1.7, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 1.8, 1.8, 1.6, 1.6, 1.6, 2.1, 2.1, 1.8, 2.1, 1.6, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.5, 2.4, 2.3, 2.1, 2.1, 2.1, 2.6, 2.6, 2.3, 2.7, 2.1, 
			1.6, 1.9, 1.7, 2.3, 1.9, 2.0, 1.9, 1.9, 1.7, 1.7, 1.7, 2.2, 2.2, 1.9, 2.3, 1.7, 
			1.8, 2.0, 1.9, 2.5, 2.0, 2.2, 2.1, 2.1, 1.9, 1.9, 1.9, 2.5, 2.5, 2.1, 2.5, 1.9, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 1.8, 1.8, 1.6, 1.6, 1.6, 2.1, 2.1, 1.8, 2.1, 1.6, 
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.0, 2.0, 1.8, 1.8, 1.8, 2.3, 2.3, 2.0, 2.4, 1.8, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 1.8, 1.8, 1.6, 1.6, 1.6, 2.1, 2.1, 1.8, 2.1, 1.6, 
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.0, 2.0, 1.8, 1.8, 1.8, 2.4, 2.4, 2.0, 2.4, 1.8, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 1.8, 1.8, 1.6, 1.6, 1.6, 2.1, 2.1, 1.8, 2.1, 1.6, 
			2.0, 2.3, 2.1, 2.8, 2.3, 2.5, 2.4, 2.4, 2.1, 2.1, 2.1, 2.7, 2.7, 2.4, 2.7, 2.1, 
			2.1, 2.3, 2.2, 2.8, 2.3, 2.5, 2.4, 2.4, 2.2, 2.2, 2.2, 2.7, 2.7, 2.4, 2.8, 2.2, 
			1.7, 1.9, 1.8, 2.4, 1.9, 2.1, 2.0, 2.0, 1.8, 1.8, 1.8, 2.3, 2.3, 2.0, 2.4, 1.8, 
			2.0, 2.2, 2.1, 2.7, 2.2, 2.5, 2.4, 2.3, 2.1, 2.1, 2.1, 2.6, 2.6, 2.3, 2.7, 2.1, 
			1.5, 1.7, 1.6, 2.2, 1.7, 1.9, 1.8, 1.8, 1.6, 1.6, 1.6, 2.1, 2.1, 1.8, 2.1, 1.6, 
		],
])
    
int_loop_energy_dict["22dh"] = deque([
		# AA
		[
			6.3, 6.3, 6.3, 6.3, 6.6, 6.6, 6.6, 6.6, 4.7, 4.7, 4.7, 4.7, -1.8, -1.8, -1.8, -1.8, 
			7.5, 7.5, 7.5, 7.5, 7.8, 7.8, 7.8, 7.8, 5.9, 5.9, 5.9, 5.9, -0.6, -0.6, -0.6, -0.6, 
			7.0, 7.0, 7.0, 7.0, 7.3, 7.3, 7.3, 7.3, 5.4, 5.4, 5.4, 5.4, -1.1, -1.1, -1.1, -1.1, 
			6.6, 6.6, 6.6, 6.6, 6.9, 6.9, 6.9, 6.9, 5.0, 5.0, 5.0, 5.0, -1.5, -1.5, -1.5, -1.5, 
			6.3, 6.3, 6.3, 6.3, 6.6, 6.6, 6.6, 6.6, 4.7, 4.7, 4.7, 4.7, -1.8, -1.8, -1.8, -1.8, 
			7.5, 7.5, 7.5, 7.5, 7.8, 7.8, 7.8, 7.8, 5.9, 5.9, 5.9, 5.9, -0.6, -0.6, -0.6, -0.6, 
			7.0, 7.0, 7.0, 7.0, 7.3, 7.3, 7.3, 7.3, 5.4, 5.4, 5.4, 5.4, -1.1, -1.1, -1.1, -1.1, 
			6.6, 6.6, 6.6, 6.6, 6.9, 6.9, 6.9, 6.9, 5.0, 5.0, 5.0, 5.0, -1.5, -1.5, -1.5, -1.5, 
			6.3, 6.3, 6.3, 6.3, 6.6, 6.6, 6.6, 6.6, 4.7, 4.7, 4.7, 4.7, -1.8, -1.8, -1.8, -1.8, 
			7.5, 7.5, 7.5, 7.5, 7.8, 7.8, 7.8, 7.8, 5.9, 5.9, 5.9, 5.9, -0.6, -0.6, -0.6, -0.6, 
			7.0, 7.0, 7.0, 7.0, 7.3, 7.3, 7.3, 7.3, 5.4, 5.4, 5.4, 5.4, -1.1, -1.1, -1.1, -1.1, 
			6.6, 6.6, 6.6, 6.6, 6.9, 6.9, 6.9, 6.9, 5.0, 5.0, 5.0, 5.0, -1.5, -1.5, -1.5, -1.5, 
			6.3, 6.3, 6.3, 6.3, 6.6, 6.6, 6.6, 6.6, 4.7, 4.7, 4.7, 4.7, -1.8, -1.8, -1.8, -1.8, 
			7.5, 7.5, 7.5, 7.5, 7.8, 7.8, 7.8, 7.8, 5.9, 5.9, 5.9, 5.9, -0.6, -0.6, -0.6, -0.6, 
			7.0, 7.0, 7.0, 7.0, 7.3, 7.3, 7.3, 7.3, 5.4, 5.4, 5.4, 5.4, -1.1, -1.1, -1.1, -1.1, 
			6.6, 6.6, 6.6, 6.6, 6.9, 6.9, 6.9, 6.9, 5.0, 5.0, 5.0, 5.0, -1.5, -1.5, -1.5, -1.5, 
		],
		# AC
		[
			-2.2, -2.2, -2.2, -2.2, 0.7, 0.7, 0.7, 0.7, -1.1, -1.1, -1.1, -1.1, 3.1, 3.1, 3.1, 3.1, 
			-1.0, -1.0, -1.0, -1.0, 1.9, 1.9, 1.9, 1.9, 0.1, 0.1, 0.1, 0.1, 4.3, 4.3, 4.3, 4.3, 
			-1.5, -1.5, -1.5, -1.5, 1.4, 1.4, 1.4, 1.4, -0.4, -0.4, -0.4, -0.4, 3.8, 3.8, 3.8, 3.8, 
			-1.9, -1.9, -1.9, -1.9, 1.0, 1.0, 1.0, 1.0, -0.8, -0.8, -0.8, -0.8, 3.4, 3.4, 3.4, 3.4, 
			-2.2, -2.2, -2.2, -2.2, 0.7, 0.7, 0.7, 0.7, -1.1, -1.1, -1.1, -1.1, 3.1, 3.1, 3.1, 3.1, 
			-1.0, -1.0, -1.0, -1.0, 1.9, 1.9, 1.9, 1.9, 0.1, 0.1, 0.1, 0.1, 4.3, 4.3, 4.3, 4.3, 
			-1.5, -1.5, -1.5, -1.5, 1.4, 1.4, 1.4, 1.4, -0.4, -0.4, -0.4, -0.4, 3.8, 3.8, 3.8, 3.8, 
			-1.9, -1.9, -1.9, -1.9, 1.0, 1.0, 1.0, 1.0, -0.8, -0.8, -0.8, -0.8, 3.4, 3.4, 3.4, 3.4, 
			-2.2, -2.2, -2.2, -2.2, 0.7, 0.7, 0.7, 0.7, -1.1, -1.1, -1.1, -1.1, 3.1, 3.1, 3.1, 3.1, 
			-1.0, -1.0, -1.0, -1.0, 1.9, 1.9, 1.9, 1.9, 0.1, 0.1, 0.1, 0.1, 4.3, 4.3, 4.3, 4.3, 
			-1.5, -1.5, -1.5, -1.5, 1.4, 1.4, 1.4, 1.4, -0.4, -0.4, -0.4, -0.4, 3.8, 3.8, 3.8, 3.8, 
			-1.9, -1.9, -1.9, -1.9, 1.0, 1.0, 1.0, 1.0, -0.8, -0.8, -0.8, -0.8, 3.4, 3.4, 3.4, 3.4, 
			-2.2, -2.2, -2.2, -2.2, 0.7, 0.7, 0.7, 0.7, -1.1, -1.1, -1.1, -1.1, 3.1, 3.1, 3.1, 3.1, 
			-1.0, -1.0, -1.0, -1.0, 1.9, 1.9, 1.9, 1.9, 0.1, 0.1, 0.1, 0.1, 4.3, 4.3, 4.3, 4.3, 
			-1.5, -1.5, -1.5, -1.5, 1.4, 1.4, 1.4, 1.4, -0.4, -0.4, -0.4, -0.4, 3.8, 3.8, 3.8, 3.8, 
			-1.9, -1.9, -1.9, -1.9, 1.0, 1.0, 1.0, 1.0, -0.8, -0.8, -0.8, -0.8, 3.4, 3.4, 3.4, 3.4, 
		],
		# AG
		[
			-0.6, -0.6, -0.6, -0.6, -0.2, -0.2, -0.2, -0.2, -0.7, -0.7, -0.7, -0.7, -1.0, -1.0, -1.0, -1.0, 
			0.6, 0.6, 0.6, 0.6, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.2, 0.2, 0.2, 0.2, 
			0.1, 0.1, 0.1, 0.1, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, -0.3, -0.3, -0.3, -0.3, 
			-0.3, -0.3, -0.3, -0.3, 0.1, 0.1, 0.1, 0.1, -0.4, -0.4, -0.4, -0.4, -0.7, -0.7, -0.7, -0.7, 
			-0.6, -0.6, -0.6, -0.6, -0.2, -0.2, -0.2, -0.2, -0.7, -0.7, -0.7, -0.7, -1.0, -1.0, -1.0, -1.0, 
			0.6, 0.6, 0.6, 0.6, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.2, 0.2, 0.2, 0.2, 
			0.1, 0.1, 0.1, 0.1, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, -0.3, -0.3, -0.3, -0.3, 
			-0.3, -0.3, -0.3, -0.3, 0.1, 0.1, 0.1, 0.1, -0.4, -0.4, -0.4, -0.4, -0.7, -0.7, -0.7, -0.7, 
			-0.6, -0.6, -0.6, -0.6, -0.2, -0.2, -0.2, -0.2, -0.7, -0.7, -0.7, -0.7, -1.0, -1.0, -1.0, -1.0, 
			0.6, 0.6, 0.6, 0.6, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.2, 0.2, 0.2, 0.2, 
			0.1, 0.1, 0.1, 0.1, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, -0.3, -0.3, -0.3, -0.3, 
			-0.3, -0.3, -0.3, -0.3, 0.1, 0.1, 0.1, 0.1, -0.4, -0.4, -0.4, -0.4, -0.7, -0.7, -0.7, -0.7, 
			-0.6, -0.6, -0.6, -0.6, -0.2, -0.2, -0.2, -0.2, -0.7, -0.7, -0.7, -0.7, -1.0, -1.0, -1.0, -1.0, 
			0.6, 0.6, 0.6, 0.6, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.2, 0.2, 0.2, 0.2, 
			0.1, 0.1, 0.1, 0.1, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, -0.3, -0.3, -0.3, -0.3, 
			-0.3, -0.3, -0.3, -0.3, 0.1, 0.1, 0.1, 0.1, -0.4, -0.4, -0.4, -0.4, -0.7, -0.7, -0.7, -0.7, 
		],
		# AT
		[
			8.0, 8.0, 8.0, 8.0, 9.2, 9.2, 9.2, 9.2, 8.7, 8.7, 8.7, 8.7, 8.3, 8.3, 8.3, 8.3, 
			9.2, 9.2, 9.2, 9.2, 10.4, 10.4, 10.4, 10.4, 9.9, 9.9, 9.9, 9.9, 9.5, 9.5, 9.5, 9.5, 
			8.7, 8.7, 8.7, 8.7, 9.9, 9.9, 9.9, 9.9, 9.4, 9.4, 9.4, 9.4, 9.0, 9.0, 9.0, 9.0, 
			8.3, 8.3, 8.3, 8.3, 9.5, 9.5, 9.5, 9.5, 9.0, 9.0, 9.0, 9.0, 8.6, 8.6, 8.6, 8.6, 
			8.0, 8.0, 8.0, 8.0, 9.2, 9.2, 9.2, 9.2, 8.7, 8.7, 8.7, 8.7, 8.3, 8.3, 8.3, 8.3, 
			9.2, 9.2, 9.2, 9.2, 10.4, 10.4, 10.4, 10.4, 9.9, 9.9, 9.9, 9.9, 9.5, 9.5, 9.5, 9.5, 
			8.7, 8.7, 8.7, 8.7, 9.9, 9.9, 9.9, 9.9, 9.4, 9.4, 9.4, 9.4, 9.0, 9.0, 9.0, 9.0, 
			8.3, 8.3, 8.3, 8.3, 9.5, 9.5, 9.5, 9.5, 9.0, 9.0, 9.0, 9.0, 8.6, 8.6, 8.6, 8.6, 
			8.0, 8.0, 8.0, 8.0, 9.2, 9.2, 9.2, 9.2, 8.7, 8.7, 8.7, 8.7, 8.3, 8.3, 8.3, 8.3, 
			9.2, 9.2, 9.2, 9.2, 10.4, 10.4, 10.4, 10.4, 9.9, 9.9, 9.9, 9.9, 9.5, 9.5, 9.5, 9.5, 
			8.7, 8.7, 8.7, 8.7, 9.9, 9.9, 9.9, 9.9, 9.4, 9.4, 9.4, 9.4, 9.0, 9.0, 9.0, 9.0, 
			8.3, 8.3, 8.3, 8.3, 9.5, 9.5, 9.5, 9.5, 9.0, 9.0, 9.0, 9.0, 8.6, 8.6, 8.6, 8.6, 
			8.0, 8.0, 8.0, 8.0, 9.2, 9.2, 9.2, 9.2, 8.7, 8.7, 8.7, 8.7, 8.3, 8.3, 8.3, 8.3, 
			9.2, 9.2, 9.2, 9.2, 10.4, 10.4, 10.4, 10.4, 9.9, 9.9, 9.9, 9.9, 9.5, 9.5, 9.5, 9.5, 
			8.7, 8.7, 8.7, 8.7, 9.9, 9.9, 9.9, 9.9, 9.4, 9.4, 9.4, 9.4, 9.0, 9.0, 9.0, 9.0, 
			8.3, 8.3, 8.3, 8.3, 9.5, 9.5, 9.5, 9.5, 9.0, 9.0, 9.0, 9.0, 8.6, 8.6, 8.6, 8.6, 
		],
		# AN
		[
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 2.9, 2.9, 2.9, 2.9, 2.2, 2.2, 2.2, 2.2, 
			4.1, 4.1, 4.1, 4.1, 5.3, 5.3, 5.3, 5.3, 4.1, 4.1, 4.1, 4.1, 3.4, 3.4, 3.4, 3.4, 
			3.6, 3.6, 3.6, 3.6, 4.8, 4.8, 4.8, 4.8, 3.6, 3.6, 3.6, 3.6, 2.9, 2.9, 2.9, 2.9, 
			3.2, 3.2, 3.2, 3.2, 4.4, 4.4, 4.4, 4.4, 3.2, 3.2, 3.2, 3.2, 2.4, 2.4, 2.4, 2.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 2.9, 2.9, 2.9, 2.9, 2.2, 2.2, 2.2, 2.2, 
			4.1, 4.1, 4.1, 4.1, 5.3, 5.3, 5.3, 5.3, 4.1, 4.1, 4.1, 4.1, 3.4, 3.4, 3.4, 3.4, 
			3.6, 3.6, 3.6, 3.6, 4.8, 4.8, 4.8, 4.8, 3.6, 3.6, 3.6, 3.6, 2.9, 2.9, 2.9, 2.9, 
			3.2, 3.2, 3.2, 3.2, 4.4, 4.4, 4.4, 4.4, 3.2, 3.2, 3.2, 3.2, 2.4, 2.4, 2.4, 2.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 2.9, 2.9, 2.9, 2.9, 2.2, 2.2, 2.2, 2.2, 
			4.1, 4.1, 4.1, 4.1, 5.3, 5.3, 5.3, 5.3, 4.1, 4.1, 4.1, 4.1, 3.4, 3.4, 3.4, 3.4, 
			3.6, 3.6, 3.6, 3.6, 4.8, 4.8, 4.8, 4.8, 3.6, 3.6, 3.6, 3.6, 2.9, 2.9, 2.9, 2.9, 
			3.2, 3.2, 3.2, 3.2, 4.4, 4.4, 4.4, 4.4, 3.2, 3.2, 3.2, 3.2, 2.4, 2.4, 2.4, 2.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 2.9, 2.9, 2.9, 2.9, 2.2, 2.2, 2.2, 2.2, 
			4.1, 4.1, 4.1, 4.1, 5.3, 5.3, 5.3, 5.3, 4.1, 4.1, 4.1, 4.1, 3.4, 3.4, 3.4, 3.4, 
			3.6, 3.6, 3.6, 3.6, 4.8, 4.8, 4.8, 4.8, 3.6, 3.6, 3.6, 3.6, 2.9, 2.9, 2.9, 2.9, 
			3.2, 3.2, 3.2, 3.2, 4.4, 4.4, 4.4, 4.4, 3.2, 3.2, 3.2, 3.2, 2.4, 2.4, 2.4, 2.4, 
		],
		# CA
		[
			-2.3, -2.3, -2.3, -2.3, -2.0, -2.0, -2.0, -2.0, -3.9, -3.9, -3.9, -3.9, -10.4, -10.4, -10.4, -10.4, 
			-1.9, -1.9, -1.9, -1.9, -1.6, -1.6, -1.6, -1.6, -3.5, -3.5, -3.5, -3.5, -10.0, -10.0, -10.0, -10.0, 
			-2.4, -2.4, -2.4, -2.4, -2.1, -2.1, -2.1, -2.1, -4.0, -4.0, -4.0, -4.0, -10.5, -10.5, -10.5, -10.5, 
			-2.7, -2.7, -2.7, -2.7, -2.4, -2.4, -2.4, -2.4, -4.3, -4.3, -4.3, -4.3, -10.8, -10.8, -10.8, -10.8, 
			-2.3, -2.3, -2.3, -2.3, -2.0, -2.0, -2.0, -2.0, -3.9, -3.9, -3.9, -3.9, -10.4, -10.4, -10.4, -10.4, 
			-1.9, -1.9, -1.9, -1.9, -1.6, -1.6, -1.6, -1.6, -3.5, -3.5, -3.5, -3.5, -10.0, -10.0, -10.0, -10.0, 
			-2.4, -2.4, -2.4, -2.4, -2.1, -2.1, -2.1, -2.1, -4.0, -4.0, -4.0, -4.0, -10.5, -10.5, -10.5, -10.5, 
			-2.7, -2.7, -2.7, -2.7, -2.4, -2.4, -2.4, -2.4, -4.3, -4.3, -4.3, -4.3, -10.8, -10.8, -10.8, -10.8, 
			-2.3, -2.3, -2.3, -2.3, -2.0, -2.0, -2.0, -2.0, -3.9, -3.9, -3.9, -3.9, -10.4, -10.4, -10.4, -10.4, 
			-1.9, -1.9, -1.9, -1.9, -1.6, -1.6, -1.6, -1.6, -3.5, -3.5, -3.5, -3.5, -10.0, -10.0, -10.0, -10.0, 
			-2.4, -2.4, -2.4, -2.4, -2.1, -2.1, -2.1, -2.1, -4.0, -4.0, -4.0, -4.0, -10.5, -10.5, -10.5, -10.5, 
			-2.7, -2.7, -2.7, -2.7, -2.4, -2.4, -2.4, -2.4, -4.3, -4.3, -4.3, -4.3, -10.8, -10.8, -10.8, -10.8, 
			-2.3, -2.3, -2.3, -2.3, -2.0, -2.0, -2.0, -2.0, -3.9, -3.9, -3.9, -3.9, -10.4, -10.4, -10.4, -10.4, 
			-1.9, -1.9, -1.9, -1.9, -1.6, -1.6, -1.6, -1.6, -3.5, -3.5, -3.5, -3.5, -10.0, -10.0, -10.0, -10.0, 
			-2.4, -2.4, -2.4, -2.4, -2.1, -2.1, -2.1, -2.1, -4.0, -4.0, -4.0, -4.0, -10.5, -10.5, -10.5, -10.5, 
			-2.7, -2.7, -2.7, -2.7, -2.4, -2.4, -2.4, -2.4, -4.3, -4.3, -4.3, -4.3, -10.8, -10.8, -10.8, -10.8, 
		],
		# CC
		[
			-10.8, -10.8, -10.8, -10.8, -7.9, -7.9, -7.9, -7.9, -9.7, -9.7, -9.7, -9.7, -5.5, -5.5, -5.5, -5.5, 
			-10.4, -10.4, -10.4, -10.4, -7.5, -7.5, -7.5, -7.5, -9.3, -9.3, -9.3, -9.3, -5.1, -5.1, -5.1, -5.1, 
			-10.9, -10.9, -10.9, -10.9, -8.0, -8.0, -8.0, -8.0, -9.8, -9.8, -9.8, -9.8, -5.6, -5.6, -5.6, -5.6, 
			-11.2, -11.2, -11.2, -11.2, -8.3, -8.3, -8.3, -8.3, -10.1, -10.1, -10.1, -10.1, -5.9, -5.9, -5.9, -5.9, 
			-10.8, -10.8, -10.8, -10.8, -7.9, -7.9, -7.9, -7.9, -9.7, -9.7, -9.7, -9.7, -5.5, -5.5, -5.5, -5.5, 
			-10.4, -10.4, -10.4, -10.4, -7.5, -7.5, -7.5, -7.5, -9.3, -9.3, -9.3, -9.3, -5.1, -5.1, -5.1, -5.1, 
			-10.9, -10.9, -10.9, -10.9, -8.0, -8.0, -8.0, -8.0, -9.8, -9.8, -9.8, -9.8, -5.6, -5.6, -5.6, -5.6, 
			-11.2, -11.2, -11.2, -11.2, -8.3, -8.3, -8.3, -8.3, -10.1, -10.1, -10.1, -10.1, -5.9, -5.9, -5.9, -5.9, 
			-10.8, -10.8, -10.8, -10.8, -7.9, -7.9, -7.9, -7.9, -9.7, -9.7, -9.7, -9.7, -5.5, -5.5, -5.5, -5.5, 
			-10.4, -10.4, -10.4, -10.4, -7.5, -7.5, -7.5, -7.5, -9.3, -9.3, -9.3, -9.3, -5.1, -5.1, -5.1, -5.1, 
			-10.9, -10.9, -10.9, -10.9, -8.0, -8.0, -8.0, -8.0, -9.8, -9.8, -9.8, -9.8, -5.6, -5.6, -5.6, -5.6, 
			-11.2, -11.2, -11.2, -11.2, -8.3, -8.3, -8.3, -8.3, -10.1, -10.1, -10.1, -10.1, -5.9, -5.9, -5.9, -5.9, 
			-10.8, -10.8, -10.8, -10.8, -7.9, -7.9, -7.9, -7.9, -9.7, -9.7, -9.7, -9.7, -5.5, -5.5, -5.5, -5.5, 
			-10.4, -10.4, -10.4, -10.4, -7.5, -7.5, -7.5, -7.5, -9.3, -9.3, -9.3, -9.3, -5.1, -5.1, -5.1, -5.1, 
			-10.9, -10.9, -10.9, -10.9, -8.0, -8.0, -8.0, -8.0, -9.8, -9.8, -9.8, -9.8, -5.6, -5.6, -5.6, -5.6, 
			-11.2, -11.2, -11.2, -11.2, -8.3, -8.3, -8.3, -8.3, -10.1, -10.1, -10.1, -10.1, -5.9, -5.9, -5.9, -5.9, 
		],
		# CG
		[
			-9.2, -9.2, -9.2, -9.2, -8.8, -8.8, -8.8, -8.8, -9.3, -9.3, -9.3, -9.3, -9.6, -9.6, -9.6, -9.6, 
			-8.8, -8.8, -8.8, -8.8, -8.4, -8.4, -8.4, -8.4, -8.9, -8.9, -8.9, -8.9, -9.2, -9.2, -9.2, -9.2, 
			-9.3, -9.3, -9.3, -9.3, -8.9, -8.9, -8.9, -8.9, -9.4, -9.4, -9.4, -9.4, -9.7, -9.7, -9.7, -9.7, 
			-9.6, -9.6, -9.6, -9.6, -9.2, -9.2, -9.2, -9.2, -9.7, -9.7, -9.7, -9.7, -10.0, -10.0, -10.0, -10.0, 
			-9.2, -9.2, -9.2, -9.2, -8.8, -8.8, -8.8, -8.8, -9.3, -9.3, -9.3, -9.3, -9.6, -9.6, -9.6, -9.6, 
			-8.8, -8.8, -8.8, -8.8, -8.4, -8.4, -8.4, -8.4, -8.9, -8.9, -8.9, -8.9, -9.2, -9.2, -9.2, -9.2, 
			-9.3, -9.3, -9.3, -9.3, -8.9, -8.9, -8.9, -8.9, -9.4, -9.4, -9.4, -9.4, -9.7, -9.7, -9.7, -9.7, 
			-9.6, -9.6, -9.6, -9.6, -9.2, -9.2, -9.2, -9.2, -9.7, -9.7, -9.7, -9.7, -10.0, -10.0, -10.0, -10.0, 
			-9.2, -9.2, -9.2, -9.2, -8.8, -8.8, -8.8, -8.8, -9.3, -9.3, -9.3, -9.3, -9.6, -9.6, -9.6, -9.6, 
			-8.8, -8.8, -8.8, -8.8, -8.4, -8.4, -8.4, -8.4, -8.9, -8.9, -8.9, -8.9, -9.2, -9.2, -9.2, -9.2, 
			-9.3, -9.3, -9.3, -9.3, -8.9, -8.9, -8.9, -8.9, -9.4, -9.4, -9.4, -9.4, -9.7, -9.7, -9.7, -9.7, 
			-9.6, -9.6, -9.6, -9.6, -9.2, -9.2, -9.2, -9.2, -9.7, -9.7, -9.7, -9.7, -10.0, -10.0, -10.0, -10.0, 
			-9.2, -9.2, -9.2, -9.2, -8.8, -8.8, -8.8, -8.8, -9.3, -9.3, -9.3, -9.3, -9.6, -9.6, -9.6, -9.6, 
			-8.8, -8.8, -8.8, -8.8, -8.4, -8.4, -8.4, -8.4, -8.9, -8.9, -8.9, -8.9, -9.2, -9.2, -9.2, -9.2, 
			-9.3, -9.3, -9.3, -9.3, -8.9, -8.9, -8.9, -8.9, -9.4, -9.4, -9.4, -9.4, -9.7, -9.7, -9.7, -9.7, 
			-9.6, -9.6, -9.6, -9.6, -9.2, -9.2, -9.2, -9.2, -9.7, -9.7, -9.7, -9.7, -10.0, -10.0, -10.0, -10.0, 
		],
		# CT
		[
			-0.6, -0.6, -0.6, -0.6, 0.6, 0.6, 0.6, 0.6, 0.1, 0.1, 0.1, 0.1, -0.3, -0.3, -0.3, -0.3, 
			-0.2, -0.2, -0.2, -0.2, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.1, 0.1, 0.1, 0.1, 
			-0.7, -0.7, -0.7, -0.7, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, -0.4, -0.4, -0.4, -0.4, 
			-1.0, -1.0, -1.0, -1.0, 0.2, 0.2, 0.2, 0.2, -0.3, -0.3, -0.3, -0.3, -0.7, -0.7, -0.7, -0.7, 
			-0.6, -0.6, -0.6, -0.6, 0.6, 0.6, 0.6, 0.6, 0.1, 0.1, 0.1, 0.1, -0.3, -0.3, -0.3, -0.3, 
			-0.2, -0.2, -0.2, -0.2, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.1, 0.1, 0.1, 0.1, 
			-0.7, -0.7, -0.7, -0.7, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, -0.4, -0.4, -0.4, -0.4, 
			-1.0, -1.0, -1.0, -1.0, 0.2, 0.2, 0.2, 0.2, -0.3, -0.3, -0.3, -0.3, -0.7, -0.7, -0.7, -0.7, 
			-0.6, -0.6, -0.6, -0.6, 0.6, 0.6, 0.6, 0.6, 0.1, 0.1, 0.1, 0.1, -0.3, -0.3, -0.3, -0.3, 
			-0.2, -0.2, -0.2, -0.2, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.1, 0.1, 0.1, 0.1, 
			-0.7, -0.7, -0.7, -0.7, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, -0.4, -0.4, -0.4, -0.4, 
			-1.0, -1.0, -1.0, -1.0, 0.2, 0.2, 0.2, 0.2, -0.3, -0.3, -0.3, -0.3, -0.7, -0.7, -0.7, -0.7, 
			-0.6, -0.6, -0.6, -0.6, 0.6, 0.6, 0.6, 0.6, 0.1, 0.1, 0.1, 0.1, -0.3, -0.3, -0.3, -0.3, 
			-0.2, -0.2, -0.2, -0.2, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5, 0.5, 0.5, 0.1, 0.1, 0.1, 0.1, 
			-0.7, -0.7, -0.7, -0.7, 0.5, 0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, -0.4, -0.4, -0.4, -0.4, 
			-1.0, -1.0, -1.0, -1.0, 0.2, 0.2, 0.2, 0.2, -0.3, -0.3, -0.3, -0.3, -0.7, -0.7, -0.7, -0.7, 
		],
		# CN
		[
			-5.7, -5.7, -5.7, -5.7, -4.5, -4.5, -4.5, -4.5, -5.7, -5.7, -5.7, -5.7, -6.5, -6.5, -6.5, -6.5, 
			-5.3, -5.3, -5.3, -5.3, -4.1, -4.1, -4.1, -4.1, -5.3, -5.3, -5.3, -5.3, -6.0, -6.0, -6.0, -6.0, 
			-5.8, -5.8, -5.8, -5.8, -4.6, -4.6, -4.6, -4.6, -5.8, -5.8, -5.8, -5.8, -6.5, -6.5, -6.5, -6.5, 
			-6.1, -6.1, -6.1, -6.1, -4.9, -4.9, -4.9, -4.9, -6.1, -6.1, -6.1, -6.1, -6.9, -6.9, -6.9, -6.9, 
			-5.7, -5.7, -5.7, -5.7, -4.5, -4.5, -4.5, -4.5, -5.7, -5.7, -5.7, -5.7, -6.5, -6.5, -6.5, -6.5, 
			-5.3, -5.3, -5.3, -5.3, -4.1, -4.1, -4.1, -4.1, -5.3, -5.3, -5.3, -5.3, -6.0, -6.0, -6.0, -6.0, 
			-5.8, -5.8, -5.8, -5.8, -4.6, -4.6, -4.6, -4.6, -5.8, -5.8, -5.8, -5.8, -6.5, -6.5, -6.5, -6.5, 
			-6.1, -6.1, -6.1, -6.1, -4.9, -4.9, -4.9, -4.9, -6.1, -6.1, -6.1, -6.1, -6.9, -6.9, -6.9, -6.9, 
			-5.7, -5.7, -5.7, -5.7, -4.5, -4.5, -4.5, -4.5, -5.7, -5.7, -5.7, -5.7, -6.5, -6.5, -6.5, -6.5, 
			-5.3, -5.3, -5.3, -5.3, -4.1, -4.1, -4.1, -4.1, -5.3, -5.3, -5.3, -5.3, -6.0, -6.0, -6.0, -6.0, 
			-5.8, -5.8, -5.8, -5.8, -4.6, -4.6, -4.6, -4.6, -5.8, -5.8, -5.8, -5.8, -6.5, -6.5, -6.5, -6.5, 
			-6.1, -6.1, -6.1, -6.1, -4.9, -4.9, -4.9, -4.9, -6.1, -6.1, -6.1, -6.1, -6.9, -6.9, -6.9, -6.9, 
			-5.7, -5.7, -5.7, -5.7, -4.5, -4.5, -4.5, -4.5, -5.7, -5.7, -5.7, -5.7, -6.5, -6.5, -6.5, -6.5, 
			-5.3, -5.3, -5.3, -5.3, -4.1, -4.1, -4.1, -4.1, -5.3, -5.3, -5.3, -5.3, -6.0, -6.0, -6.0, -6.0, 
			-5.8, -5.8, -5.8, -5.8, -4.6, -4.6, -4.6, -4.6, -5.8, -5.8, -5.8, -5.8, -6.5, -6.5, -6.5, -6.5, 
			-6.1, -6.1, -6.1, -6.1, -4.9, -4.9, -4.9, -4.9, -6.1, -6.1, -6.1, -6.1, -6.9, -6.9, -6.9, -6.9, 
		],
		# GA
		[
			-3.9, -3.9, -3.9, -3.9, -3.6, -3.6, -3.6, -3.6, -5.5, -5.5, -5.5, -5.5, -12.0, -12.0, -12.0, -12.0, 
			-1.0, -1.0, -1.0, -1.0, -0.7, -0.7, -0.7, -0.7, -2.6, -2.6, -2.6, -2.6, -9.1, -9.1, -9.1, -9.1, 
			-2.8, -2.8, -2.8, -2.8, -2.5, -2.5, -2.5, -2.5, -4.4, -4.4, -4.4, -4.4, -10.9, -10.9, -10.9, -10.9, 
			1.4, 1.4, 1.4, 1.4, 1.7, 1.7, 1.7, 1.7, -0.2, -0.2, -0.2, -0.2, -6.7, -6.7, -6.7, -6.7, 
			-3.9, -3.9, -3.9, -3.9, -3.6, -3.6, -3.6, -3.6, -5.5, -5.5, -5.5, -5.5, -12.0, -12.0, -12.0, -12.0, 
			-1.0, -1.0, -1.0, -1.0, -0.7, -0.7, -0.7, -0.7, -2.6, -2.6, -2.6, -2.6, -9.1, -9.1, -9.1, -9.1, 
			-2.8, -2.8, -2.8, -2.8, -2.5, -2.5, -2.5, -2.5, -4.4, -4.4, -4.4, -4.4, -10.9, -10.9, -10.9, -10.9, 
			1.4, 1.4, 1.4, 1.4, 1.7, 1.7, 1.7, 1.7, -0.2, -0.2, -0.2, -0.2, -6.7, -6.7, -6.7, -6.7, 
			-3.9, -3.9, -3.9, -3.9, -3.6, -3.6, -3.6, -3.6, -5.5, -5.5, -5.5, -5.5, -12.0, -12.0, -12.0, -12.0, 
			-1.0, -1.0, -1.0, -1.0, -0.7, -0.7, -0.7, -0.7, -2.6, -2.6, -2.6, -2.6, -9.1, -9.1, -9.1, -9.1, 
			-2.8, -2.8, -2.8, -2.8, -2.5, -2.5, -2.5, -2.5, -4.4, -4.4, -4.4, -4.4, -10.9, -10.9, -10.9, -10.9, 
			1.4, 1.4, 1.4, 1.4, 1.7, 1.7, 1.7, 1.7, -0.2, -0.2, -0.2, -0.2, -6.7, -6.7, -6.7, -6.7, 
			-3.9, -3.9, -3.9, -3.9, -3.6, -3.6, -3.6, -3.6, -5.5, -5.5, -5.5, -5.5, -12.0, -12.0, -12.0, -12.0, 
			-1.0, -1.0, -1.0, -1.0, -0.7, -0.7, -0.7, -0.7, -2.6, -2.6, -2.6, -2.6, -9.1, -9.1, -9.1, -9.1, 
			-2.8, -2.8, -2.8, -2.8, -2.5, -2.5, -2.5, -2.5, -4.4, -4.4, -4.4, -4.4, -10.9, -10.9, -10.9, -10.9, 
			1.4, 1.4, 1.4, 1.4, 1.7, 1.7, 1.7, 1.7, -0.2, -0.2, -0.2, -0.2, -6.7, -6.7, -6.7, -6.7, 
		],
		# GC
		[
			-12.4, -12.4, -12.4, -12.4, -9.5, -9.5, -9.5, -9.5, -11.3, -11.3, -11.3, -11.3, -7.1, -7.1, -7.1, -7.1, 
			-9.5, -9.5, -9.5, -9.5, -6.6, -6.6, -6.6, -6.6, -8.4, -8.4, -8.4, -8.4, -4.2, -4.2, -4.2, -4.2, 
			-11.3, -11.3, -11.3, -11.3, -8.4, -8.4, -8.4, -8.4, -10.2, -10.2, -10.2, -10.2, -6.0, -6.0, -6.0, -6.0, 
			-7.1, -7.1, -7.1, -7.1, -4.2, -4.2, -4.2, -4.2, -6.0, -6.0, -6.0, -6.0, -1.8, -1.8, -1.8, -1.8, 
			-12.4, -12.4, -12.4, -12.4, -9.5, -9.5, -9.5, -9.5, -11.3, -11.3, -11.3, -11.3, -7.1, -7.1, -7.1, -7.1, 
			-9.5, -9.5, -9.5, -9.5, -6.6, -6.6, -6.6, -6.6, -8.4, -8.4, -8.4, -8.4, -4.2, -4.2, -4.2, -4.2, 
			-11.3, -11.3, -11.3, -11.3, -8.4, -8.4, -8.4, -8.4, -10.2, -10.2, -10.2, -10.2, -6.0, -6.0, -6.0, -6.0, 
			-7.1, -7.1, -7.1, -7.1, -4.2, -4.2, -4.2, -4.2, -6.0, -6.0, -6.0, -6.0, -1.8, -1.8, -1.8, -1.8, 
			-12.4, -12.4, -12.4, -12.4, -9.5, -9.5, -9.5, -9.5, -11.3, -11.3, -11.3, -11.3, -7.1, -7.1, -7.1, -7.1, 
			-9.5, -9.5, -9.5, -9.5, -6.6, -6.6, -6.6, -6.6, -8.4, -8.4, -8.4, -8.4, -4.2, -4.2, -4.2, -4.2, 
			-11.3, -11.3, -11.3, -11.3, -8.4, -8.4, -8.4, -8.4, -10.2, -10.2, -10.2, -10.2, -6.0, -6.0, -6.0, -6.0, 
			-7.1, -7.1, -7.1, -7.1, -4.2, -4.2, -4.2, -4.2, -6.0, -6.0, -6.0, -6.0, -1.8, -1.8, -1.8, -1.8, 
			-12.4, -12.4, -12.4, -12.4, -9.5, -9.5, -9.5, -9.5, -11.3, -11.3, -11.3, -11.3, -7.1, -7.1, -7.1, -7.1, 
			-9.5, -9.5, -9.5, -9.5, -6.6, -6.6, -6.6, -6.6, -8.4, -8.4, -8.4, -8.4, -4.2, -4.2, -4.2, -4.2, 
			-11.3, -11.3, -11.3, -11.3, -8.4, -8.4, -8.4, -8.4, -10.2, -10.2, -10.2, -10.2, -6.0, -6.0, -6.0, -6.0, 
			-7.1, -7.1, -7.1, -7.1, -4.2, -4.2, -4.2, -4.2, -6.0, -6.0, -6.0, -6.0, -1.8, -1.8, -1.8, -1.8, 
		],
		# GG
		[
			-10.8, -10.8, -10.8, -10.8, -10.4, -10.4, -10.4, -10.4, -10.9, -10.9, -10.9, -10.9, -11.2, -11.2, -11.2, -11.2, 
			-7.9, -7.9, -7.9, -7.9, -7.5, -7.5, -7.5, -7.5, -8.0, -8.0, -8.0, -8.0, -8.3, -8.3, -8.3, -8.3, 
			-9.7, -9.7, -9.7, -9.7, -9.3, -9.3, -9.3, -9.3, -9.8, -9.8, -9.8, -9.8, -10.1, -10.1, -10.1, -10.1, 
			-5.5, -5.5, -5.5, -5.5, -5.1, -5.1, -5.1, -5.1, -5.6, -5.6, -5.6, -5.6, -5.9, -5.9, -5.9, -5.9, 
			-10.8, -10.8, -10.8, -10.8, -10.4, -10.4, -10.4, -10.4, -10.9, -10.9, -10.9, -10.9, -11.2, -11.2, -11.2, -11.2, 
			-7.9, -7.9, -7.9, -7.9, -7.5, -7.5, -7.5, -7.5, -8.0, -8.0, -8.0, -8.0, -8.3, -8.3, -8.3, -8.3, 
			-9.7, -9.7, -9.7, -9.7, -9.3, -9.3, -9.3, -9.3, -9.8, -9.8, -9.8, -9.8, -10.1, -10.1, -10.1, -10.1, 
			-5.5, -5.5, -5.5, -5.5, -5.1, -5.1, -5.1, -5.1, -5.6, -5.6, -5.6, -5.6, -5.9, -5.9, -5.9, -5.9, 
			-10.8, -10.8, -10.8, -10.8, -10.4, -10.4, -10.4, -10.4, -10.9, -10.9, -10.9, -10.9, -11.2, -11.2, -11.2, -11.2, 
			-7.9, -7.9, -7.9, -7.9, -7.5, -7.5, -7.5, -7.5, -8.0, -8.0, -8.0, -8.0, -8.3, -8.3, -8.3, -8.3, 
			-9.7, -9.7, -9.7, -9.7, -9.3, -9.3, -9.3, -9.3, -9.8, -9.8, -9.8, -9.8, -10.1, -10.1, -10.1, -10.1, 
			-5.5, -5.5, -5.5, -5.5, -5.1, -5.1, -5.1, -5.1, -5.6, -5.6, -5.6, -5.6, -5.9, -5.9, -5.9, -5.9, 
			-10.8, -10.8, -10.8, -10.8, -10.4, -10.4, -10.4, -10.4, -10.9, -10.9, -10.9, -10.9, -11.2, -11.2, -11.2, -11.2, 
			-7.9, -7.9, -7.9, -7.9, -7.5, -7.5, -7.5, -7.5, -8.0, -8.0, -8.0, -8.0, -8.3, -8.3, -8.3, -8.3, 
			-9.7, -9.7, -9.7, -9.7, -9.3, -9.3, -9.3, -9.3, -9.8, -9.8, -9.8, -9.8, -10.1, -10.1, -10.1, -10.1, 
			-5.5, -5.5, -5.5, -5.5, -5.1, -5.1, -5.1, -5.1, -5.6, -5.6, -5.6, -5.6, -5.9, -5.9, -5.9, -5.9, 
		],
		# GT
		[
			-2.2, -2.2, -2.2, -2.2, -1.0, -1.0, -1.0, -1.0, -1.5, -1.5, -1.5, -1.5, -1.9, -1.9, -1.9, -1.9, 
			0.7, 0.7, 0.7, 0.7, 1.9, 1.9, 1.9, 1.9, 1.4, 1.4, 1.4, 1.4, 1.0, 1.0, 1.0, 1.0, 
			-1.1, -1.1, -1.1, -1.1, 0.1, 0.1, 0.1, 0.1, -0.4, -0.4, -0.4, -0.4, -0.8, -0.8, -0.8, -0.8, 
			3.1, 3.1, 3.1, 3.1, 4.3, 4.3, 4.3, 4.3, 3.8, 3.8, 3.8, 3.8, 3.4, 3.4, 3.4, 3.4, 
			-2.2, -2.2, -2.2, -2.2, -1.0, -1.0, -1.0, -1.0, -1.5, -1.5, -1.5, -1.5, -1.9, -1.9, -1.9, -1.9, 
			0.7, 0.7, 0.7, 0.7, 1.9, 1.9, 1.9, 1.9, 1.4, 1.4, 1.4, 1.4, 1.0, 1.0, 1.0, 1.0, 
			-1.1, -1.1, -1.1, -1.1, 0.1, 0.1, 0.1, 0.1, -0.4, -0.4, -0.4, -0.4, -0.8, -0.8, -0.8, -0.8, 
			3.1, 3.1, 3.1, 3.1, 4.3, 4.3, 4.3, 4.3, 3.8, 3.8, 3.8, 3.8, 3.4, 3.4, 3.4, 3.4, 
			-2.2, -2.2, -2.2, -2.2, -1.0, -1.0, -1.0, -1.0, -1.5, -1.5, -1.5, -1.5, -1.9, -1.9, -1.9, -1.9, 
			0.7, 0.7, 0.7, 0.7, 1.9, 1.9, 1.9, 1.9, 1.4, 1.4, 1.4, 1.4, 1.0, 1.0, 1.0, 1.0, 
			-1.1, -1.1, -1.1, -1.1, 0.1, 0.1, 0.1, 0.1, -0.4, -0.4, -0.4, -0.4, -0.8, -0.8, -0.8, -0.8, 
			3.1, 3.1, 3.1, 3.1, 4.3, 4.3, 4.3, 4.3, 3.8, 3.8, 3.8, 3.8, 3.4, 3.4, 3.4, 3.4, 
			-2.2, -2.2, -2.2, -2.2, -1.0, -1.0, -1.0, -1.0, -1.5, -1.5, -1.5, -1.5, -1.9, -1.9, -1.9, -1.9, 
			0.7, 0.7, 0.7, 0.7, 1.9, 1.9, 1.9, 1.9, 1.4, 1.4, 1.4, 1.4, 1.0, 1.0, 1.0, 1.0, 
			-1.1, -1.1, -1.1, -1.1, 0.1, 0.1, 0.1, 0.1, -0.4, -0.4, -0.4, -0.4, -0.8, -0.8, -0.8, -0.8, 
			3.1, 3.1, 3.1, 3.1, 4.3, 4.3, 4.3, 4.3, 3.8, 3.8, 3.8, 3.8, 3.4, 3.4, 3.4, 3.4, 
		],
		# GN
		[
			-7.3, -7.3, -7.3, -7.3, -6.1, -6.1, -6.1, -6.1, -7.3, -7.3, -7.3, -7.3, -8.0, -8.0, -8.0, -8.0, 
			-4.4, -4.4, -4.4, -4.4, -3.2, -3.2, -3.2, -3.2, -4.4, -4.4, -4.4, -4.4, -5.2, -5.2, -5.2, -5.2, 
			-6.2, -6.2, -6.2, -6.2, -5.0, -5.0, -5.0, -5.0, -6.2, -6.2, -6.2, -6.2, -7.0, -7.0, -7.0, -7.0, 
			-2.0, -2.0, -2.0, -2.0, -0.8, -0.8, -0.8, -0.8, -2.0, -2.0, -2.0, -2.0, -2.8, -2.8, -2.8, -2.8, 
			-7.3, -7.3, -7.3, -7.3, -6.1, -6.1, -6.1, -6.1, -7.3, -7.3, -7.3, -7.3, -8.0, -8.0, -8.0, -8.0, 
			-4.4, -4.4, -4.4, -4.4, -3.2, -3.2, -3.2, -3.2, -4.4, -4.4, -4.4, -4.4, -5.2, -5.2, -5.2, -5.2, 
			-6.2, -6.2, -6.2, -6.2, -5.0, -5.0, -5.0, -5.0, -6.2, -6.2, -6.2, -6.2, -7.0, -7.0, -7.0, -7.0, 
			-2.0, -2.0, -2.0, -2.0, -0.8, -0.8, -0.8, -0.8, -2.0, -2.0, -2.0, -2.0, -2.8, -2.8, -2.8, -2.8, 
			-7.3, -7.3, -7.3, -7.3, -6.1, -6.1, -6.1, -6.1, -7.3, -7.3, -7.3, -7.3, -8.0, -8.0, -8.0, -8.0, 
			-4.4, -4.4, -4.4, -4.4, -3.2, -3.2, -3.2, -3.2, -4.4, -4.4, -4.4, -4.4, -5.2, -5.2, -5.2, -5.2, 
			-6.2, -6.2, -6.2, -6.2, -5.0, -5.0, -5.0, -5.0, -6.2, -6.2, -6.2, -6.2, -7.0, -7.0, -7.0, -7.0, 
			-2.0, -2.0, -2.0, -2.0, -0.8, -0.8, -0.8, -0.8, -2.0, -2.0, -2.0, -2.0, -2.8, -2.8, -2.8, -2.8, 
			-7.3, -7.3, -7.3, -7.3, -6.1, -6.1, -6.1, -6.1, -7.3, -7.3, -7.3, -7.3, -8.0, -8.0, -8.0, -8.0, 
			-4.4, -4.4, -4.4, -4.4, -3.2, -3.2, -3.2, -3.2, -4.4, -4.4, -4.4, -4.4, -5.2, -5.2, -5.2, -5.2, 
			-6.2, -6.2, -6.2, -6.2, -5.0, -5.0, -5.0, -5.0, -6.2, -6.2, -6.2, -6.2, -7.0, -7.0, -7.0, -7.0, 
			-2.0, -2.0, -2.0, -2.0, -0.8, -0.8, -0.8, -0.8, -2.0, -2.0, -2.0, -2.0, -2.8, -2.8, -2.8, -2.8, 
		],
		# TA
		[
			4.6, 4.6, 4.6, 4.6, 4.9, 4.9, 4.9, 4.9, 3.0, 3.0, 3.0, 3.0, -3.5, -3.5, -3.5, -3.5, 
			4.9, 4.9, 4.9, 4.9, 5.2, 5.2, 5.2, 5.2, 3.3, 3.3, 3.3, 3.3, -3.2, -3.2, -3.2, -3.2, 
			3.0, 3.0, 3.0, 3.0, 3.3, 3.3, 3.3, 3.3, 1.4, 1.4, 1.4, 1.4, -5.1, -5.1, -5.1, -5.1, 
			-3.5, -3.5, -3.5, -3.5, -3.2, -3.2, -3.2, -3.2, -5.1, -5.1, -5.1, -5.1, -11.6, -11.6, -11.6, -11.6, 
			4.6, 4.6, 4.6, 4.6, 4.9, 4.9, 4.9, 4.9, 3.0, 3.0, 3.0, 3.0, -3.5, -3.5, -3.5, -3.5, 
			4.9, 4.9, 4.9, 4.9, 5.2, 5.2, 5.2, 5.2, 3.3, 3.3, 3.3, 3.3, -3.2, -3.2, -3.2, -3.2, 
			3.0, 3.0, 3.0, 3.0, 3.3, 3.3, 3.3, 3.3, 1.4, 1.4, 1.4, 1.4, -5.1, -5.1, -5.1, -5.1, 
			-3.5, -3.5, -3.5, -3.5, -3.2, -3.2, -3.2, -3.2, -5.1, -5.1, -5.1, -5.1, -11.6, -11.6, -11.6, -11.6, 
			4.6, 4.6, 4.6, 4.6, 4.9, 4.9, 4.9, 4.9, 3.0, 3.0, 3.0, 3.0, -3.5, -3.5, -3.5, -3.5, 
			4.9, 4.9, 4.9, 4.9, 5.2, 5.2, 5.2, 5.2, 3.3, 3.3, 3.3, 3.3, -3.2, -3.2, -3.2, -3.2, 
			3.0, 3.0, 3.0, 3.0, 3.3, 3.3, 3.3, 3.3, 1.4, 1.4, 1.4, 1.4, -5.1, -5.1, -5.1, -5.1, 
			-3.5, -3.5, -3.5, -3.5, -3.2, -3.2, -3.2, -3.2, -5.1, -5.1, -5.1, -5.1, -11.6, -11.6, -11.6, -11.6, 
			4.6, 4.6, 4.6, 4.6, 4.9, 4.9, 4.9, 4.9, 3.0, 3.0, 3.0, 3.0, -3.5, -3.5, -3.5, -3.5, 
			4.9, 4.9, 4.9, 4.9, 5.2, 5.2, 5.2, 5.2, 3.3, 3.3, 3.3, 3.3, -3.2, -3.2, -3.2, -3.2, 
			3.0, 3.0, 3.0, 3.0, 3.3, 3.3, 3.3, 3.3, 1.4, 1.4, 1.4, 1.4, -5.1, -5.1, -5.1, -5.1, 
			-3.5, -3.5, -3.5, -3.5, -3.2, -3.2, -3.2, -3.2, -5.1, -5.1, -5.1, -5.1, -11.6, -11.6, -11.6, -11.6, 
		],
		# TC
		[
			-3.9, -3.9, -3.9, -3.9, -1.0, -1.0, -1.0, -1.0, -2.8, -2.8, -2.8, -2.8, 1.4, 1.4, 1.4, 1.4, 
			-3.6, -3.6, -3.6, -3.6, -0.7, -0.7, -0.7, -0.7, -2.5, -2.5, -2.5, -2.5, 1.7, 1.7, 1.7, 1.7, 
			-5.5, -5.5, -5.5, -5.5, -2.6, -2.6, -2.6, -2.6, -4.4, -4.4, -4.4, -4.4, -0.2, -0.2, -0.2, -0.2, 
			-12.0, -12.0, -12.0, -12.0, -9.1, -9.1, -9.1, -9.1, -10.9, -10.9, -10.9, -10.9, -6.7, -6.7, -6.7, -6.7, 
			-3.9, -3.9, -3.9, -3.9, -1.0, -1.0, -1.0, -1.0, -2.8, -2.8, -2.8, -2.8, 1.4, 1.4, 1.4, 1.4, 
			-3.6, -3.6, -3.6, -3.6, -0.7, -0.7, -0.7, -0.7, -2.5, -2.5, -2.5, -2.5, 1.7, 1.7, 1.7, 1.7, 
			-5.5, -5.5, -5.5, -5.5, -2.6, -2.6, -2.6, -2.6, -4.4, -4.4, -4.4, -4.4, -0.2, -0.2, -0.2, -0.2, 
			-12.0, -12.0, -12.0, -12.0, -9.1, -9.1, -9.1, -9.1, -10.9, -10.9, -10.9, -10.9, -6.7, -6.7, -6.7, -6.7, 
			-3.9, -3.9, -3.9, -3.9, -1.0, -1.0, -1.0, -1.0, -2.8, -2.8, -2.8, -2.8, 1.4, 1.4, 1.4, 1.4, 
			-3.6, -3.6, -3.6, -3.6, -0.7, -0.7, -0.7, -0.7, -2.5, -2.5, -2.5, -2.5, 1.7, 1.7, 1.7, 1.7, 
			-5.5, -5.5, -5.5, -5.5, -2.6, -2.6, -2.6, -2.6, -4.4, -4.4, -4.4, -4.4, -0.2, -0.2, -0.2, -0.2, 
			-12.0, -12.0, -12.0, -12.0, -9.1, -9.1, -9.1, -9.1, -10.9, -10.9, -10.9, -10.9, -6.7, -6.7, -6.7, -6.7, 
			-3.9, -3.9, -3.9, -3.9, -1.0, -1.0, -1.0, -1.0, -2.8, -2.8, -2.8, -2.8, 1.4, 1.4, 1.4, 1.4, 
			-3.6, -3.6, -3.6, -3.6, -0.7, -0.7, -0.7, -0.7, -2.5, -2.5, -2.5, -2.5, 1.7, 1.7, 1.7, 1.7, 
			-5.5, -5.5, -5.5, -5.5, -2.6, -2.6, -2.6, -2.6, -4.4, -4.4, -4.4, -4.4, -0.2, -0.2, -0.2, -0.2, 
			-12.0, -12.0, -12.0, -12.0, -9.1, -9.1, -9.1, -9.1, -10.9, -10.9, -10.9, -10.9, -6.7, -6.7, -6.7, -6.7, 
		],
		# TG
		[
			-2.3, -2.3, -2.3, -2.3, -1.9, -1.9, -1.9, -1.9, -2.4, -2.4, -2.4, -2.4, -2.7, -2.7, -2.7, -2.7, 
			-2.0, -2.0, -2.0, -2.0, -1.6, -1.6, -1.6, -1.6, -2.1, -2.1, -2.1, -2.1, -2.4, -2.4, -2.4, -2.4, 
			-3.9, -3.9, -3.9, -3.9, -3.5, -3.5, -3.5, -3.5, -4.0, -4.0, -4.0, -4.0, -4.3, -4.3, -4.3, -4.3, 
			-10.4, -10.4, -10.4, -10.4, -10.0, -10.0, -10.0, -10.0, -10.5, -10.5, -10.5, -10.5, -10.8, -10.8, -10.8, -10.8, 
			-2.3, -2.3, -2.3, -2.3, -1.9, -1.9, -1.9, -1.9, -2.4, -2.4, -2.4, -2.4, -2.7, -2.7, -2.7, -2.7, 
			-2.0, -2.0, -2.0, -2.0, -1.6, -1.6, -1.6, -1.6, -2.1, -2.1, -2.1, -2.1, -2.4, -2.4, -2.4, -2.4, 
			-3.9, -3.9, -3.9, -3.9, -3.5, -3.5, -3.5, -3.5, -4.0, -4.0, -4.0, -4.0, -4.3, -4.3, -4.3, -4.3, 
			-10.4, -10.4, -10.4, -10.4, -10.0, -10.0, -10.0, -10.0, -10.5, -10.5, -10.5, -10.5, -10.8, -10.8, -10.8, -10.8, 
			-2.3, -2.3, -2.3, -2.3, -1.9, -1.9, -1.9, -1.9, -2.4, -2.4, -2.4, -2.4, -2.7, -2.7, -2.7, -2.7, 
			-2.0, -2.0, -2.0, -2.0, -1.6, -1.6, -1.6, -1.6, -2.1, -2.1, -2.1, -2.1, -2.4, -2.4, -2.4, -2.4, 
			-3.9, -3.9, -3.9, -3.9, -3.5, -3.5, -3.5, -3.5, -4.0, -4.0, -4.0, -4.0, -4.3, -4.3, -4.3, -4.3, 
			-10.4, -10.4, -10.4, -10.4, -10.0, -10.0, -10.0, -10.0, -10.5, -10.5, -10.5, -10.5, -10.8, -10.8, -10.8, -10.8, 
			-2.3, -2.3, -2.3, -2.3, -1.9, -1.9, -1.9, -1.9, -2.4, -2.4, -2.4, -2.4, -2.7, -2.7, -2.7, -2.7, 
			-2.0, -2.0, -2.0, -2.0, -1.6, -1.6, -1.6, -1.6, -2.1, -2.1, -2.1, -2.1, -2.4, -2.4, -2.4, -2.4, 
			-3.9, -3.9, -3.9, -3.9, -3.5, -3.5, -3.5, -3.5, -4.0, -4.0, -4.0, -4.0, -4.3, -4.3, -4.3, -4.3, 
			-10.4, -10.4, -10.4, -10.4, -10.0, -10.0, -10.0, -10.0, -10.5, -10.5, -10.5, -10.5, -10.8, -10.8, -10.8, -10.8, 
		],
		# TT
		[
			6.3, 6.3, 6.3, 6.3, 7.5, 7.5, 7.5, 7.5, 7.0, 7.0, 7.0, 7.0, 6.6, 6.6, 6.6, 6.6, 
			6.6, 6.6, 6.6, 6.6, 7.8, 7.8, 7.8, 7.8, 7.3, 7.3, 7.3, 7.3, 6.9, 6.9, 6.9, 6.9, 
			4.7, 4.7, 4.7, 4.7, 5.9, 5.9, 5.9, 5.9, 5.4, 5.4, 5.4, 5.4, 5.0, 5.0, 5.0, 5.0, 
			-1.8, -1.8, -1.8, -1.8, -0.6, -0.6, -0.6, -0.6, -1.1, -1.1, -1.1, -1.1, -1.5, -1.5, -1.5, -1.5, 
			6.3, 6.3, 6.3, 6.3, 7.5, 7.5, 7.5, 7.5, 7.0, 7.0, 7.0, 7.0, 6.6, 6.6, 6.6, 6.6, 
			6.6, 6.6, 6.6, 6.6, 7.8, 7.8, 7.8, 7.8, 7.3, 7.3, 7.3, 7.3, 6.9, 6.9, 6.9, 6.9, 
			4.7, 4.7, 4.7, 4.7, 5.9, 5.9, 5.9, 5.9, 5.4, 5.4, 5.4, 5.4, 5.0, 5.0, 5.0, 5.0, 
			-1.8, -1.8, -1.8, -1.8, -0.6, -0.6, -0.6, -0.6, -1.1, -1.1, -1.1, -1.1, -1.5, -1.5, -1.5, -1.5, 
			6.3, 6.3, 6.3, 6.3, 7.5, 7.5, 7.5, 7.5, 7.0, 7.0, 7.0, 7.0, 6.6, 6.6, 6.6, 6.6, 
			6.6, 6.6, 6.6, 6.6, 7.8, 7.8, 7.8, 7.8, 7.3, 7.3, 7.3, 7.3, 6.9, 6.9, 6.9, 6.9, 
			4.7, 4.7, 4.7, 4.7, 5.9, 5.9, 5.9, 5.9, 5.4, 5.4, 5.4, 5.4, 5.0, 5.0, 5.0, 5.0, 
			-1.8, -1.8, -1.8, -1.8, -0.6, -0.6, -0.6, -0.6, -1.1, -1.1, -1.1, -1.1, -1.5, -1.5, -1.5, -1.5, 
			6.3, 6.3, 6.3, 6.3, 7.5, 7.5, 7.5, 7.5, 7.0, 7.0, 7.0, 7.0, 6.6, 6.6, 6.6, 6.6, 
			6.6, 6.6, 6.6, 6.6, 7.8, 7.8, 7.8, 7.8, 7.3, 7.3, 7.3, 7.3, 6.9, 6.9, 6.9, 6.9, 
			4.7, 4.7, 4.7, 4.7, 5.9, 5.9, 5.9, 5.9, 5.4, 5.4, 5.4, 5.4, 5.0, 5.0, 5.0, 5.0, 
			-1.8, -1.8, -1.8, -1.8, -0.6, -0.6, -0.6, -0.6, -1.1, -1.1, -1.1, -1.1, -1.5, -1.5, -1.5, -1.5, 
		],
		# TN
		[
			1.2, 1.2, 1.2, 1.2, 2.4, 2.4, 2.4, 2.4, 1.2, 1.2, 1.2, 1.2, 0.4, 0.4, 0.4, 0.4, 
			1.5, 1.5, 1.5, 1.5, 2.7, 2.7, 2.7, 2.7, 1.5, 1.5, 1.5, 1.5, 0.8, 0.8, 0.8, 0.8, 
			-0.4, -0.4, -0.4, -0.4, 0.8, 0.8, 0.8, 0.8, -0.4, -0.4, -0.4, -0.4, -1.1, -1.1, -1.1, -1.1, 
			-6.9, -6.9, -6.9, -6.9, -5.7, -5.7, -5.7, -5.7, -6.9, -6.9, -6.9, -6.9, -7.7, -7.7, -7.7, -7.7, 
			1.2, 1.2, 1.2, 1.2, 2.4, 2.4, 2.4, 2.4, 1.2, 1.2, 1.2, 1.2, 0.4, 0.4, 0.4, 0.4, 
			1.5, 1.5, 1.5, 1.5, 2.7, 2.7, 2.7, 2.7, 1.5, 1.5, 1.5, 1.5, 0.8, 0.8, 0.8, 0.8, 
			-0.4, -0.4, -0.4, -0.4, 0.8, 0.8, 0.8, 0.8, -0.4, -0.4, -0.4, -0.4, -1.1, -1.1, -1.1, -1.1, 
			-6.9, -6.9, -6.9, -6.9, -5.7, -5.7, -5.7, -5.7, -6.9, -6.9, -6.9, -6.9, -7.7, -7.7, -7.7, -7.7, 
			1.2, 1.2, 1.2, 1.2, 2.4, 2.4, 2.4, 2.4, 1.2, 1.2, 1.2, 1.2, 0.4, 0.4, 0.4, 0.4, 
			1.5, 1.5, 1.5, 1.5, 2.7, 2.7, 2.7, 2.7, 1.5, 1.5, 1.5, 1.5, 0.8, 0.8, 0.8, 0.8, 
			-0.4, -0.4, -0.4, -0.4, 0.8, 0.8, 0.8, 0.8, -0.4, -0.4, -0.4, -0.4, -1.1, -1.1, -1.1, -1.1, 
			-6.9, -6.9, -6.9, -6.9, -5.7, -5.7, -5.7, -5.7, -6.9, -6.9, -6.9, -6.9, -7.7, -7.7, -7.7, -7.7, 
			1.2, 1.2, 1.2, 1.2, 2.4, 2.4, 2.4, 2.4, 1.2, 1.2, 1.2, 1.2, 0.4, 0.4, 0.4, 0.4, 
			1.5, 1.5, 1.5, 1.5, 2.7, 2.7, 2.7, 2.7, 1.5, 1.5, 1.5, 1.5, 0.8, 0.8, 0.8, 0.8, 
			-0.4, -0.4, -0.4, -0.4, 0.8, 0.8, 0.8, 0.8, -0.4, -0.4, -0.4, -0.4, -1.1, -1.1, -1.1, -1.1, 
			-6.9, -6.9, -6.9, -6.9, -5.7, -5.7, -5.7, -5.7, -6.9, -6.9, -6.9, -6.9, -7.7, -7.7, -7.7, -7.7, 
		],
		# NA
		[
			1.2, 1.2, 1.2, 1.2, 1.5, 1.5, 1.5, 1.5, -0.4, -0.4, -0.4, -0.4, -6.9, -6.9, -6.9, -6.9, 
			2.4, 2.4, 2.4, 2.4, 2.7, 2.7, 2.7, 2.7, 0.8, 0.8, 0.8, 0.8, -5.7, -5.7, -5.7, -5.7, 
			1.2, 1.2, 1.2, 1.2, 1.5, 1.5, 1.5, 1.5, -0.4, -0.4, -0.4, -0.4, -6.9, -6.9, -6.9, -6.9, 
			0.4, 0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, -1.1, -1.1, -1.1, -1.1, -7.7, -7.7, -7.7, -7.7, 
			1.2, 1.2, 1.2, 1.2, 1.5, 1.5, 1.5, 1.5, -0.4, -0.4, -0.4, -0.4, -6.9, -6.9, -6.9, -6.9, 
			2.4, 2.4, 2.4, 2.4, 2.7, 2.7, 2.7, 2.7, 0.8, 0.8, 0.8, 0.8, -5.7, -5.7, -5.7, -5.7, 
			1.2, 1.2, 1.2, 1.2, 1.5, 1.5, 1.5, 1.5, -0.4, -0.4, -0.4, -0.4, -6.9, -6.9, -6.9, -6.9, 
			0.4, 0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, -1.1, -1.1, -1.1, -1.1, -7.7, -7.7, -7.7, -7.7, 
			1.2, 1.2, 1.2, 1.2, 1.5, 1.5, 1.5, 1.5, -0.4, -0.4, -0.4, -0.4, -6.9, -6.9, -6.9, -6.9, 
			2.4, 2.4, 2.4, 2.4, 2.7, 2.7, 2.7, 2.7, 0.8, 0.8, 0.8, 0.8, -5.7, -5.7, -5.7, -5.7, 
			1.2, 1.2, 1.2, 1.2, 1.5, 1.5, 1.5, 1.5, -0.4, -0.4, -0.4, -0.4, -6.9, -6.9, -6.9, -6.9, 
			0.4, 0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, -1.1, -1.1, -1.1, -1.1, -7.7, -7.7, -7.7, -7.7, 
			1.2, 1.2, 1.2, 1.2, 1.5, 1.5, 1.5, 1.5, -0.4, -0.4, -0.4, -0.4, -6.9, -6.9, -6.9, -6.9, 
			2.4, 2.4, 2.4, 2.4, 2.7, 2.7, 2.7, 2.7, 0.8, 0.8, 0.8, 0.8, -5.7, -5.7, -5.7, -5.7, 
			1.2, 1.2, 1.2, 1.2, 1.5, 1.5, 1.5, 1.5, -0.4, -0.4, -0.4, -0.4, -6.9, -6.9, -6.9, -6.9, 
			0.4, 0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, -1.1, -1.1, -1.1, -1.1, -7.7, -7.7, -7.7, -7.7, 
		],
		# NC
		[
			-7.3, -7.3, -7.3, -7.3, -4.4, -4.4, -4.4, -4.4, -6.2, -6.2, -6.2, -6.2, -2.0, -2.0, -2.0, -2.0, 
			-6.1, -6.1, -6.1, -6.1, -3.2, -3.2, -3.2, -3.2, -5.0, -5.0, -5.0, -5.0, -0.8, -0.8, -0.8, -0.8, 
			-7.3, -7.3, -7.3, -7.3, -4.4, -4.4, -4.4, -4.4, -6.2, -6.2, -6.2, -6.2, -2.0, -2.0, -2.0, -2.0, 
			-8.0, -8.0, -8.0, -8.0, -5.2, -5.2, -5.2, -5.2, -7.0, -7.0, -7.0, -7.0, -2.8, -2.8, -2.8, -2.8, 
			-7.3, -7.3, -7.3, -7.3, -4.4, -4.4, -4.4, -4.4, -6.2, -6.2, -6.2, -6.2, -2.0, -2.0, -2.0, -2.0, 
			-6.1, -6.1, -6.1, -6.1, -3.2, -3.2, -3.2, -3.2, -5.0, -5.0, -5.0, -5.0, -0.8, -0.8, -0.8, -0.8, 
			-7.3, -7.3, -7.3, -7.3, -4.4, -4.4, -4.4, -4.4, -6.2, -6.2, -6.2, -6.2, -2.0, -2.0, -2.0, -2.0, 
			-8.0, -8.0, -8.0, -8.0, -5.2, -5.2, -5.2, -5.2, -7.0, -7.0, -7.0, -7.0, -2.8, -2.8, -2.8, -2.8, 
			-7.3, -7.3, -7.3, -7.3, -4.4, -4.4, -4.4, -4.4, -6.2, -6.2, -6.2, -6.2, -2.0, -2.0, -2.0, -2.0, 
			-6.1, -6.1, -6.1, -6.1, -3.2, -3.2, -3.2, -3.2, -5.0, -5.0, -5.0, -5.0, -0.8, -0.8, -0.8, -0.8, 
			-7.3, -7.3, -7.3, -7.3, -4.4, -4.4, -4.4, -4.4, -6.2, -6.2, -6.2, -6.2, -2.0, -2.0, -2.0, -2.0, 
			-8.0, -8.0, -8.0, -8.0, -5.2, -5.2, -5.2, -5.2, -7.0, -7.0, -7.0, -7.0, -2.8, -2.8, -2.8, -2.8, 
			-7.3, -7.3, -7.3, -7.3, -4.4, -4.4, -4.4, -4.4, -6.2, -6.2, -6.2, -6.2, -2.0, -2.0, -2.0, -2.0, 
			-6.1, -6.1, -6.1, -6.1, -3.2, -3.2, -3.2, -3.2, -5.0, -5.0, -5.0, -5.0, -0.8, -0.8, -0.8, -0.8, 
			-7.3, -7.3, -7.3, -7.3, -4.4, -4.4, -4.4, -4.4, -6.2, -6.2, -6.2, -6.2, -2.0, -2.0, -2.0, -2.0, 
			-8.0, -8.0, -8.0, -8.0, -5.2, -5.2, -5.2, -5.2, -7.0, -7.0, -7.0, -7.0, -2.8, -2.8, -2.8, -2.8, 
		],
		# NG
		[
			-5.7, -5.7, -5.7, -5.7, -5.3, -5.3, -5.3, -5.3, -5.8, -5.8, -5.8, -5.8, -6.1, -6.1, -6.1, -6.1, 
			-4.5, -4.5, -4.5, -4.5, -4.1, -4.1, -4.1, -4.1, -4.6, -4.6, -4.6, -4.6, -4.9, -4.9, -4.9, -4.9, 
			-5.7, -5.7, -5.7, -5.7, -5.3, -5.3, -5.3, -5.3, -5.8, -5.8, -5.8, -5.8, -6.1, -6.1, -6.1, -6.1, 
			-6.5, -6.5, -6.5, -6.5, -6.0, -6.0, -6.0, -6.0, -6.5, -6.5, -6.5, -6.5, -6.9, -6.9, -6.9, -6.9, 
			-5.7, -5.7, -5.7, -5.7, -5.3, -5.3, -5.3, -5.3, -5.8, -5.8, -5.8, -5.8, -6.1, -6.1, -6.1, -6.1, 
			-4.5, -4.5, -4.5, -4.5, -4.1, -4.1, -4.1, -4.1, -4.6, -4.6, -4.6, -4.6, -4.9, -4.9, -4.9, -4.9, 
			-5.7, -5.7, -5.7, -5.7, -5.3, -5.3, -5.3, -5.3, -5.8, -5.8, -5.8, -5.8, -6.1, -6.1, -6.1, -6.1, 
			-6.5, -6.5, -6.5, -6.5, -6.0, -6.0, -6.0, -6.0, -6.5, -6.5, -6.5, -6.5, -6.9, -6.9, -6.9, -6.9, 
			-5.7, -5.7, -5.7, -5.7, -5.3, -5.3, -5.3, -5.3, -5.8, -5.8, -5.8, -5.8, -6.1, -6.1, -6.1, -6.1, 
			-4.5, -4.5, -4.5, -4.5, -4.1, -4.1, -4.1, -4.1, -4.6, -4.6, -4.6, -4.6, -4.9, -4.9, -4.9, -4.9, 
			-5.7, -5.7, -5.7, -5.7, -5.3, -5.3, -5.3, -5.3, -5.8, -5.8, -5.8, -5.8, -6.1, -6.1, -6.1, -6.1, 
			-6.5, -6.5, -6.5, -6.5, -6.0, -6.0, -6.0, -6.0, -6.5, -6.5, -6.5, -6.5, -6.9, -6.9, -6.9, -6.9, 
			-5.7, -5.7, -5.7, -5.7, -5.3, -5.3, -5.3, -5.3, -5.8, -5.8, -5.8, -5.8, -6.1, -6.1, -6.1, -6.1, 
			-4.5, -4.5, -4.5, -4.5, -4.1, -4.1, -4.1, -4.1, -4.6, -4.6, -4.6, -4.6, -4.9, -4.9, -4.9, -4.9, 
			-5.7, -5.7, -5.7, -5.7, -5.3, -5.3, -5.3, -5.3, -5.8, -5.8, -5.8, -5.8, -6.1, -6.1, -6.1, -6.1, 
			-6.5, -6.5, -6.5, -6.5, -6.0, -6.0, -6.0, -6.0, -6.5, -6.5, -6.5, -6.5, -6.9, -6.9, -6.9, -6.9, 
		],
		# NT
		[
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 3.6, 3.6, 3.6, 3.6, 3.2, 3.2, 3.2, 3.2, 
			4.1, 4.1, 4.1, 4.1, 5.3, 5.3, 5.3, 5.3, 4.8, 4.8, 4.8, 4.8, 4.4, 4.4, 4.4, 4.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 3.6, 3.6, 3.6, 3.6, 3.2, 3.2, 3.2, 3.2, 
			2.2, 2.2, 2.2, 2.2, 3.4, 3.4, 3.4, 3.4, 2.9, 2.9, 2.9, 2.9, 2.4, 2.4, 2.4, 2.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 3.6, 3.6, 3.6, 3.6, 3.2, 3.2, 3.2, 3.2, 
			4.1, 4.1, 4.1, 4.1, 5.3, 5.3, 5.3, 5.3, 4.8, 4.8, 4.8, 4.8, 4.4, 4.4, 4.4, 4.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 3.6, 3.6, 3.6, 3.6, 3.2, 3.2, 3.2, 3.2, 
			2.2, 2.2, 2.2, 2.2, 3.4, 3.4, 3.4, 3.4, 2.9, 2.9, 2.9, 2.9, 2.4, 2.4, 2.4, 2.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 3.6, 3.6, 3.6, 3.6, 3.2, 3.2, 3.2, 3.2, 
			4.1, 4.1, 4.1, 4.1, 5.3, 5.3, 5.3, 5.3, 4.8, 4.8, 4.8, 4.8, 4.4, 4.4, 4.4, 4.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 3.6, 3.6, 3.6, 3.6, 3.2, 3.2, 3.2, 3.2, 
			2.2, 2.2, 2.2, 2.2, 3.4, 3.4, 3.4, 3.4, 2.9, 2.9, 2.9, 2.9, 2.4, 2.4, 2.4, 2.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 3.6, 3.6, 3.6, 3.6, 3.2, 3.2, 3.2, 3.2, 
			4.1, 4.1, 4.1, 4.1, 5.3, 5.3, 5.3, 5.3, 4.8, 4.8, 4.8, 4.8, 4.4, 4.4, 4.4, 4.4, 
			2.9, 2.9, 2.9, 2.9, 4.1, 4.1, 4.1, 4.1, 3.6, 3.6, 3.6, 3.6, 3.2, 3.2, 3.2, 3.2, 
			2.2, 2.2, 2.2, 2.2, 3.4, 3.4, 3.4, 3.4, 2.9, 2.9, 2.9, 2.9, 2.4, 2.4, 2.4, 2.4, 
		],
		# NN
		[
			-2.2, -2.2, -2.2, -2.2, -1.1, -1.1, -1.1, -1.1, -2.2, -2.2, -2.2, -2.2, -3.0, -3.0, -3.0, -3.0, 
			-1.1, -1.1, -1.1, -1.1, 0.1, 0.1, 0.1, 0.1, -1.0, -1.0, -1.0, -1.0, -1.8, -1.8, -1.8, -1.8, 
			-2.2, -2.2, -2.2, -2.2, -1.0, -1.0, -1.0, -1.0, -2.2, -2.2, -2.2, -2.2, -2.9, -2.9, -2.9, -2.9, 
			-3.0, -3.0, -3.0, -3.0, -1.8, -1.8, -1.8, -1.8, -2.9, -2.9, -2.9, -2.9, -3.7, -3.7, -3.7, -3.7, 
			-2.2, -2.2, -2.2, -2.2, -1.1, -1.1, -1.1, -1.1, -2.2, -2.2, -2.2, -2.2, -3.0, -3.0, -3.0, -3.0, 
			-1.1, -1.1, -1.1, -1.1, 0.1, 0.1, 0.1, 0.1, -1.0, -1.0, -1.0, -1.0, -1.8, -1.8, -1.8, -1.8, 
			-2.2, -2.2, -2.2, -2.2, -1.0, -1.0, -1.0, -1.0, -2.2, -2.2, -2.2, -2.2, -2.9, -2.9, -2.9, -2.9, 
			-3.0, -3.0, -3.0, -3.0, -1.8, -1.8, -1.8, -1.8, -2.9, -2.9, -2.9, -2.9, -3.7, -3.7, -3.7, -3.7, 
			-2.2, -2.2, -2.2, -2.2, -1.1, -1.1, -1.1, -1.1, -2.2, -2.2, -2.2, -2.2, -3.0, -3.0, -3.0, -3.0, 
			-1.1, -1.1, -1.1, -1.1, 0.1, 0.1, 0.1, 0.1, -1.0, -1.0, -1.0, -1.0, -1.8, -1.8, -1.8, -1.8, 
			-2.2, -2.2, -2.2, -2.2, -1.0, -1.0, -1.0, -1.0, -2.2, -2.2, -2.2, -2.2, -2.9, -2.9, -2.9, -2.9, 
			-3.0, -3.0, -3.0, -3.0, -1.8, -1.8, -1.8, -1.8, -2.9, -2.9, -2.9, -2.9, -3.7, -3.7, -3.7, -3.7, 
			-2.2, -2.2, -2.2, -2.2, -1.1, -1.1, -1.1, -1.1, -2.2, -2.2, -2.2, -2.2, -3.0, -3.0, -3.0, -3.0, 
			-1.1, -1.1, -1.1, -1.1, 0.1, 0.1, 0.1, 0.1, -1.0, -1.0, -1.0, -1.0, -1.8, -1.8, -1.8, -1.8, 
			-2.2, -2.2, -2.2, -2.2, -1.0, -1.0, -1.0, -1.0, -2.2, -2.2, -2.2, -2.2, -2.9, -2.9, -2.9, -2.9, 
			-3.0, -3.0, -3.0, -3.0, -1.8, -1.8, -1.8, -1.8, -2.9, -2.9, -2.9, -2.9, -3.7, -3.7, -3.7, -3.7, 
		],   
    
])

# stack energy matrix
stack_dh_table = [-7.9, -8.4, -7.8, -7.2, -7.8, -8.5, -8.0, -10.6, -7.8, -8.7, -8.2, -9.8, -8.0, -8.4, -8.6, -7.2, -8.2, -8.5, -7.9, -8.0, -8.0, -8.6, -8.7, -7.8, -8.3]
stack_ds_table = [-22.2, -22.4, -21.0, -20.4, -21.5, -22.7, -19.9, -27.2, -21.0, -22.7, -22.2, -24.4, -19.9, -22.4, -22.2, -21.3, -22.2, -22.7, -22.2, -22.1, -22.1, -22.2, -22.7, -21.5, -22.1]


# mm energy matrix
mm_dg = deque([
        # A X
        # T Y
        [
            -0.7,-0.3,-0.5,-0.0,0,
            -0.6,-0.2,0.0, -0.3,0,
            -0.6,0.0,-0.4, -0.5,0,
            0.0,-0.3,-0.5, -0.4,0,
            0,0,0,0,0
        ],
        # C X
        # G Y
        [
            -1.0,-0.8,-0.9,0.0,0,
            -0.8,-0.5,0.0,-0.7,0,
            -1.0,0.0,-0.9,-1.0,0,
            0.0,-0.6,-0.9,-0.9,0,
            0,0,0,0,0
        ],
        # G X
        # C Y
        [
            -1.0,-0.7,-0.8,0.0,0,
            -1.0,-0.6,0.0,-0.7,0,
            -1.0,0.0,-1.0,-0.8,0,
            0.0,-0.6,-0.9,-0.9,0,
            0,0,0,0,0
        ],
        # T X
        # A Y
        [
            -0.6,-0.4,-0.5,0.0,0,
            -0.5,-0.2,0.0,-0.5,0,
            -0.6,-0.0,-0.4,-0.5,0,
            0.0,-0.3,-0.6,-0.3,0,
            0,0,0,0,0
        ],
        # N X
        # N Y
        [
            -0.8, -0.6, -0.7, 0.0,0,
            -0.7, -0.4, 0.0, -0.6,0,
            -0.8, 0.0, -0.7, -0.7,0,
            0.0, -0.5, -0.7, -0.6,0,
            0,0,0,0,0
        ]
])
mm_dh = deque([
        # A X
        # T Y
        [
            4.0,5.2,4.7,4.3,0,
            4.0,5.2,4.7,4.3,0,
            4.0,5.2,4.7,4.3,0,
            4.0,5.2,4.7,4.3,0,
            0,0,0,0,0
        ],
        # C X
        # G Y
        [
            -4.6,-4.2,-4.7,-5.0,
            -4.6,-4.2,-4.7,-5.0,
            -4.6,-4.2,-4.7,-5.0,
            -4.6,-4.2,-4.7,-5.0,
            0,0,0,0,0
        ],
        # G X
        # C Y
        [
            -6.2,-3.3,-5.1,-0.9,0,
            -6.2,-3.3,-5.1,-0.9,0,
            -6.2,-3.3,-5.1,-0.9,0,
            -6.2,-3.3,-5.1,-0.9,0,
            0,0,0,0,0
        ],
        # T X
        # A Y
        [
            2.3,1.7,0.7,-5.8,0,
            2.3,1.7,0.7,-5.8,0,
            2.3,1.7,0.7,-5.8,0,
            2.3,1.7,0.7,-5.8,0,
            0,0,0,0,0
        ],
        # N X
        # N Y
        [
            -1.1, -0.1, -1.1, -1.9,0,
            -1.1, -0.1, -1.1, -1.9,0,
            -1.1, -0.1, -1.1, -1.9,0,
            -1.1, -0.1, -1.1, -1.9,0,
            0,0,0,0,0
        ]
])


############# degenerate dict start ###########
###############################################
base_li = ["A", "T", "C", "G"]
basen_li = ["A", "T", "C", "G", "N"]
degenerate_bases_li = ["N", "Y", "R", "K", "M", "S", "W", "B", "V", "D", "H", "Z"]
n_trantab = str.maketrans("ACGT", "CATG")


degenerate_base_dict = defaultdict(deque)
def fill_dict(i: str) -> None:
    degenerate_base_dict[i] = deque([i])
[fill_dict(i) for i in base_li]

degenerate_base_dict['R'] = deque(["A", "G"])
degenerate_base_dict['Y'] = deque(["C", "T"])
degenerate_base_dict['M'] = deque(["C", "A"])
degenerate_base_dict['K'] = deque(["T", "G"])
degenerate_base_dict['S'] = deque(["C", "G"])
degenerate_base_dict['W'] = deque(["T", "A"])
    
degenerate_base_dict['B'] = deque(["G", "T", "C"])
degenerate_base_dict['V'] = deque(["G", "A", "C"])
degenerate_base_dict['D'] = deque(["G", "A", "T"])
degenerate_base_dict['H'] = deque(["C", "A", "T"])
    
degenerate_base_dict['N'] = deque(["C", "A", "T", "G"])
    
degenerate_base_dict['Z'] = deque([])



######## actual compute start ########
######################################
def complement_base(base: str) -> str:
    trantab = str.maketrans("ACGTNRYMKSWVBHDZ", "TGCANYRKMSWBVDHZ")
    return base.upper().translate(trantab)



def is_complement(base1: str, base2: str) -> bool:
    return complement_base(base1) == base2.upper()



# mismatch detective and replace bases
def modify_bases(duplex_str: str) -> str:
    seq1, seq2 = duplex_str.split("\n")
    modified_seq_li1 = []
    modified_seq_li2 = []
    for idx, (x, y) in enumerate(zip(seq1, seq2)):
        if y in base_li and x in base_li:
            modified_seq_li1.append(x)
            modified_seq_li2.append(y)
            continue
        if y == "-" or x == "-":
            modified_seq_li1.append(x)
            modified_seq_li2.append(y)
            continue
        # replace (degenerate bases and N) to mismatch base
        if x in degenerate_bases_li:
            # n -> 1
            if y in base_li:
                modified_seq_li1.append(y.translate(n_trantab))
                modified_seq_li2.append(y)
            # n -> m
            else:
                # complement degenerate base
                if is_complement(x, y):
                    modified_seq_li1.append("N")
                    modified_seq_li2.append("N")
                # not complement, record de positon
                else:
                    modified_seq_li1.append(x)
                    modified_seq_li2.append(y)
            continue
                
        if y in degenerate_bases_li:
            # n -> 1
            if x in base_li:
                modified_seq_li1.append(x)
                modified_seq_li2.append(x.translate(n_trantab))
            else:
                # complement degenerate base
                if is_complement(x, y):
                    modified_seq_li1.append("N")
                    modified_seq_li2.append("N")
                # not complement, record de positon
                else:
                    modified_seq_li1.append(x)
                    modified_seq_li2.append(y)
    modified_duplex_str = "".join(modified_seq_li1) + "\n" + "".join(modified_seq_li2)
    return modified_duplex_str


def loop_detective(duplex_str: str) -> defaultdict:
    seq1, seq2 = duplex_str.split("\n")
	# record mismatch and gaps,then recogonize bulge loop and internal loop
    loop_region_dict = defaultdict(
        deque
    )  # region_pos: start and end index, region_type: 0 for bulge,1 for int loop
    region_type_flag = 0  # 0 for bulge,1 for int loop
    flag = 0  # switch to record region start and end index
    for idx, (x, y) in enumerate(zip(seq1, seq2)):
        # mismatch or gap,record region start
        if not is_complement(x, y) and not flag:
            loop_region_dict["region_pos"].append(idx)
            flag = 1
        # mismatch found,record int loop
        if (x != "-" and y != "-") and not is_complement(x,y):
            region_type_flag = 1
        # record region end
        if is_complement(x, y) and flag:
            loop_region_dict["region_pos"].append(idx - 1)
            loop_region_dict["region_type"].append(region_type_flag)
            flag = 0
            region_type_flag = 0
    return loop_region_dict


def base2int(base: str) -> int:
    """将base(with N)转化为索引号"""
    trantab = str.maketrans("ACGTN", "01234")
    return int(base.upper().translate(trantab), base=5)

def base4int(base: str) -> int:
    """将base(without N)转化为索引号"""
    trantab = str.maketrans("ACGT", "0123")
    return int(base.upper().translate(trantab), base=4)



def index_intl11(upstream_base: str, downstream_base: str, x_base: str, y_base: str) -> list:
    """
            X
           A T
           T A
            Y
    """ 
    external_index = base2int(upstream_base + downstream_base)
    internal_index = base4int(x_base + y_base)
    return [external_index, internal_index]


def index_intl21(upstream_base: str, downstream_base: str, x_base: str, y_base: str, y_neibor_base: str) -> list:
    """            
            X
           A  A
           T  T
            YA
    """
    external_index = base2int(y_neibor_base + upstream_base + downstream_base)
    internal_index = base4int(x_base + y_base)
    return [external_index, internal_index]


def index_intl22(upstream_base: str, downstream_base: str, x_base1: str, y_base1: str, x_base2: str, y_base2: str) -> list:
    """
    	A X1 Y1 A
	    T X2 Y2 T
    """
    external_index = base2int(upstream_base + downstream_base)
    internal_index = base4int(x_base1 + x_base2 + y_base1 + y_base2)
    return [external_index, internal_index]


############## energy compute start ##############
##################################################

def stack_energy(segment: str) -> list:
    """近邻法计算stack的总能量值"""
    stack_dh = 0
    stack_ds = 0
    stack_dg = 0
    for i in range(len(segment) - 1):
        two_mer = segment[i] + segment[i + 1]
        d_index = base2int(two_mer)
        stack_dh += stack_dh_table[d_index]
        stack_ds += stack_ds_table[d_index]
    stack_dg = stack_dh - 310.15 * stack_ds / 1000
    return [stack_dh, stack_dg]


def intermolecular_initiation_energy() -> list:
    ii_dh = -7.2  # intermolecular initiation dh
    ii_dg = 1.0  # intermolecular initiation dg
    return [ii_dh, ii_dg]


def states_correction_dg(seq: str, bulge_pos: int) -> float:
    state_num = 1
    # get number of states
    bulge_base = seq[bulge_pos]
    forward_idx = bulge_pos
    afterward_idx = bulge_pos
    while forward_idx != 0 and afterward_idx != len(seq) - 1:
        if forward_idx != 0 and seq[forward_idx] == bulge_base:
            state_num += 1
            forward_idx += 1
        else:
            forward_idx = 0
        
        if afterward_idx != len(seq) - 1 and seq[afterward_idx] == bulge_base :
            state_num += 1
            afterward_idx += 1
        else:
            afterward_idx = len(seq) - 1  
    return -0.616 * log(state_num)



def bulge_energy(segment: str, bulge_length: int, seq: str, bulge_pos: int) -> list:
    """计算不同长度bulge的总能量值"""
    
    # bulge loop inition
    bulge_loop_dict = defaultdict(deque)
    bulge_loop_dict["dh"] = deque([18.9, -0.6, -2.3] + [-14.1] * 27)
    bulge_loop_dict["dg"] = deque(
        [
            2.9,
            2.3,
            2.5,
            2.7,
            3.0,
            3.2,
            3.4,
            3.5,
            3.6,
            3.7,
            3.9,
            3.9,
            4.0,
            4.1,
            4.2,
            4.3,
            4.3,
            4.4,
            4.4,
            4.5,
            4.5,
            4.6,
            4.6,
            4.7,
            4.7,
            4.7,
            4.8,
            4.9,
            4.9,
            4.9,
        ]
    )
    
    bulge_loop_dh = bulge_loop_dict["dh"][bulge_length - 1] if bulge_length <= 30 else bulge_loop_dict["dh"][-1]
    bulge_loop_dg = bulge_loop_dict["dg"][bulge_length - 1] if bulge_length <= 30 else bulge_loop_dict["dg"][-1]
    
    # bulge length == 1,extra stack energy(bulge in 2 or -2) and - RT ln(number of states) and no AT panalty
    if bulge_length == 1:
        # extra stack energy 
        ex_stack_dh, ex_stack_dg = stack_energy(segment[0] + segment[-1])
        # states correction
        states_dg = states_correction_dg(seq, bulge_pos)
        bulge_loop_dh += ex_stack_dh
        bulge_loop_dg += ex_stack_dg + states_dg
    else:
        # AT closure
        at_dh, at_dg = ATclosure_energy(segment)
        bulge_loop_dh += at_dh
        bulge_loop_dg += at_dg
        
        # n > 6,bulge_loop_dg += 1.75 RT ln(n/6)
        if bulge_length > 6:
            bulge_loop_dg += 1.75 * 0.616 * log(bulge_length / 6)
    
    return [bulge_loop_dh, bulge_loop_dg]

    
def symmetric_int_loop_energy(segment1: str, segment2: str, loop_sum: int) -> list:
    """对称的int loop结构直接读取矩阵数据累加"""
    symmetric_int_loop_dh = symmetric_int_loop_dg = 0
    # base init
    upstream_base = segment1[0] 
    downstream_base = segment1[-1]
    x_base = segment1[1]
    y_base = segment2[1]
    
    # 1 * 1
    if loop_sum == 2:
        # no degenerate base
        if y_base in basen_li:
            external_index, internal_index = index_intl11(upstream_base, downstream_base, x_base, y_base)
            symmetric_int_loop_dh += int_loop_energy_dict["11dh"][external_index][internal_index]
            symmetric_int_loop_dg += int_loop_energy_dict["11dg"][external_index][internal_index]
        # degenerate base
        else:
            for i in degenerate_base_dict[y_base]:
                external_index, internal_index = index_intl11(upstream_base, downstream_base, i.translate(n_trantab), i)
                symmetric_int_loop_dh += int_loop_energy_dict["11dh"][external_index][internal_index]
                symmetric_int_loop_dg += int_loop_energy_dict["11dg"][external_index][internal_index]
            symmetric_int_loop_dh /= len(degenerate_base_dict[y_base])
            symmetric_int_loop_dg /= len(degenerate_base_dict[y_base])
    # 1 * 2
    elif loop_sum == 3:
        y_neibor_base = segment2[2]
        # no de
        if y_base in basen_li and y_neibor_base in basen_li:  
            external_index, internal_index = index_intl21(upstream_base, downstream_base, x_base, y_base, y_neibor_base)
            symmetric_int_loop_dh += int_loop_energy_dict["21dh"][external_index][internal_index]
            symmetric_int_loop_dg += int_loop_energy_dict["21dg"][external_index][internal_index]
        else:
            # are neibor and y base de?
            if y_neibor_base in basen_li: # y base is de
                for i in degenerate_base_dict[y_base]:
                    external_index, internal_index = index_intl21(upstream_base, downstream_base, i.translate(n_trantab), i, y_neibor_base)
                    symmetric_int_loop_dh += int_loop_energy_dict["21dh"][external_index][internal_index]
                    symmetric_int_loop_dg += int_loop_energy_dict["21dg"][external_index][internal_index]
                symmetric_int_loop_dh /= len(degenerate_base_dict[y_base])
                symmetric_int_loop_dg /= len(degenerate_base_dict[y_base])
            elif y_base in basen_li: #  y_neibor_base is de
                for i in degenerate_base_dict[y_neibor_base]:
                    external_index, internal_index = index_intl21(upstream_base, downstream_base, x_base, y_base, i)
                    symmetric_int_loop_dh += int_loop_energy_dict["21dh"][external_index][internal_index]
                    symmetric_int_loop_dg += int_loop_energy_dict["21dg"][external_index][internal_index]
                symmetric_int_loop_dh /= len(degenerate_base_dict[y_neibor_base])
                symmetric_int_loop_dg /= len(degenerate_base_dict[y_neibor_base])
            else: # both de
                for i in degenerate_base_dict[y_base]:
                    for j in degenerate_base_dict[y_neibor_base]:
                        external_index, internal_index = index_intl21(upstream_base, downstream_base, i.translate(n_trantab), i, j)
                        symmetric_int_loop_dh += int_loop_energy_dict["21dh"][external_index][internal_index]
                        symmetric_int_loop_dg += int_loop_energy_dict["21dg"][external_index][internal_index]
                symmetric_int_loop_dh /= (len(degenerate_base_dict[y_base]) * len(degenerate_base_dict[y_neibor_base]))
                symmetric_int_loop_dg /= (len(degenerate_base_dict[y_base]) * len(degenerate_base_dict[y_neibor_base]))                                       
    # 2 * 2
    else:
        x_base1 = x_base
        x_base2 = y_base
        y_base1 = segment1[2]
        y_base2 = segment2[2]
        # no de
        if x_base2 in basen_li and y_base2 in basen_li:
            external_index, internal_index = index_intl22(upstream_base, downstream_base, x_base1, y_base1, x_base2, y_base2)
            symmetric_int_loop_dh += int_loop_energy_dict["22dh"][external_index][internal_index]
            symmetric_int_loop_dg += int_loop_energy_dict["22dg"][external_index][internal_index]
        else:
            if x_base2 in basen_li: # y_base2 is de
                for i in degenerate_base_dict[y_base2]:
                    external_index, internal_index = index_intl22(upstream_base, downstream_base, x_base1, i.translate(n_trantab), x_base2, i)
                    symmetric_int_loop_dh += int_loop_energy_dict["22dh"][external_index][internal_index]
                    symmetric_int_loop_dg += int_loop_energy_dict["22dg"][external_index][internal_index]
                symmetric_int_loop_dh /= len(degenerate_base_dict[y_base2])
                symmetric_int_loop_dg /= len(degenerate_base_dict[y_base2])
            elif y_base2 in basen_li: # x_base2 is de
                for i in degenerate_base_dict[x_base2]:
                    external_index, internal_index = index_intl22(upstream_base, downstream_base, i.translate(n_trantab), y_base1, i, y_base2)
                    symmetric_int_loop_dh += int_loop_energy_dict["22dh"][external_index][internal_index]
                    symmetric_int_loop_dg += int_loop_energy_dict["22dg"][external_index][internal_index]
                symmetric_int_loop_dh /= len(degenerate_base_dict[x_base2])
                symmetric_int_loop_dg /= len(degenerate_base_dict[x_base2])
            else: #both de
                for i in degenerate_base_dict[x_base2]:
                    for j in degenerate_base_dict[y_base2]:
                        external_index, internal_index = index_intl22(upstream_base, downstream_base, i.translate(n_trantab), j.translate(n_trantab), i, j)
                        symmetric_int_loop_dh += int_loop_energy_dict["22dh"][external_index][internal_index]
                        symmetric_int_loop_dg += int_loop_energy_dict["22dg"][external_index][internal_index]
                symmetric_int_loop_dh /= (len(degenerate_base_dict[x_base2]) * len(degenerate_base_dict[y_base2]))
                symmetric_int_loop_dg /= (len(degenerate_base_dict[x_base2]) * len(degenerate_base_dict[y_base2]))
                
    # print(f"symmetric_int_loop_dg is {symmetric_int_loop_dg}")
    
    return [symmetric_int_loop_dh, symmetric_int_loop_dg]


def asymmetry_correct_energy(loop_diff_abs: int) -> list:
    asymmetry_dg = 0.4
    asymmetry_dh = 0
    asymmetry_correct_dh = asymmetry_dh * loop_diff_abs
    asymmetry_correct_dg = asymmetry_dg * loop_diff_abs
    return [asymmetry_correct_dh, asymmetry_correct_dg]


def asymmetric_int_loop_initiation_energy(loop_sum: int) -> list:
    initiation_dg = [
        3.1,
        3.5,
        3.9,
        4.1,
        4.2,
        4.3,
        4.5,
        4.6,
        4.6,
        4.7,
        4.8,
        4.9,
        5.0,
        5.0,
        5.1,
        5.1,
        5.2,
        5.3,
        5.3,
        5.3,
        5.4,
        5.4,
        5.5,
        5.5,
        5.6,
        5.6,
        5.6,
    ]
    initiation_dh = [0.0] * 27

    return [initiation_dh[loop_sum - 4], initiation_dg[loop_sum - 4]]


def asymmetric_int_loop_mismatch_energy(
    segment1: str, segment2: str, int_loop_type: list
) -> list:
    """只有非对称且min loop > 1 才考虑mismatch"""
    mismatch_dh = mismatch_dg = 0
    mismatch1_dh = mismatch1_dg = 0
    mismatch2_dh = mismatch2_dg = 0
    # min loop length == 1,do NOT consider mismatch energy
    if int_loop_type[0] == 1:return [0.0, 0.0]
    # mean mismatch energy calc by segment
    if segment2[1] in basen_li:
        external_index = base2int(segment1[0])
        internal_index = base2int(segment1[1] + segment2[1])
        mismatch1_dh = mm_dh[external_index][internal_index]
        mismatch1_dg = mm_dg[external_index][internal_index]
    else:
        for i in degenerate_base_dict[segment2[1]]:
            external_index = base2int(segment1[0])
            internal_index = base2int(i.translate(n_trantab) + i)
            mismatch1_dh += mm_dh[external_index][internal_index]
            mismatch1_dg += mm_dg[external_index][internal_index]
        mismatch1_dh /= len(degenerate_base_dict[segment2[1]])
        mismatch1_dg /= len(degenerate_base_dict[segment2[1]])
    
    if segment2[-2] in basen_li:
        external_index = base2int(segment2[-1])
        internal_index = base2int(segment2[-2] + segment1[-2])
        mismatch2_dh = mm_dh[external_index][internal_index]
        mismatch2_dg = mm_dg[external_index][internal_index]
    else:
        for i in degenerate_base_dict[segment2[-2]]:
            external_index = base2int(segment2[-1])
            internal_index = base2int(i + i.translate(n_trantab))
            mismatch2_dh += mm_dh[external_index][internal_index]
            mismatch2_dg += mm_dg[external_index][internal_index]
        mismatch2_dh /= len(degenerate_base_dict[segment2[1]])
        mismatch2_dg /= len(degenerate_base_dict[segment2[1]])
    
    mismatch_dh = mismatch1_dh + mismatch2_dh
    mismatch_dg = mismatch1_dg + mismatch2_dg
    
    return [mismatch_dh, mismatch_dg]


def ATclosure_energy(segment1: str) -> list:
    closure_AT_dh = closure_AT_dg = 0
    if segment1[0] == "A" or segment1[0] == "T":
        closure_AT_dh += 3.2
    if segment1[-1] == "A" or segment1[-1] == "T":
        closure_AT_dh += 3.2
    return [closure_AT_dh, closure_AT_dg]
        
        

def asymmetric_int_loop_energy(
    segment1: str, segment2: str, loop_sum: int, loop_diff_abs: int, loop_type: list
) -> list:
    asymmetric_int_loop_dh = asymmetric_int_loop_dg = 0
    # loop sum initiation energy
    li_dh, li_dg = asymmetric_int_loop_initiation_energy(loop_sum)
    # asymmetry correct energy
    asymmetry_correct_dh, asymmetry_correct_dg = asymmetry_correct_energy(loop_diff_abs)
    # mismatch energy
    mm_dh, mm_dg = asymmetric_int_loop_mismatch_energy(segment1, segment2, loop_type)
    # AT closure 
    at_dh, at_dg = ATclosure_energy(segment1)
    asymmetric_int_loop_dh = li_dh + asymmetry_correct_dh + mm_dh + at_dh
    asymmetric_int_loop_dg = li_dg + asymmetry_correct_dg + mm_dg + at_dg
    return [asymmetric_int_loop_dh, asymmetric_int_loop_dg]

def int_loop_energy(segment1: str, segment2: str) -> list:
    """对intloop进行分型并计算能量"""
    int_loop_dh = 0
    int_loop_dg = 0


    
    first_loop_length = len(segment1) - segment1.count("-") - 2
    second_loop_length = len(segment2) - segment2.count("-") - 2 
    loop_sum = first_loop_length + second_loop_length
    max_loop_length = max(first_loop_length, second_loop_length)
    min_loop_length = loop_sum - max_loop_length
    loop_type = [min_loop_length, max_loop_length]
    is_symmetric = loop_sum <= 4 and max_loop_length < 3

    # 2 x 1, reverse
    if loop_sum == 3:
        if first_loop_length == 2:
            tmp = segment1[::-1]
            segment1 = segment2[::-1]
            segment2 = tmp
        # ensure - in -2
        if segment1[-2] != "-":
            segment1 = segment1[0] + segment1[-2] + "-" + segment1[-1]
    
    # 1×1, 1×2, 2×2 Internal Loops
    if is_symmetric:
        symmetric_int_loop_dh, symmetric_int_loop_dg = symmetric_int_loop_energy(segment1, segment2, loop_sum)
        int_loop_dh += symmetric_int_loop_dh
        int_loop_dg += symmetric_int_loop_dg
    # Other Internal Loops
    else:
        loop_diff_abs = abs(first_loop_length - second_loop_length)
        asymmetric_int_loop_dh, asymmetric_int_loop_dg = asymmetric_int_loop_energy(
            segment1, segment2, loop_sum, loop_diff_abs, loop_type
        )
        int_loop_dh += asymmetric_int_loop_dh
        int_loop_dg += asymmetric_int_loop_dg

    return [int_loop_dh, int_loop_dg]


def symmetry(seq):
    '''
    Return 1 if string is symmetrical, 0 otherwise.
    '''
    seq_len = len(seq)
    mp = seq_len // 2
    if seq_len % 2 == 1:return 0
    for i in range(mp):
        s = seq[i]
        e = seq[seq_len - i - 1]
        terminal_base_set={s,e}
        if terminal_base_set != {"A","T"} and terminal_base_set != {"C","G"}:return 0
    return 1


def divalent_to_monovalent(divalent,dntp):
    '''
    Convert divalent salt concentration to monovalent
    '''
    if divalent == 0:dntp = 0
    if divalent < dntp:divalent = dntp
    return 120 * sqrt((divalent - dntp))

def calc_Tm_by_NN(duplex_str: str, loop_region_dict: defaultdict) -> float:
    # init variable
    dH = dG = 0

    seq1, seq2 = duplex_str.split("\n")
    region_pos_li = loop_region_dict["region_pos"]
    region_type_li = loop_region_dict["region_type"]
    region_idx = 0
    while region_idx <= len(region_pos_li):
        start = region_pos_li[region_idx - 1] if region_idx != 0 else -1
        end = (
            region_pos_li[region_idx] if region_idx != len(region_pos_li) else len(seq1)
        )
        # stack
        if region_idx % 2 == 0 or region_idx == len(region_pos_li):
            start += 1
            end -= 1
            stack_length = end - start + 1
            # if stack length > 1, participate energy calc
            if stack_length > 1:
                segment = seq1[start : end + 1]
                stack_dh, stack_dg = stack_energy(segment)
                dH += stack_dh
                dG += stack_dg
        # loop
        else:
            # intermolecular initiation energy
            ii_dh, ii_dg = intermolecular_initiation_energy()
            dH += ii_dh
            dG += ii_dg
            loop_idx = region_idx // 2
            loop_type = region_type_li[loop_idx]
            loop_length = end - start + 1
            segment1 = seq1[start - 1:end + 2]
            segment2 = seq2[start - 1:end + 2]
            segment = segment2 if segment1.count("-") else segment1
            seq = seq2[::-1] if segment1.count("-") else seq1
            if not loop_type:  # bulge
                bulge_dh, bulge_dg = bulge_energy(segment, loop_length, seq, start)
                dH += bulge_dh
                dG += bulge_dg
            else:  # int loop
                int_loop_dh, int_loop_dg = int_loop_energy(segment1, segment2)
                dH += int_loop_dh
                dG += int_loop_dg 
        region_idx += 1       
        
    # calc Tm
    dS = (dH - dG) / 310.15 * 1000
    dH *= 1000
    Tm = 0
    print(f"\ndG is {dG}")
    print(f"dH is {dH}")
    print(f"dS is {dS}")
    
    # init values
    T_KELVIN = 273.15
    K_mM = 50
    base = 4000000000
    
    # salt params  
    DNA_nM = 50
    dmso_conc = 0
    dmso_fact = 0.6
    formamide_conc = 0.0
    divalent = 1.5
    dntp = 0.6
    
     # symmetry correction if seq is symmetrical
    sym = symmetry(seq1)
    if sym:
        dS += -1.4
        base /= 4
    
    # Terminal AT penalty 
    for i in [seq1[0],seq1[-1]]:
        if i in ["A","T"]:
            dS += 4.1
            dH += 2300
        else:
            dS += -2.8
            dH += 100
    
    
    GC_count = 0 if formamide_conc == 0.0 else (str.count(seq1,"C") + str.count(seq1,"G") + str.count(seq2,"C") + str.count(seq2,"G")) / 2
    K_mM += divalent_to_monovalent(divalent,dntp)
    dS += 0.368 * (len(seq1) - 1) * log(K_mM / 1000.0 )

    Tm = dH / (dS + 1.987 * log(DNA_nM / base)) - T_KELVIN
    Tm -= dmso_conc * dmso_fact
    Tm += (0.453 * GC_count / len(seq1) - 2.88) * formamide_conc
    print(f"Tm is {Tm}")
    return Tm
    

def main() -> None:
    duplex_str = "CCTGATTCTGTGGATAACC--ATTACCGCCTTTYAGTGAGCT\nGGACTAAGACACCTATTGGCATAATGGCGGAAACTCACTCGA"
    modified_str = modify_bases(duplex_str)
    loop_dict = loop_detective(modified_str)
    calc_Tm_by_NN(modified_str, loop_dict)
    

if __name__ == "__main__":
    main()